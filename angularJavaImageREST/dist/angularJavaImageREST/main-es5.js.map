{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/private/add-tags-dialog/add-tags-dialog.component.html","webpack:///src/app/private/add-tags-dialog/add-tags-dialog.component.ts","webpack:///src/app/private/change-email-third-party/change-email-third-party.component.ts","webpack:///src/app/private/change-email-third-party/change-email-third-party.component.html","webpack:///src/app/private/change-image-details-dialog/change-image-details-dialog.component.html","webpack:///src/app/private/change-image-details-dialog/change-image-details-dialog.component.ts","webpack:///src/app/private/change-password/change-password.component.ts","webpack:///src/app/private/change-password/change-password.component.html","webpack:///src/app/private/delete-user-account-dialog/delete-user-account-dialog.component.ts","webpack:///src/app/private/delete-user-account-dialog/delete-user-account-dialog.component.html","webpack:///src/app/private/edit-profile/edit-profile.component.ts","webpack:///src/app/private/edit-profile/edit-profile.component.html","webpack:///src/app/private/file-upload-wrapper/file-upload-wrapper.component.ts","webpack:///src/app/private/file-upload-wrapper/file-upload-wrapper.component.html","webpack:///src/app/private/file-upload/file-upload.component.html","webpack:///src/app/private/file-upload/file-upload.component.ts","webpack:///src/app/private/image-cropper/image-cropper.component.html","webpack:///src/app/private/image-cropper/image-cropper.component.ts","webpack:///src/app/private/password-reset-token-wrapper/password-reset-token-wrapper.component.ts","webpack:///src/app/private/password-reset-token-wrapper/password-reset-token-wrapper.component.html","webpack:///src/app/private/upload-image-dialog/upload-image-dialog.component.ts","webpack:///src/app/private/upload-image-dialog/upload-image-dialog.component.html","webpack:///src/app/public/bootstrap-playground/bootstrap-playground.component.ts","webpack:///src/app/public/bootstrap-playground/bootstrap-playground.component.html","webpack:///src/app/public/cropper-details-bar/cropper-details-bar.component.ts","webpack:///src/app/public/custom-search-bar-content/custom-search-bar-content.component.ts","webpack:///src/app/public/custom-search-bar-content/custom-search-bar-content.component.html","webpack:///src/app/public/custom-search-bar/custom-search-bar.component.ts","webpack:///src/app/public/custom-search-bar/custom-search-bar.component.html","webpack:///src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.html","webpack:///src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.ts","webpack:///src/app/public/download-cropper/download-cropper.component.html","webpack:///src/app/public/download-cropper/download-cropper.component.ts","webpack:///src/app/public/expired-token-refresh-dialog/expired-token-refresh-dialog.component.ts","webpack:///src/app/public/expired-token-refresh-dialog/expired-token-refresh-dialog.component.html","webpack:///src/app/public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component.ts","webpack:///src/app/public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component.html","webpack:///src/app/public/image-details/image-details.component.html","webpack:///src/app/public/image-details/image-details.component.ts","webpack:///src/app/public/image-item/image-item.component.ts","webpack:///src/app/public/image-item/image-item.component.html","webpack:///src/app/public/not-found-page/not-found-page.component.html","webpack:///src/app/public/not-found-page/not-found-page.component.ts","webpack:///src/app/public/pasword-reset.guard.ts","webpack:///src/app/public/profile/profile.component.html","webpack:///src/app/public/profile/profile.component.ts","webpack:///src/app/public/renew-expired-account-token-wrapper/renew-expired-account-token-wrapper.component.ts","webpack:///src/app/public/renew-expired-account-token/renew-expired-account-token.component.ts","webpack:///src/app/public/renew-expired-account-token/renew-expired-account-token.component.html","webpack:///src/app/public/search-toolbar/search.toolbar.component.ts","webpack:///src/app/public/search-toolbar/search.toolbar.component.html","webpack:///src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.html","webpack:///src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.ts","webpack:///src/app/public/startup/startup.component.ts","webpack:///src/app/public/startup/startup.component.html","webpack:///src/app/public/tag-view/tag-view.component.ts","webpack:///src/app/public/tag-view/tag-view.component.html","webpack:///src/app/public/verification-dialog-wrapper/verification-dialog-wrapper.component.ts","webpack:///src/app/public/verification-dialog/verification-dialog.component.ts","webpack:///src/app/public/verification-dialog/verification-dialog.component.html","webpack:///src/app/public/verify-tooltip.directive.ts","webpack:///src/app/public/verify-tooltip/verify-tooltip.component.ts","webpack:///src/app/public/verify-tooltip/verify-tooltip.component.html","webpack:///src/app/public/welcome/image-by-tag.component.ts","webpack:///src/app/public/welcome/image-by-tag.component.html","webpack:///src/app/security/auth-security.guard.ts","webpack:///src/app/security/cookie-auth-interceptor.service.ts","webpack:///src/app/serviceV2/crop-and-download-resolver.service.ts","webpack:///src/app/serviceV2/delete-image.service.ts","webpack:///src/app/serviceV2/device-observer.service.ts","webpack:///src/app/serviceV2/image-details-resolver.service.ts","webpack:///src/app/serviceV2/image-download.service.ts","webpack:///src/app/serviceV2/image-request.service.ts","webpack:///src/app/serviceV2/image-upload.service.ts","webpack:///src/app/serviceV2/media-processor.service.ts","webpack:///src/app/serviceV2/search-by-users.service.ts","webpack:///src/app/serviceV2/search.request.service.ts","webpack:///src/app/serviceV2/tag-request.service.ts","webpack:///src/app/serviceV2/update-image-details.service.ts","webpack:///src/app/serviceV2/update-user.service.ts","webpack:///src/app/serviceV2/user-authentication.service.ts","webpack:///src/app/shared/app-state/actions/address-validation-action.ts","webpack:///src/app/shared/app-state/actions/authentication-action.ts","webpack:///src/app/shared/app-state/actions/image.action.ts","webpack:///src/app/shared/app-state/actions/pass-data-to-dialog.action.ts","webpack:///src/app/shared/app-state/actions/query-tag-action.ts","webpack:///src/app/shared/app-state/actions/request-message.action.ts","webpack:///src/app/shared/app-state/actions/update-user-profile.action.ts","webpack:///src/app/shared/app-state/actions/user-details.action.ts","webpack:///src/app/shared/app-state/states/User-details.state.ts","webpack:///src/app/shared/app-state/states/ValidPasswordToken.state.ts","webpack:///src/app/shared/app-state/states/address.validation.state.ts","webpack:///src/app/shared/app-state/states/crop-image.state.ts","webpack:///src/app/shared/app-state/states/delete-image.state.ts","webpack:///src/app/shared/app-state/states/download-details.state.ts","webpack:///src/app/shared/app-state/states/get-base64-for-downloadCropper.state.ts","webpack:///src/app/shared/app-state/states/get-image-by-id.state.ts","webpack:///src/app/shared/app-state/states/images-by-tag-state.ts","webpack:///src/app/shared/app-state/states/images-by-user-id.state.ts","webpack:///src/app/shared/app-state/states/logged-user-details.state.ts","webpack:///src/app/shared/app-state/states/login.state.model.ts","webpack:///src/app/shared/app-state/states/pass-data-to-cropper-dialog.state.ts","webpack:///src/app/shared/app-state/states/prepare-cropped-for-download.state.ts","webpack:///src/app/shared/app-state/states/related-images.state.ts","webpack:///src/app/shared/app-state/states/request-status.state.ts","webpack:///src/app/shared/app-state/states/search-by-tag.state.ts","webpack:///src/app/shared/app-state/states/search-by-users.state.ts","webpack:///src/app/shared/app-state/states/select-image.state.ts","webpack:///src/app/shared/app-state/states/signup.state.ts","webpack:///src/app/shared/app-state/states/update-user-profile-image.state.ts","webpack:///src/app/shared/app-state/states/upload-image.state.ts","webpack:///src/app/shared/dialog-wrapper/login-dialog-wrapper.component.ts","webpack:///src/app/shared/dialog-wrapper/login-dialog-wrapper.component.html","webpack:///src/app/shared/domain/address-model/user-address-model.ts","webpack:///src/app/shared/domain/imageModel/ImagesByTagNameQuery.ts","webpack:///src/app/shared/domain/userModel/UserLoginModel.ts","webpack:///src/app/shared/domain/userModel/user-details.model.ts","webpack:///src/app/shared/image-content/image-content.component.ts","webpack:///src/app/shared/image-content/image-content.component.html","webpack:///src/app/shared/image-detail-view/image-detail-view.component.ts","webpack:///src/app/shared/image-detail-view/image-detail-view.component.html","webpack:///src/app/shared/image-row-mapper.ts","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/shared/service/address-validation.service.ts","webpack:///src/app/shared/signup/signup.component.html","webpack:///src/app/shared/signup/signup.component.ts","webpack:///src/app/shared/user-gallery/user-gallery.component.html","webpack:///src/app/shared/user-gallery/user-gallery.component.ts","webpack:///src/app/shared/util/Base64ToBlobConverter.ts","webpack:///src/app/shared/util/ShowEmailWasSentDialog.ts","webpack:///src/app/shared/util/blob-to-base64-pipe.ts","webpack:///src/app/verify-guard.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","image","AppRoutingModule","forRoot","imports","AppComponent","router","title","events","subscribe","evt","window","scrollTo","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","autoLogin","providers","PROVIDER_ID","provider","google_id","declarations","bootstrap","AddTagsDialogComponent","store","imageService","data","dialogRef","searchTerm$","addChip","selectable","removable","separatorKeysCodes","tagCtrl","pipe","value","console","log","dispatch","tags$","tagList","result","selectedImage","selectSnapshot","getSelectedImageId","tag","index","findIndex","tagModel","splice","$event","input","trim","selectedTag","getFetchedTagList","find","push","setValue","option","viewValue","tagInput","nativeElement","userId","loggedUserId","setTagToImage","imageId","tags","GetUserDetails","close","search","add","selected","saveTags","ChangeEmailThirdPartyComponent","ChangeImageDetailsDialogComponent","formBuilder","snackBar","updateImgService","deleteImageService","dialog","urlReference","isPublic","$detailsChanged","finishedDeleting","pressedDelete","getSelectedImage","formState","linkReference","urlValidator","$selectedImage","val","formGroup","group","tempPublic","get","length","next","errors","mrChange","img","changeImageDetails","status","open","duration","horizontalPosition","verticalPosition","error","user","item","ref","width","height","panelClass","getIsPublic","control","regExp","RegExp","forbidden","test","forbiddenValue","ChangePasswordComponent","userDetails","fb","userService","errorMsg","msg","requestStatus","errorMsgFromToken","showSpinner","initFormFields","oldPasswordFormField","compose","required","minLength","newPasswordFormField","confirmPwdFormField","oldPassword","newPassword","confirmPassword","confirmPwd","newPwd","setErrors","incorrect","controls","changeUserPassword","oldPwd","body","changeUserPasswordByToken","getUserId","getTokenId","maxWidth","minWidth","minHeight","maxHeight","text","message","checkPasswords","closeDialog","DeleteUserAccountDialogComponent","password","valueChanges","deleteUserAccount","pwd","Logout","deleteAccount","SearchUsers","EditProfileComponent","service","updateUserService","deviceObserver","firstNameControl","lastNameControl","emailControl","userNameControl","readOnlyEmail","readOnlyUserName","readOnlyFirstName","readOnlyLastName","emailValChange$","firstValChange$","lastValChange$","userNameValChange$","userDetailsChanged$","isMobile","getActiveDevice","device","loggedUser","loggedInUser","loginType","undefined","LoggedUserDetails","userDetailsResp","initFormGroup","firstName","lastName","email","emailValidator","username","userName","LoggedDetails","files","formData","FormData","append","UploadUserProfile","thirdPartyLogin","getFetchedUsers","forEach","baseUserDetails","profileImgPath","changeUserEmail","searchByUserName","userList","handleFileInput","firstNameChanged","lastNameOnChange","emailChanged","editEmail","userNameChanged","profileImg","mailformat","FileUploadWrapperComponent","route","media","paramMap","param","asObservable","mqAlias","MOBILE","TABLET","disableClose","autoFocus","FileUploadComponent","location","http","dialogRef2","media2","uploadService","deviceObserverService","isLinear","uploadSuccess","spinner","isValidating","showCropper","fooControl","imageUrlReference","isValidToUpload","displayCroppedImage","originalFileDimensions","url","foo","firstFormGroup","uploadCtr","typeIndex","addedFiles","name","lastIndexOf","type","substr","request","validateImage","reader","FileReader","onload","base64Temp","target","croppedGalleryImage","croppedDownloadViewImage","readAsDataURL","onRemove","imgData","getData","resizeWidth","resizeHeight","viewName","imgDimensions","originalWidth","originalHeight","isTablet","f","indexOf","loggedInUserModel","isP","galleryBase64","getGalleryFile","imageBlob","dataURItoBlob","imageFile","File","downloadBase64","getCroppedDownloadImage","downloadBlob","downloadImageFile","uploadModel","orgFile","validate","file","galleryFile","downloadFile","value1","Upload","base64","imageChangedEvent","changeStuff","onSelect","urlReferenceValidator","cropImageForDownloadView","ImageCropperComponent","cropperObj","cropper","x1","y1","x2","y2","resizedFactor","invertResizeFactor","disable","getComponentData","passedData","croppedImage","isPortraitFormat","DESKTOP","staticWidth","getStaticCropperWidthByViewAndDevice","staticHeight","getRatioByView","cropForView","cropped2","imgViewHeight","imgViewWidth","resizeFactor","inverseResizeFactor","getDesktopWidthByView","getDesktopHeightByView","isGalleryView","desktopGalleryHeight","isDownloadView","desktopDownloadHeight","desktopGalleryWidth","desktopDownloadWidth","galleryAspectRatio","downloadAspectRatio","getTabletWidthByView","getMobileWidthByView","mobileGalleryWidth","mobileDownloadWidth","tabletGalleryWidth","tabletDownloadWidth","PasswordResetTokenWrapperComponent","UploadImageDialogComponent","BootstrapPlaygroundComponent","CropperDetailsBarComponent","showFiller","clickPressed","CustomSearchBarContentComponent","focusMonitor","ngControl","enterPressed","valueChanged","focused","nextId","stateChanges","valueAccessor","form","scope","queryString","monitor","emit","event","ids","stopMonitoring","complete","fn","onTouch","onChange","isDisabled","disabled","_placeholder","patchValue","useExisting","getFetchedTagListAsOption","read","CustomSearchBarComponent","content","isOpen","disableIcon","clickedFilterDetails","openCloseSearchOptions","changedValue","contentTemp","clicked","DownloadCroppedImageDialogComponent","getCroppedValues","DownloadCropperComponent","downloadService","finishedLoadingImage","isDownLoadingImage","maintainAspectRatio","downloadError","maintainTest","croppedWidth","croppedHeight","loaded","originalRatio","$aspectRatioSubj","imageFileDetails","getFileDetails","extractImageIdFromRequest","widthInputField","heightInputField","ratio","cropperPosition","wasCropped","widthWithFactor","diffRatio","toFixed","Math","floor","heightWithFactor","aspectRatio","showAspectRatio","setTimeout","offsetY1","offsetX1","heightFactored","widthFactored","subImageWidth","subImageHeight","getImageDetail","detail","croppedDownloadRequest","selectedWidth","Number","parseFloat","split","selectedHeight","downloadIndividualImage","res","start","i","changedWidthFunc","getBase64","getRatioAsString","ExpiredTokenRefreshDialogComponent","authService","emailFormField","passwordFormField","renewToken","mail","ExpiredTokenRefreshWrapperComponent","ImageDetailsComponent","sanitizer","clickedDownloadResolution","downloadLink","size","contentType","toggle","formattedDetails","testImg","bypassSecurityTrustStyle","link","downloadDetails","href","imageDetail","navigate","getRelatedImages","getDetails","ImageItemComponent","rowHeight","gutterSize","rows","offsetHeight","calculateRows","NotFoundPageComponent","getStatus","ValidResetPasswordTokenResponse","PaswordResetGuard","state","tokenId","params","substring","providedIn","ProfileComponent","weekFilter","$imgs","$likeds","likes","requestError","editableProfile","getUserLikes","$userLikes","$userImages","model","UserDetails","errorMessage","$logged","label","tab","textLabel","imageWasLiked","firstLastName","getUserImages","RenewExpiredAccountTokenWrapperComponent","RenewExpiredAccountTokenComponent","SearchToolbarComponent","deviceService","disableSearchOptionsIcon","openCloseDetails","searchOption","mobile$","desktop$","filterOptions","timeFilterOptions","checked","mostDownloads","mostLiked","monthFilter","yearFilter","isTabletDevice","isDesktopDevice","isDesktop","isMobileDevice","filter","IsLoggedIn","Authentication","filters","Map","set","FILTER_BY_DATE_WEEK","FILTER_BY_DATE_MONTH","FILTER_BY_DATE_YEAR","map","filteredUser","el","timeFilter","valueOf","closeFilterDetails","isLoggedIn","loggedUsername","SetResolutionDownloadDialogComponent","widthFocus","heightFocus","isDownloading","imgSizeValidator","focusedInWidth","focusInHeight","StartupComponent","desktop","$mediaGetter","isDesktopDeviceLg","isDesktopDeviceXl","TagViewComponent","tagReqService","getAllTags","VerificationDialogWrapperComponent","VerificationDialogComponent","VerifyTooltipDirective","overlayPositionBuilder","elementRef","overlay","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","overlayRef","create","detach","$requestStatusCode","tooltipRef","attach","backdropClick","backdropElement","instance","getStatusCode","VerifyTooltipComponent","closeToolTip","sendEmail","ImageByTagComponent","AuthSecurityGuard","$test","CookieAuthInterceptorService","headers","clonedReq","clone","withCredentials","handle","USER_LOGIN","GOOGLE_LOGIN","USER_DETAILS","tokenError","hasBackdrop","statusText","CropAndDownloadResolverService","getImageBytes","byteArray","blob","Blob","getModel","DeleteImageService","post","DELETE_IMAGE_URL","observe","apiUrl","Device","DeviceObserverService","ImageDetailsResolverService","modelDetails","ImageDownloadService","base64Pipe","imageFileDetail","DOWNLOAD_BY_API_RESOLUTION_URL","croppedDetails","DOWNLOAD_BY_CROPPED_RESOLUTION_URL","DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL","responseType","ImageRequestService","$bSubject","SEARCH_URL","UPLOAD_PROFILE_IMAGE","UPLOAD_TAG","RELATED_IMAGES_BY_TAG_IDS","GET_API_RESOLTIONS","imgId","GET_IMAGE_BYTES_BY_ID_URL","ALL_IMAGES_BY_IMG_ID","x","ALL_IMAGES_BY_USERID","page","resp","err","ImageUploadService","UPLOAD_IMAGE","VALIDATE_IMAGE","MediaProcessorService","SearchByUsersService","searchReqService","SEARCH_BY_U_NAME_URL","SearchRequestService","searchTerm","getSearchResult","term","validateTerm","sendSearchRequest","terms","TagRequestService","secr","GET_TAGS","REQUEST_DELAY","UpdateImageDetailsService","UPDATE_IMAGE_DETAILS_URL","imageToUpdate","UpdateUserService","ADD_USER_LIKE","CHANGE_USER_EMAIL","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_FROM_TOKEN","DELETE_USER_ACCOUNT","changePassword","changePasswordRequest","UserAuthenticationService","USER_SIGNUP","USER_LOGOUT","AUTH_STATUS","RESET_PASSWORD_VALIDATE_TOKEN_ID","RESET_PASSWORD","VERIFY_TOKEN_REQUEST","userLoginModel","RENEW_TOKEN","userSignupModel","loginMethod","URL","GetZipCodesAndCitiesByRegion","zipcode","region","GetCountriesAction","GetRegionsAction","countryName","AuthenticationActions","LoginAction","LogoutAction","SignUpAction","userRegistration","ImagesByUserIDAction","ImagesByTagsAction","imagesByTag","ImagesNextPageAction","imageResponseModel","UploadImage","FilterByDate","limit","DeleteImage","SelectImage","GetDownloadDetails","GetImageByImageId","GetRelatedImagesByTagIDs","tagIds","GetImageAsByse64","CropAndDownload","CropDownloadViewImage","CropGalleryViewImage","AsignBase64ToOriginalImage","SetCroppedOffsetValues","offsetX","offsetY","AssignCropperPosToImageUpload","PassDataToDialogAction","QueryTagAction","RequestMessageAction","UpdateUserProfileActions","UploadUserProfileImg","UserDetailsActions","UserDetailsState","imageRequestService","ctx","action","getUserDetails","response","getState","images","setState","defaults","address","ValidPasswordTokenState","validatePasswordTokenId","patchState","AddressValidationState","addressService","getCountries","getRegionsByCountry","regions","getZipCodesAndCitiesByRegion2","zipCodesAndCity","CropImageState","downloadViewFile","tempFile","DeleteImageState","deleteService","deleteImage","DownloadDetailsState","downloadImage","fileDetails","GetBase64ForDownloadCropperState","GetImageByIdState","imgReqService","getImagesByImgId","newState","downloaded","liked","imageDetails","mobileImgPath","ImagesByTagState","filterOpt","dayFilterVal","filterByDays","getImagesByTag","tagName","mostDownloaded","imagResponseList","ImagesByUserIdState","getImagesByUserId","models","LoggedUserDetailsState","setUserProfile","LoginStateModel","login","logout","PassDataToCropperDialogState","PrepareCroppedForDownloadState","possibleResolutions","getResolutions","widthList","widthResolution","heightList","heightResolution","RelatedImagesState","imageReqService","getRelatedImagesByTagList","RequestStatusState","SearchByTagState","tagService","searchByTagName","SearchByUsersState","userSearchService","searchByEmail","users","SelectImageState","SignupState","createNewUser","UpdateUserProfileImageState","updateProfileService","UploadImageState","addToUserLibrary","LoginDialogWrapperComponent","UserAddressModel","street","country","FilterName","FILTER_BY_MOST_DOWNLOADS","FILTER_BY_MOST_LIKES","ImagesByTagNameWithFilterArgs","ImagesByTagNameWithFilterOpt","ImagesByTagNameQueryImpl","ImagesByTagNameStateModel","UserLoginModel","LoggedInUserModel","GoogleUserLogin","UserRegistrationModel","UserDetailsImpl","ImageContentComponent","cols","panelOpenState","hover","editable","Array","end","offset","evenRowLimit","imageRowViews","mapToImageRow","$loggedUserId","viewport","getRenderedRange","total","getDataLength","lastSeen","isProfile","afterAllClosed","addUserLike","ImageDetailViewComponent","closeFullscreen","getSelectedLink","ImageRowMapper","imageModels","countRow","countItem","rowModels","temp","row","LoginComponent","googleAuthService","pressedLogin","forgotPasswordPressed","openToolTip","connectedPosition","closeTooltip","setStatusToNull","variable","testing","signIn","photoUrl","idToken","value2","requestResetPasswordToken","AddressValidationService","COUNTRIES","REGIONS","ZIPCODES","SignupComponent","invalid","countries$","regions$","color","zipCodeAndCities$","countryFormField","lastNameFormField","firstNameFormField","cityFormField","streetFormField","regionFormField","zipCodeFormField","hasError","controlName","errorName","registrationModel$","zipAndCities","zipCode","city","enable","registrationModel","register","countries","zipCodesAndCities","UserGalleryComponent","$isOwner","$loggedUser","Base64ToBlobConverter","dataURI","byteString","atob","arrayBuffer","ArrayBuffer","int8Array","Uint8Array","charCodeAt","ShowEmailWasSentDialog","BlobToBase64Pipe","source","saveAs","VerifyGuardGuard","validateRequestTokenUrl","alreadyProcessed","environment","production","tabletGalleryHeight","mobileGalleryHeight","tabletDownloadHeight","mobileDownloadHeight","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SignupComponent} from \"./shared/signup/signup.component\";\r\nimport {ProfileComponent} from \"./public/profile/profile.component\";\r\nimport {ImageByTagComponent} from \"./public/welcome/image-by-tag.component\";\r\nimport {AuthSecurityGuard} from \"./security/auth-security.guard\";\r\nimport {LoginDialogWrapperComponent} from \"./shared/dialog-wrapper/login-dialog-wrapper.component\";\r\nimport {FileUploadComponent} from \"./private/file-upload/file-upload.component\";\r\nimport {FileUploadWrapperComponent} from \"./private/file-upload-wrapper/file-upload-wrapper.component\";\r\nimport {UserGalleryComponent} from \"./shared/user-gallery/user-gallery.component\";\r\nimport {EditProfileComponent} from \"./private/edit-profile/edit-profile.component\";\r\nimport {ImageDetailsComponent} from \"./public/image-details/image-details.component\";\r\nimport {ImageDetailsResolverService} from \"./serviceV2/image-details-resolver.service\";\r\nimport {ProfileResolverService} from \"./public/profile/profile-resolver.service\";\r\nimport {DownloadCropperComponent} from \"./public/download-cropper/download-cropper.component\";\r\nimport {CropAndDownloadResolverService} from \"./serviceV2/crop-and-download-resolver.service\";\r\nimport {StartupComponent} from \"./public/startup/startup.component\";\r\nimport {NotFoundPageComponent} from \"./public/not-found-page/not-found-page.component\";\r\nimport {ImageCropperComponent} from \"./private/image-cropper/image-cropper.component\";\r\nimport {TagViewComponent} from \"./public/tag-view/tag-view.component\";\r\nimport {VerificationDialogComponent} from \"./public/verification-dialog/verification-dialog.component\";\r\nimport {VerificationDialogWrapperComponent} from \"./public/verification-dialog-wrapper/verification-dialog-wrapper.component\";\r\nimport {ExpiredTokenRefreshWrapperComponent} from \"./public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component\";\r\nimport {VerifyGuardGuard} from \"./verify-guard.guard\";\r\nimport {PasswordResetTokenWrapperComponent} from \"./private/password-reset-token-wrapper/password-reset-token-wrapper.component\";\r\nimport {PaswordResetGuard} from \"./public/pasword-reset.guard\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'welcome',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginDialogWrapperComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'upload',\r\n    component: FileUploadWrapperComponent,\r\n    canActivate: [AuthSecurityGuard]\r\n  },\r\n  {\r\n    path: 'welcome',\r\n    component: StartupComponent\r\n  },\r\n  {\r\n    path: 'welcome:test',\r\n    component: StartupComponent\r\n  },\r\n  {\r\n    path: 'image-by-tags',\r\n    component: ImageByTagComponent\r\n  },\r\n  {\r\n    path: 'gallery',\r\n    component: UserGalleryComponent\r\n  },\r\n  {\r\n    path: 'crop-download',\r\n    component: DownloadCropperComponent,\r\n    resolve : { image: CropAndDownloadResolverService }\r\n  },\r\n  {\r\n    path: 'image',\r\n    component: ImageDetailsComponent,\r\n    resolve : { image: ImageDetailsResolverService }\r\n  },\r\n  {\r\n    path: 'edit-profile',\r\n    component: EditProfileComponent,\r\n    canActivate: [AuthSecurityGuard]\r\n  },\r\n  {\r\n    path: 'not-found',\r\n    component: NotFoundPageComponent\r\n  },\r\n  {\r\n    path: 'tag-view',\r\n    component: TagViewComponent\r\n  },\r\n  {\r\n    path: 'verify',\r\n    component: VerificationDialogWrapperComponent,\r\n    canActivate: [VerifyGuardGuard]\r\n  },\r\n  {\r\n    path: 'verify:id',\r\n    component: VerificationDialogWrapperComponent,\r\n    canActivate: [VerifyGuardGuard]\r\n  },\r\n  {\r\n    path: 'renew-password/:id',\r\n    component: PasswordResetTokenWrapperComponent,\r\n    canActivate: [PaswordResetGuard]\r\n  },\r\n  {\r\n    path: 'expired-token-refresh',\r\n    component: ExpiredTokenRefreshWrapperComponent\r\n  },\r\n  {\r\n    path: 'expired-token-refresh/:valid',\r\n    component: PasswordResetTokenWrapperComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'angularJavaImageREST';\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0)\n    });\n  }\n}\n","\n<!--<app-welcome></app-welcome>-->\n\n<!--<app-signup></app-signup>-->\n\n\n<router-outlet></router-outlet>\n","import {BrowserModule, HammerModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkScrollableModule, ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {SearchToolbarComponent} from './public/search-toolbar/search.toolbar.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {ImageByTagComponent} from './public/welcome/image-by-tag.component';\r\nimport {NgxsModule} from \"@ngxs/store\";\r\nimport {NgxsLoggerPluginModule} from \"@ngxs/logger-plugin\";\r\nimport {ImagesByTagState} from \"./shared/app-state/states/images-by-tag-state\";\r\nimport {SearchByTagState} from \"./shared/app-state/states/search-by-tag.state\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatDividerModule} from \"@angular/material/divider\";\r\nimport {ImageContentComponent} from './shared/image-content/image-content.component';\r\nimport {MatGridListModule} from \"@angular/material/grid-list\";\r\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\r\nimport {SignupComponent} from './shared/signup/signup.component';\r\nimport {CookieAuthInterceptorService} from \"./security/cookie-auth-interceptor.service\";\r\nimport {LoginStateModel} from \"./shared/app-state/states/login.state.model\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from \"@angular/material/core\";\r\nimport {LoginComponent} from './shared/login/login.component';\r\nimport {AddressValidationState} from \"./shared/app-state/states/address.validation.state\";\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {SignupState} from \"./shared/app-state/states/signup.state\";\r\nimport {ProfileComponent} from './public/profile/profile.component';\r\nimport {LoginDialogWrapperComponent} from './shared/dialog-wrapper/login-dialog-wrapper.component';\r\nimport {NgxsRouterPluginModule} from \"@ngxs/router-plugin\";\r\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {UserDetailsState} from \"./shared/app-state/states/User-details.state\";\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {ImagesByUserIdState} from \"./shared/app-state/states/images-by-user-id.state\";\r\nimport {FileUploadComponent} from './private/file-upload/file-upload.component';\r\nimport {NgxDropzoneModule} from \"ngx-dropzone\";\r\nimport {FileUploadWrapperComponent} from './private/file-upload-wrapper/file-upload-wrapper.component';\r\nimport {UploadImageState} from \"./shared/app-state/states/upload-image.state\";\r\nimport {UserGalleryComponent} from './shared/user-gallery/user-gallery.component';\r\nimport {ImageDetailViewComponent} from './shared/image-detail-view/image-detail-view.component';\r\nimport {SelectImageState} from \"./shared/app-state/states/select-image.state\";\r\nimport {EditProfileComponent} from './private/edit-profile/edit-profile.component';\r\nimport {AuthenticationActions} from \"./shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {LoggedUserDetailsState} from \"./shared/app-state/states/logged-user-details.state\";\r\nimport {AddTagsDialogComponent} from './private/add-tags-dialog/add-tags-dialog.component';\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport {UpdateUserProfileImageState} from \"./shared/app-state/states/update-user-profile-image.state\";\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {VirtualScrollerModule} from 'ngx-virtual-scroller';\r\nimport {SocialLoginModule, SocialAuthServiceConfig} from 'angularx-social-login';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n  AmazonLoginProvider,\r\n} from 'angularx-social-login';\r\nimport {ImageCropperModule} from 'ngx-image-cropper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {environment} from \"../environments/environment\";\r\nimport {ChangeImageDetailsDialogComponent} from './private/change-image-details-dialog/change-image-details-dialog.component';\r\nimport {FileSaverModule} from \"ngx-filesaver\";\r\nimport {DeleteImage, GetRelatedImagesByTagIDs} from \"./shared/app-state/actions/image.action\";\r\nimport {DeleteImageState} from \"./shared/app-state/states/delete-image.state\";\r\nimport {ImageCropperComponent} from './private/image-cropper/image-cropper.component';\r\nimport {CropImageState} from \"./shared/app-state/states/crop-image.state\";\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {ImageDetailsComponent} from './public/image-details/image-details.component';\r\nimport {DownloadDetailsState} from \"./shared/app-state/states/download-details.state\";\r\nimport {GetImageByIdState} from \"./shared/app-state/states/get-image-by-id.state\";\r\nimport {RelatedImagesState} from \"./shared/app-state/states/related-images.state\";\r\nimport {SearchByUsersState} from \"./shared/app-state/states/search-by-users.state\";\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {UploadImageDialogComponent} from './private/upload-image-dialog/upload-image-dialog.component';\r\nimport {DownloadCropperComponent} from './public/download-cropper/download-cropper.component';\r\nimport {GetBase64ForDownloadCropperState} from \"./shared/app-state/states/get-base64-for-downloadCropper.state\";\r\nimport {PrepareCroppedForDownloadState} from \"./shared/app-state/states/prepare-cropped-for-download.state\";\r\nimport {DownloadCroppedImageDialogComponent} from './public/download-cropped-image-dialog/download-cropped-image-dialog.component';\r\nimport {StartupComponent} from './public/startup/startup.component';\r\nimport {SetResolutionDownloadDialogComponent} from './public/set-resolution-download-dialog/set-resolution-download-dialog.component';\r\nimport {RequestStatusState} from \"./shared/app-state/states/request-status.state\";\r\nimport {NotFoundPageComponent} from './public/not-found-page/not-found-page.component';\r\nimport {BootstrapPlaygroundComponent} from './public/bootstrap-playground/bootstrap-playground.component';\r\nimport {ExtendedModule, FlexModule} from \"@angular/flex-layout\";\r\nimport {ChangeEmailThirdPartyComponent} from './private/change-email-third-party/change-email-third-party.component';\r\nimport {PassDataToCropperDialogState} from \"./shared/app-state/states/pass-data-to-cropper-dialog.state\";\r\nimport { CropperDetailsBarComponent } from './public/cropper-details-bar/cropper-details-bar.component';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { ImageItemComponent } from './public/image-item/image-item.component';\r\n\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\nimport { ChangePasswordComponent } from './private/change-password/change-password.component';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { CustomSearchBarComponent } from './public/custom-search-bar/custom-search-bar.component';\r\nimport { CustomSearchBarContentComponent } from './public/custom-search-bar-content/custom-search-bar-content.component';\r\nimport { DeleteUserAccountDialogComponent } from './private/delete-user-account-dialog/delete-user-account-dialog.component';\r\nimport { TagViewComponent } from './public/tag-view/tag-view.component';\r\nimport { VerificationDialogComponent } from './public/verification-dialog/verification-dialog.component';\r\nimport { VerificationDialogWrapperComponent } from './public/verification-dialog-wrapper/verification-dialog-wrapper.component';\r\nimport { RenewExpiredAccountTokenComponent } from './public/renew-expired-account-token/renew-expired-account-token.component';\r\nimport { RenewExpiredAccountTokenWrapperComponent } from './public/renew-expired-account-token-wrapper/renew-expired-account-token-wrapper.component';\r\nimport { ExpiredTokenRefreshWrapperComponent } from './public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component';\r\nimport { ExpiredTokenRefreshDialogComponent } from './public/expired-token-refresh-dialog/expired-token-refresh-dialog.component';\r\nimport { PasswordResetTokenWrapperComponent } from './private/password-reset-token-wrapper/password-reset-token-wrapper.component';\r\nimport {ValidPasswordTokenState} from \"./shared/app-state/states/ValidPasswordToken.state\";\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {A11yModule} from \"@angular/cdk/a11y\";\r\nimport { VerifyTooltipDirective } from './public/verify-tooltip.directive';\nimport { VerifyTooltipComponent } from './public/verify-tooltip/verify-tooltip.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchToolbarComponent,\r\n    ImageByTagComponent,\r\n    ImageContentComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    LoginDialogWrapperComponent,\r\n    FileUploadComponent,\r\n    FileUploadWrapperComponent,\r\n    UserGalleryComponent,\r\n    ImageDetailViewComponent,\r\n    EditProfileComponent,\r\n    AddTagsDialogComponent,\r\n    ChangeImageDetailsDialogComponent,\r\n    ImageCropperComponent,\r\n    ImageDetailsComponent,\r\n    UploadImageDialogComponent,\r\n    DownloadCropperComponent,\r\n    DownloadCroppedImageDialogComponent,\r\n    StartupComponent,\r\n    SetResolutionDownloadDialogComponent,\r\n    NotFoundPageComponent,\r\n    BootstrapPlaygroundComponent,\r\n    ChangeEmailThirdPartyComponent,\r\n    CropperDetailsBarComponent,\r\n    ImageItemComponent,\r\n    ChangePasswordComponent,\r\n    CustomSearchBarComponent,\r\n    CustomSearchBarContentComponent,\r\n    DeleteUserAccountDialogComponent,\r\n    TagViewComponent,\r\n    DeleteUserAccountDialogComponent,\r\n    VerificationDialogComponent,\r\n    VerificationDialogWrapperComponent,\r\n    RenewExpiredAccountTokenComponent,\r\n    RenewExpiredAccountTokenWrapperComponent,\r\n    ExpiredTokenRefreshWrapperComponent,\r\n    ExpiredTokenRefreshDialogComponent,\r\n    PasswordResetTokenWrapperComponent,\r\n    VerifyTooltipDirective,\r\n    VerifyTooltipComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    OverlayModule,\r\n    FileSaverModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    HammerModule,\r\n    ImageCropperModule,\r\n    MatSlideToggleModule,\r\n    MatTooltipModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatChipsModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    MatStepperModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    VirtualScrollerModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatNativeDateModule,\r\n    MatDialogModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ScrollingModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    NgxDropzoneModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SocialLoginModule,\r\n    NgxsModule.forRoot([\r\n      PassDataToCropperDialogState,\r\n      ImagesByTagState,\r\n      SearchByTagState,\r\n      LoginStateModel,\r\n      AddressValidationState,\r\n      RelatedImagesState,\r\n      GetImageByIdState,\r\n      SignupState,\r\n      UserDetailsState,\r\n      DownloadDetailsState,\r\n      SearchByUsersState,\r\n      ImagesByUserIdState,\r\n      UploadImageState,\r\n      SelectImageState,\r\n      LoggedUserDetailsState,\r\n      UpdateUserProfileImageState,\r\n      DeleteImageState,\r\n      CropImageState,\r\n      ValidPasswordTokenState,\r\n      GetBase64ForDownloadCropperState,\r\n      PrepareCroppedForDownloadState,\r\n      RequestStatusState\r\n    ]),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    MatDatepickerModule,\r\n    MatChipsModule,\r\n    FlexModule,\r\n    ExtendedModule,\r\n    A11yModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CookieAuthInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: LocationStrategy, useClass: HashLocationStrategy\r\n    },\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              environment.google_id\r\n            ),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule {\r\n}\r\n","<div class=\"container\">\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\n    Add tags\n  </h2>\n  <mat-divider></mat-divider>\n  <br>\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\n    Image : <strong>{{data.name}}</strong>\n  </h4>\n  <img width=\"380px\" height=\"400px\"\n       class=\"img-content\"\n       [src]=\"data.link\" alt=\"\">\n  <div class=\"tag-input\">\n    <mat-form-field style=\"width: 100%\">\n      <mat-chip-list #chipList aria-label=\"Tag selection\">\n        <mat-chip\n          *ngFor=\"let tag of addChip\"\n          [selectable]=\"selectable\"\n          [removable]=\"removable\"\n          (removed)=\"remove(tag)\">\n          {{tag.tag}}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip>\n        <input matInput\n               (keyup.enter)=\"search(element.value)\"\n               id=\"search-input\" type=\"text\" #element\n               (keyup)=\"searchTerm$.next($event.target.value)\"\n               #tagInput\n               placeholder=\"New tag\"\n               [formControl]=\"tagCtrl\"\n               [matAutocomplete]=\"auto\"\n               [matChipInputFor]=\"chipList\"\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n               (matChipInputTokenEnd)=\"add($event)\">\n      </mat-chip-list>\n      <mat-autocomplete #auto=\"matAutocomplete\"\n                        (optionSelected)=\"selected($event)\">\n        <mat-option *ngFor=\"let option of tagList\"\n                    [value]=\"option.tag\">\n          {{option.tag}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n<button (click)=\"saveTags()\" mat-raised-button>Save</button>\n</div>\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {debounceTime, filter, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport {FormControl} from \"@angular/forms\";\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\n\n@Component({\n  selector: 'app-add-tags-dialog',\n  templateUrl: './add-tags-dialog.component.html',\n  styleUrls: ['./add-tags-dialog.component.scss']\n})\nexport class AddTagsDialogComponent implements OnInit {\n  searchTerm$ = new Subject<string>();\n  tagList: TagModel[];\n  addChip: TagModel[] = [];\n\n  @Select(SearchByTagState) tags$: Observable<TagQueryList>;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  selectedImage: string;\n\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private store: Store,\n              private imageService: ImageRequestService,\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\n              private dialogRef: MatDialogRef<AddTagsDialogComponent>) {\n  }\n\n  ngOnInit(): void {\n\n    this.searchTerm$\n      .pipe(debounceTime(1000))\n      .subscribe(value => {\n        console.log(value)\n        this.store.dispatch(\n          new QueryTagAction(new BehaviorSubject(value))\n        )\n      });\n    this.tags$.subscribe(value => this.tagList = value.result)\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n  }\n\n  search(value: string) {\n\n  }\n\n  remove(tag: TagModel) {\n    const index = this.addChip\n      .findIndex(tagModel => tagModel.tag === tag.tag);\n    if (index >= 0)\n      this.addChip.splice(index, 1);\n\n  }\n\n  add($event: MatChipInputEvent) {\n    const input = $event.input;\n    const value = $event.value;\n    if ((value || '').trim()) {\n      const selectedTag = this.store\n        .selectSnapshot(SearchByTagState.getFetchedTagList)\n        .find(tag => tag.tag === value);\n      if (selectedTag) this.addChip.push(selectedTag)\n    }\n    if (input) {\n      input.value = '';\n    }\n    this.tagCtrl.setValue(null)\n    // this.tagList.push(value);\n  }\n\n  selected($event: MatAutocompleteSelectedEvent): void {\n    const selectedTag = this.store\n      .selectSnapshot(SearchByTagState.getFetchedTagList)\n      .find(tag => tag.tag === $event.option.viewValue);\n    if (selectedTag) this.addChip.push(selectedTag)\n    this.tagInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n    console.log(\"SEAS?\");\n  }\n\n  saveTags(): void {\n    const selectedImage: string = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n    const userId =\n      this.store.selectSnapshot(LoginStateModel.loggedUserId);\n    this.imageService.setTagToImage({\n        userId: userId,\n        imageId: selectedImage,\n        tags: this.addChip\n      }\n    ).subscribe(value => {\n      // this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(userId));\n      this.dialogRef.close();\n      // this.store\n      //   .dispatch(new ImagesByUserIDAction(userId))\n      //   .subscribe(value1 => {\n      //     this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      //     this.dialogRef.close();\n      //   })\n    })\n    this.addChip = [];\n    this.tagCtrl.setValue(null);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-email-third-party',\n  templateUrl: './change-email-third-party.component.html',\n  styleUrls: ['./change-email-third-party.component.scss']\n})\nexport class ChangeEmailThirdPartyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>change-email-third-party works!</p>\n","<div class=\"container\" *ngIf=\"$selectedImage | async as img\">\r\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\r\n    <strong>Change image details</strong>\r\n  </h2>\r\n  <mat-divider></mat-divider>\r\n  <br>\r\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\r\n    Image : <strong>{{data.name}}</strong>\r\n  </h4>\r\n\r\n  <div id=\"access-type\">\r\n<!--    <p><strong>Choose Access type :</strong></p>-->\r\n    <a matTooltip=\"When you change to private your images can not be viewed by the community\"\r\n       matTooltipPosition=\"below\"\r\n       style=\"color: black; margin-right: 15px; margin-bottom: 5px\"\r\n       disabled disableRipple mat-icon-button>\r\n      <mat-icon>lock</mat-icon>\r\n      <span>Private</span>\r\n    </a>\r\n    <mat-slide-toggle (change)=\"changeStuff($event)\"\r\n                      style=\"margin-left: 20px\" [(ngModel)]=\"tempPublic\"></mat-slide-toggle>\r\n    <a matTooltip=\"When you change to public your images can be viewed by the community\"\r\n       matTooltipPosition=\"below\"\r\n       style=\"color: black; margin-left: 10px; margin-bottom: 3px\"\r\n       disabled disableRipple mat-icon-button>\r\n      <mat-icon>public</mat-icon>\r\n      <span>Public</span>\r\n    </a>\r\n  </div>\r\n\r\n  <div *ngIf=\"$selectedImage | async as img\" class=\"image-details\">\r\n    <img\r\n         class=\"img-content\"\r\n         [src]=\"img.link\" alt=\"\">\r\n\r\n    <div class=\"image-detail\">\r\n      <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n        <mat-icon>cloud_download</mat-icon>\r\n        <span>Downloads</span>\r\n      </a>\r\n      <h2 id=\"downloaded\"><strong>{{img.downloaded}}</strong></h2>\r\n      <h5 id=\"testus\">+ {{img.downloaded}} downloads since last month</h5>\r\n      <mat-divider></mat-divider>\r\n\r\n      <!--<div class=\"image-views\">\r\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n          <mat-icon>visibility</mat-icon>\r\n          <span>Views</span>\r\n        </a>\r\n        <h2 id=\"views\"><strong>{{img.downloaded}}</strong></h2>\r\n        <h5>+ {{img.downloaded}} view since last month</h5>\r\n        <mat-divider></mat-divider>\r\n      </div>-->\r\n      <div class=\"image-likes\">\r\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n          <mat-icon>thumb_up</mat-icon>\r\n          <span>Likes</span>\r\n        </a>\r\n        <h2 id=\"likes\"><strong>{{img.liked}}</strong></h2>\r\n        <h5>+ {{img.liked}} view since last month</h5>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n\r\n  <a style=\"color: black\" mat-icon-button disabled class=\"link_ref_label\">\r\n    <mat-icon>public</mat-icon>\r\n    URL link reference :\r\n  </a>\r\n  <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\r\n    <mat-label>URL to image</mat-label>\r\n    <input matInput (ngModelChange)=\"urlReferenceValidator()\"\r\n           [formControl]=\"urlReference\"\r\n           placeholder=\"http:\\\\www.xxx.com\">\r\n    <!--<mat-error>Invalid url</mat-error>-->\r\n    <mat-error *ngIf=\"urlReference.errors\">Entered URL is invalid</mat-error>\r\n  </mat-form-field>\r\n\r\n  <button style=\"margin-right: 5px\" color=\"primary\" *ngIf=\"$detailsChanged | async\" mat-raised-button (click)=\"saveChanges()\">Save changes</button>\r\n  <button id=\"del_btn\" mat-raised-button (click)=\"deleteImage(img)\">Delete image</button>\r\n  <button (click)=\"addTags(img)\" class=\"add-tags\" mat-raised-button>Add Tags</button>\r\n  <mat-spinner *ngIf=\"pressedDelete && finishedDeleting === false\">\r\n\r\n  </mat-spinner>\r\n\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {MatRadioChange} from \"@angular/material/radio\";\r\nimport {AbstractControl, FormBuilder, FormControl, ValidatorFn} from \"@angular/forms\";\r\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\r\nimport {DeleteImage, SelectImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {FocusMonitor} from \"@angular/cdk/a11y\";\r\nimport {Subject} from \"rxjs\";\r\nimport {UpdateImageDetailsService} from \"../../serviceV2/update-image-details.service\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {DeleteImageService} from \"../../serviceV2/delete-image.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {AddTagsDialogComponent} from \"../add-tags-dialog/add-tags-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-change-image-details-dialog',\r\n  templateUrl: './change-image-details-dialog.component.html',\r\n  styleUrls: ['./change-image-details-dialog.component.scss']\r\n})\r\nexport class ChangeImageDetailsDialogComponent implements OnInit {\r\n  urlReference = new FormControl('');\r\n  isPublic = new FormControl(false);\r\n  @Select(SelectImageState.getSelectedImage) $selectedImage;\r\n  @Select(SelectImageState.getIsPublic) $isPublic;\r\n  public formGroup;\r\n  public selectedImage: ImageModel;\r\n  public $detailsChanged = new Subject<boolean>();\r\n  public tempPublic: boolean;\r\n  public finishedDeleting = null;\r\n  public pressedDelete = false;\r\n\r\n\r\n  constructor(private store: Store,\r\n              private imageService: ImageRequestService,\r\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\r\n              private formBuilder: FormBuilder,\r\n              private snackBar: MatSnackBar,\r\n              private dialogRef: MatDialogRef<ChangeImageDetailsDialogComponent>,\r\n              private updateImgService: UpdateImageDetailsService,\r\n              private deleteImageService: DeleteImageService,\r\n              private router: Router,\r\n              private dialog: MatDialog,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImage);\r\n    const formState = this.selectedImage.linkReference === 'null' ?\r\n      \"\" : this.selectedImage.linkReference;\r\n    this.urlReference = new FormControl(formState, [urlValidator(formState)]);\r\n    this.$selectedImage.subscribe(val => console.log(val.public))\r\n    this.isPublic = new FormControl(this.selectedImage.isPublic);\r\n\r\n    console.log(this.store.selectSnapshot(SelectImageState.getSelectedImage));\r\n\r\n    this.formGroup = this.formBuilder\r\n      .group({urlReference: this.urlReference, tempPublic: this.selectedImage.linkReference})\r\n\r\n    this.tempPublic = this.selectedImage.isPublic;\r\n\r\n  }\r\n\r\n  public urlReferenceValidator(): void {\r\n    let value = this.formGroup.get('urlReference').value;\r\n    if (this.selectedImage.linkReference === 'null' && this.urlReference.value.length === 0) {\r\n      this.$detailsChanged.next(false);\r\n    } else if (this.selectedImage.linkReference !== value && this.urlReference.errors === null) {\r\n      this.$detailsChanged.next(true);\r\n    } else this.$detailsChanged.next(false);\r\n  }\r\n\r\n  public changeStuff(mrChange: MatRadioChange): void {\r\n    if (this.selectedImage.isPublic !== this.tempPublic) {\r\n      this.$detailsChanged.next(true);\r\n    } else { this.$detailsChanged.next(false); }\r\n\r\n  }\r\n\r\n  changeDetails(img: ImageModel): void {\r\n    console.log(this.selectedImage);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.selectedImage.isPublic = this.tempPublic;\r\n    this.selectedImage.linkReference =\r\n      this.urlReference.value.length === 0 ? null : this.urlReference.value;\r\n    console.log(this.tempPublic);\r\n    this.updateImgService\r\n      .changeImageDetails(this.selectedImage)\r\n      .subscribe(value => {\r\n        if (value.status === 200) {\r\n          this.snackBar.open(\r\n            'Image details update was successful.',\r\n            'Details updated',\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'top'\r\n            }\r\n          );\r\n          this.$detailsChanged.next(false);\r\n        }\r\n      });\r\n\r\n    console.log(this.selectedImage)\r\n  }\r\n\r\n  public deleteImage(img: ImageModel): void {\r\n    console.log(img);\r\n    this.pressedDelete = true;\r\n    this.finishedDeleting = false;\r\n    this.store\r\n      .dispatch(new DeleteImage(img))\r\n      .subscribe(value => console.log(value),\r\n        error => {\r\n          this.snackBar.open('Deleting image was not successful',\r\n            null,\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: \"top\"\r\n            });\r\n        },\r\n        () => {\r\n          this.snackBar.open(\"Deleting image was successful\",\r\n            null,\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: \"center\",\r\n              verticalPosition: \"top\"\r\n            });\r\n          this.dialogRef.close();\r\n          this.store.dispatch(new UserDetailsActions\r\n            .GetUserDetails(this.store\r\n              .selectSnapshot(SelectImageState.getSelectedImage).user.userId));\r\n          /*this.store.dispatch(new Navigate(\r\n            [\r\n              'profile',\r\n              {\r\n                userId: this.store.selectSnapshot(SelectImageState.getSelectedImage).user.userId\r\n              }\r\n            ]\r\n          ));*/\r\n        });\r\n\r\n  }\r\n\r\n  addTags(item: ImageModel) {\r\n    const ref = new MatDialogConfig();\r\n    // ref.disableClose = true;\r\n    this.store.dispatch(new SelectImage(item))\r\n    this.dialog.open(AddTagsDialogComponent,\r\n      {\r\n        width: '500px',\r\n        height: '750px',\r\n        data: item,\r\n        panelClass: 'add-tag-dialog'\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function urlValidator(value: string): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const regExp =\r\n      new RegExp('^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,}(:[0-9]{1,5})?(\\\\/.*)?$');\r\n    const forbidden = regExp.test(control.value) === false;\r\n    /*this.$detailsChanged.next(this.selectedImage.linkReference !== value);*/\r\n    console.log(forbidden);\r\n    console.log(control.value);\r\n    return control.value.length === 0 ? null :\r\n      forbidden || control.value > 0 ?\r\n      {forbiddenValue: {value: control.value}} :\r\n        null;\r\n  };\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {ImageCropperComponent} from \"../image-cropper/image-cropper.component\";\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SearchViewModel} from \"../../public/search-toolbar/search-view.model\";\r\nimport {ValidPasswordTokenState} from \"../../shared/app-state/states/ValidPasswordToken.state\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  oldPasswordFormField: any;\r\n  newPasswordFormField: any;\r\n  confirmPwdFormField: any;\r\n  errorMsg: {\r\n    error: boolean;\r\n    msg: string;\r\n  } = { error: true, msg: ''};\r\n  requestStatus: {\r\n    status: boolean,\r\n    errorMsg: string\r\n  } = { status: false, errorMsg: ''};\r\n\r\n  errorMsgFromToken: string = null;\r\n  showSpinner = false;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public userDetails: BaseUserDetails,\r\n              private dialogRef: MatDialogRef<ChangePasswordComponent>,\r\n              private fb: FormBuilder,\r\n              private userService: UpdateUserService,\r\n              private store: Store,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initFormFields();\r\n    console.log(this.userDetails);\r\n\r\n  }\r\n\r\n  get oldPwd(): string {\r\n    return this.formGroup.get('oldPassword').value;\r\n  }\r\n\r\n  get newPwd(): string {\r\n    return this.formGroup.get('newPassword').value;\r\n  }\r\n  get confirmPwd(): string {\r\n    return this.formGroup.get('confirmPassword').value;\r\n  }\r\n\r\n  get newPwdControl(): AbstractControl {\r\n    return this.formGroup.get('oldPassword');\r\n  }\r\n\r\n\r\n  private initFormFields() {\r\n    this.oldPasswordFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ]));\r\n    this.newPasswordFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required\r\n      ]));\r\n    this.confirmPwdFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required\r\n      ]));\r\n    this.formGroup = this.fb.group({\r\n      oldPassword: this.oldPasswordFormField,\r\n      newPassword: this.newPasswordFormField,\r\n      confirmPassword: this.confirmPwdFormField\r\n    });\r\n  }\r\n\r\n  checkPasswords() {\r\n    console.log(this.formGroup.get('confirmPassword').errors === null);\r\n    console.log(this.formGroup.get('newPassword').errors === null);\r\n    if (this.formGroup.get('confirmPassword').value.length > 5 &&\r\n      this.formGroup.get('newPassword').value.length > 5) {\r\n      if (this.confirmPwd === this.newPwd) {\r\n        this.formGroup\r\n          .get('newPassword')\r\n          .setErrors(null);\r\n        this.errorMsg.error = false;\r\n      } else {\r\n        this.formGroup\r\n          .get('newPassword')\r\n          .setErrors({incorrect: true});\r\n        this.errorMsg.error = true;\r\n        this.errorMsg.msg = 'Password does not match';\r\n      }\r\n    } else {\r\n      this.formGroup\r\n        .controls['newPassword']\r\n        .setErrors({incorrect: true});\r\n      this.errorMsg.error = true;\r\n      this.errorMsg.msg = 'Password must be at least 5 characters long';\r\n    }\r\n\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.userService.changeUserPassword(this.userDetails.userId,\r\n      {\r\n        oldPassword: this.oldPwd,\r\n        newPassword: this.newPwd\r\n      }).subscribe(value => {\r\n      this.requestStatus.errorMsg = value.body.errorMsg;\r\n      this.requestStatus.status = value.body.status;\r\n    });\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  resetPwd() {\r\n    this.errorMsgFromToken = null;\r\n    this.showSpinner = true;\r\n    this.userService\r\n      .changeUserPasswordByToken(\r\n        this.store.selectSnapshot(ValidPasswordTokenState.getUserId),\r\n        this.newPwd,\r\n        this.store.selectSnapshot(ValidPasswordTokenState.getTokenId))\r\n      .subscribe(value => {\r\n          console.log(value.status);\r\n          this.showSpinner = false;\r\n          this.errorMsgFromToken = null;\r\n          if (value.status === 200) {\r\n            this.dialogRef.close();\r\n            this.dialog.open(VerificationDialogComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data: {text: 'Password has been changed successfully'}\r\n            });\r\n          }\r\n        },\r\n          error => {\r\n            this.showSpinner = false;\r\n            this.errorMsgFromToken = error.message;\r\n          });\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n  <h1 class=\"header\">Change your Password</h1>\r\n  <mat-form-field *ngIf=\"userDetails !== null\" appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Old password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\" [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"oldPasswordFormField\">\r\n    <mat-error>Invalid password</mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>New password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\"\r\n           [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"newPasswordFormField\">\r\n    <mat-error *ngIf=\"errorMsg.error === true\">{{errorMsg.msg}}</mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Confirm password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\"\r\n           [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"confirmPwdFormField\">\r\n    <mat-error *ngIf=\"errorMsg.error === true\">{{errorMsg.msg}}</mat-error>\r\n  </mat-form-field>\r\n  <div class=\"actions\">\r\n    <button (click)=\"closeDialog()\" class=\"close-btn\" mat-raised-button>Close</button>\r\n\r\n    <button (click)=\"changePassword()\"\r\n            *ngIf=\"errorMsg.error === false && userDetails !== null\"\r\n            color=\"warn\" mat-raised-button>\r\n      Save changes\r\n    </button>\r\n    <button (click)=\"resetPwd()\"\r\n            *ngIf=\"errorMsg.error === false && userDetails === null && showSpinner === false\"\r\n            color=\"warn\" mat-raised-button>\r\n      Reset Password\r\n    </button>\r\n  </div>\r\n  <br>\r\n  <mat-error *ngIf=\"errorMsgFromToken !== null\">{{errorMsgFromToken}}</mat-error>\r\n  <mat-spinner *ngIf=\"showSpinner === true\"></mat-spinner>\r\n  <span>{{requestStatus.errorMsg}}</span>\r\n</div>\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Form, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoginAction = AuthenticationActions.LoginAction;\r\n\r\n@Component({\r\n  selector: 'app-delete-user-account-dialog',\r\n  templateUrl: './delete-user-account-dialog.component.html',\r\n  styleUrls: ['./delete-user-account-dialog.component.scss']\r\n})\r\nexport class DeleteUserAccountDialogComponent implements OnInit {\r\n  password: any;\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public userDetails: BaseUserDetails,\r\n              private dialogRef: MatDialogRef<DeleteUserAccountDialogComponent>,\r\n              private fb: FormBuilder,\r\n              private userService: UpdateUserService,\r\n              private router: Router,\r\n              private store: Store) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.password = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n    this.formGroup = this.fb.group({\r\n      password: this.password\r\n    });\r\n    this.formGroup.get('password').valueChanges.subscribe(value => console.log(value))\r\n  }\r\n\r\n  get pwd(): FormControl {\r\n    return this.formGroup.get('password') as FormControl;\r\n  }\r\n\r\n  deleteAccount() {\r\n    this.userService\r\n      .deleteUserAccount({userId: this.userDetails.userId, password: this.pwd.value})\r\n      .subscribe(value => {\r\n      }, error => {\r\n      }, () => {\r\n        this.dialogRef.close();\r\n        this.store.dispatch(new AuthenticationActions.Logout())\r\n          .subscribe(value =>\r\n            this.store.dispatch(new Navigate(['welcome'])));\r\n      });\r\n  }\r\n}\r\n","<h2>Confirm your password in order to proceed</h2>\r\n<form (ngSubmit)=\"deleteAccount()\" [formGroup]=\"formGroup\">\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Password</mat-label>\r\n    <input [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"password\">\r\n    <mat-error>Invalid password</mat-error>\r\n  </mat-form-field>\r\n  <br>\r\n  <br>\r\n  <button *ngIf=\"pwd.errors === null\" mat-raised-button color=\"warn\" type=\"submit\">Delete</button>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport {debounceTime, distinctUntilChanged, map, share, tap} from \"rxjs/operators\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\r\nimport {AbstractControl, Form, FormBuilder, FormControl, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {IUserAuthState} from \"../../shared/domain/UserAuthStateModel\";\r\nimport {SelectedImage} from \"../../shared/domain/imageModel/image.model\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ChangeEmailThirdPartyComponent} from \"../change-email-third-party/change-email-third-party.component\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {SearchByUsersService} from \"../../serviceV2/search-by-users.service\";\r\nimport IsLoggedIn = AuthenticationActions.IsLoggedIn;\r\nimport {ChangePasswordComponent} from \"../change-password/change-password.component\";\r\nimport {DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {DeleteUserAccountDialogComponent} from \"../delete-user-account-dialog/delete-user-account-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  @Select(UserDetailsState.userDetails) $userDetails;\r\n  @Select(LoginStateModel.profileImg) $profile;\r\n  @Select(LoginStateModel.loggedUserId) $userId;\r\n  @Select(LoginStateModel.loginType) $thirdPartyLogin;\r\n  firstNameControl = new FormControl();\r\n  lastNameControl = new FormControl();\r\n  emailControl = new FormControl();\r\n  userNameControl = new FormControl();\r\n  formGroup;\r\n\r\n  readOnlyEmail: boolean = true;\r\n  readOnlyUserName: boolean = true;\r\n  readOnlyFirstName: boolean = true;\r\n  readOnlyLastName: boolean = true;\r\n\r\n\r\n  emailValChange$ = new Subject<boolean>();\r\n  firstValChange$ = new Subject<boolean>();\r\n  lastValChange$ = new Subject<boolean>();\r\n  userNameValChange$ = new Subject<boolean>();\r\n  userDetailsChanged$ = new Subject<boolean>();\r\n\r\n  loggedUser: BaseUserDetails;\r\n\r\n  isMobile = false;\r\n\r\n  constructor(private store: Store,\r\n              private service: UserAuthenticationService,\r\n              private dialog: MatDialog,\r\n              private formBuilder: FormBuilder,\r\n              private updateUserService: UpdateUserService,\r\n              private userService: SearchByUsersService,\r\n              private deviceObserver: DeviceObserverService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.deviceObserver\r\n      .getActiveDevice()\r\n      .subscribe(device =>\r\n        this.isMobile = device === 'xs');\r\n\r\n    /*this.emailValChange$\r\n      .pipe(debounceTime(1000), distinctUntilChanged())\r\n      .subscribe(email => {\r\n        if (email !== this.loggedUser.email) {\r\n          if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n            this.userDetailsChanged$.next(true);\r\n          }\r\n        } else {\r\n          this.userDetailsChanged$.next(false);\r\n        }\r\n      });*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const loggedUser : BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    this.loggedUser = this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    const userDetails: BaseUserDetails =\r\n       this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    console.log(\"google login ? : \" + this.store.selectSnapshot(LoginStateModel.loginType));\r\n\r\n    if (userDetails.userId === undefined) {\r\n      this.store.dispatch(\r\n        new AuthenticationActions.LoggedUserDetails(loggedUser.userId))\r\n        .subscribe(userDetailsResp => {\r\n          this.initFormGroup(userDetailsResp);\r\n        })\r\n    } else {\r\n      this.firstNameControl = new FormControl(userDetails.firstName, [Validators.required]);\r\n      this.lastNameControl = new FormControl(userDetails.lastName, [Validators.required]);\r\n      this.emailControl = new FormControl(userDetails.email,\r\n        [\r\n          emailValidator(loggedUser.email), Validators.required]);\r\n      this.userNameControl = new FormControl(userDetails.username, [Validators.required]);\r\n      this.formGroup = this.formBuilder.group({\r\n        firstName: this.firstNameControl,\r\n        lastName: this.lastNameControl,\r\n        email: this.emailControl,\r\n        userName: this.userNameControl\r\n      });\r\n      this.store.dispatch(\r\n        new AuthenticationActions.LoggedUserDetails(loggedUser.userId))\r\n        .subscribe(userDetailsResp => {\r\n          /*this.initFormGroup(userDetailsResp);*/\r\n        });\r\n    }\r\n\r\n    this.firstNameControl.valueChanges.subscribe(value => console.log(value))\r\n\r\n    // this.formGroup = this.formBuilder.group({\r\n    //   firstName: null\r\n    // })\r\n    // if (loggedUser !== undefined && loggedUser !== null) {\r\n    //   this.store.dispatch(\r\n    //     new UserDetailsActions\r\n    //       .GetUserDetails(loggedUser.userId)\r\n    //   )\r\n    // } else this.store.dispatch(new Navigate(['/login']))\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  get email() {\r\n    return this.formGroup.get('email');\r\n  }\r\n\r\n  get userName() {\r\n    return this.formGroup.get('userName');\r\n  }\r\n\r\n  get lastName() {\r\n    return this.formGroup.get('lastName');\r\n  }\r\n\r\n\r\n\r\n  get firstName() {\r\n    return this.formGroup.get('firstName');\r\n  }\r\n\r\n  /*get height() {\r\n    return this.formGroup.get('height');\r\n  }*/\r\n\r\n  private initFormGroup(userDetailsResp) {\r\n    console.log(userDetailsResp.LoggedDetails);\r\n    this.firstNameControl = new FormControl(userDetailsResp.LoggedDetails.firstName);\r\n    this.lastNameControl = new FormControl(userDetailsResp.LoggedDetails.lastName);\r\n    this.emailControl = new FormControl(userDetailsResp.LoggedDetails.email,\r\n      [\r\n        emailValidator(userDetailsResp.LoggedDetails.email)]\r\n    );\r\n    this.userNameControl = new FormControl(userDetailsResp.LoggedDetails.userName);\r\n    this.formGroup = this.formBuilder.group({\r\n      firstName: this.firstNameControl,\r\n      lastName: this.lastNameControl,\r\n      email: this.emailControl,\r\n      userName: this.userNameControl\r\n    });\r\n  }\r\n\r\n  navigateToUpload() {\r\n    this.store.dispatch(new Navigate(['upload']))\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    const loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    this.store.dispatch(new UserDetailsActions\r\n      .UploadUserProfile(loggedUser.userId, formData));\r\n  }\r\n\r\n  editEmail(): void {\r\n    const thirdPartyLogin = this.store.selectSnapshot(LoginStateModel.loginType);\r\n\r\n    if (thirdPartyLogin) {\r\n      this.dialog.open(ChangeEmailThirdPartyComponent, {\r\n        width: '450px',\r\n        height: '460px'\r\n      });\r\n    } else {\r\n      this.readOnlyEmail = false;\r\n      console.log(this.loggedUser.email);\r\n      console.log(this.emailControl.value);\r\n    }\r\n\r\n    /*this.readOnlyEmail = true;*/\r\n\r\n\r\n  }\r\n\r\n  emailChanged(): void {\r\n    console.log(this.email.errors);\r\n    this.store\r\n      .dispatch(new SearchUsers(new BehaviorSubject(this.email.value)))\r\n      .subscribe(value => {\r\n        console.log(\"JFSDJSDJSDFJFJSDJDJDJ\");\r\n        console.log(value);\r\n      });\r\n    if (this.emailControl.value !== this.loggedUser.email && this.email.errors === null) {\r\n      this.store\r\n        .selectSnapshot(SearchByUsersState.getFetchedUsers)\r\n        .forEach(user => {\r\n          if (user.email !== this.email.value && this.email.errors === null) {\r\n            this.userDetailsChanged$.next(true);\r\n          } else {\r\n            this.userDetailsChanged$.next(false);\r\n            this.formGroup\r\n              .controls\r\n              .email.setErrors({forbiddenValue: {value: 'Invalid!! Email Already exists'}});\r\n          }\r\n        });\r\n    } else {\r\n      this.userDetailsChanged$.next(false);\r\n    }\r\n  }\r\n\r\n  saveEmailChanges() {\r\n    const baseUserDetails = this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const user: BaseUserDetails = {\r\n      userId: baseUserDetails.userId,\r\n      firstName: this.firstNameControl.value,\r\n      lastName: this.lastNameControl.value,\r\n      email: this.emailControl.value,\r\n      password: baseUserDetails.password,\r\n      profileImgPath: baseUserDetails.profileImgPath,\r\n      username: this.userNameControl.value\r\n    }\r\n    this.updateUserService.changeUserEmail(user)\r\n      .subscribe(value => console.log(value));\r\n  }\r\n\r\n  userNameChanged() {\r\n    this.userService\r\n      .searchByUserName(new BehaviorSubject(this.userName.value))\r\n      .subscribe(userList => {\r\n        userList.forEach(user => {\r\n          if (user.username !== this.userName.value) {\r\n            this.userNameValChange$.next(true);\r\n          } else {\r\n            this.formGroup\r\n              .controls\r\n              .userName\r\n              .setErrors({value: 'Invalid!! Email Already exists'});\r\n            this.emailValChange$.next(false);\r\n          }\r\n        });\r\n      });\r\n    console.log(this.userName.value);\r\n  }\r\n\r\n  firstNameChanged(): void {\r\n    if (this.firstName.value !== this.loggedUser.firstName) {\r\n      this.firstValChange$.next(true);\r\n    } else {\r\n      this.firstValChange$.next(false);\r\n    }\r\n  }\r\n\r\n  lastNameOnChange(): void {\r\n    if (this.lastName.value !== this.loggedUser.lastName) {\r\n      this.lastValChange$.next(true);\r\n    } else {\r\n      this.lastValChange$.next(false);\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n    const userDetails: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const thirdPartyLogin = this.store.selectSnapshot(LoginStateModel.loginType);\r\n    if (thirdPartyLogin === false) {\r\n      if (this.isMobile) {\r\n        this.dialog.open(ChangePasswordComponent, {\r\n          data: userDetails,\r\n          minWidth: '100vw'\r\n        });\r\n      } else {\r\n        this.dialog.open(ChangePasswordComponent, {\r\n          data: userDetails\r\n        });\r\n      }\r\n      console.log(userDetails);\r\n    }\r\n  }\r\n\r\n  deleteUserAccount() {\r\n    const userDetails: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    console.log(userDetails);\r\n    if (this.isMobile) {\r\n      this.dialog.open(DeleteUserAccountDialogComponent, {\r\n        data: userDetails,\r\n        minWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(DeleteUserAccountDialogComponent, {\r\n        data: userDetails\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function emailValidator(value: string): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    let mailformat = new RegExp(/\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/);\r\n    const forbidden = mailformat.test(control.value) === false;\r\n    return forbidden ? {forbiddenValue: {value: control.value + \" is not an valid email\"}} : null;\r\n  };\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"top\">\r\n    <div class=\"top_left_filler\"></div>\r\n    <div class=\"profile-icon\">\r\n      <mat-icon *ngIf=\"!($profile | async)\" id=\"icon\" style=\"font-size: 200px; color: grey\">account_circle</mat-icon>\r\n      <img *ngIf=\"$profile | async\" class=\"profile-img\" [src]=\"$profile | async\">\r\n      <label id=\"select-profile\">\r\n        <input class=\"input-fontSize-desktop\" (change)=\"handleFileInput($event.target.files)\" style=\"display: none\"\r\n               type=\"file\">\r\n        <a>Change profile image</a>\r\n      </label>\r\n    </div>\r\n    <div class=\"form\">\r\n      <form [formGroup]=\"formGroup\" class=\"example-form\">\r\n        <mat-form-field appearance=\"fill\" id=\"first\" class=\"example-full-width\">\r\n          <mat-label>Firstname</mat-label>\r\n          <input (ngModelChange)=\"firstNameChanged()\" class=\"input-fontSize-desktop\" [formControl]=\"firstNameControl\"\r\n                 matInput placeholder=\"John\">\r\n          <mat-icon matSuffix>edit</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n          <mat-label>Lastname</mat-label>\r\n          <input (ngModelChange)=\"lastNameOnChange()\" class=\"input-fontSize-desktop\" [formControl]=\"lastNameControl\" matInput placeholder=\"Doe\">\r\n          <mat-icon matSuffix>edit</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <mat-label>Change Email</mat-label>\r\n          <input class=\"input-fontSize-desktop\" placeholder=\"doe@gmail.com\"\r\n                 [readonly]=\"readOnlyEmail\"\r\n                 [formControl]=\"emailControl\"\r\n                 (ngModelChange)=\"emailChanged()\"\r\n                 matInput type=\"text\">\r\n          <button (click)=\"editEmail()\" mat-button matSuffix mat-icon-button aria-label=\"Edit\">\r\n            <mat-icon style=\"font-size: 17px\">edit</mat-icon>\r\n          </button>\r\n          <mat-error style=\"font-size: 16px\" *ngIf=\"email.errors\">{{email.errors.forbiddenValue.value}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <!--<mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n          <mat-label>Email</mat-label>\r\n          <input [readonly]=\"readOnlyEmail\" [formControl]=\"emailControl\" matInput placeholder=\"doe@gmail.com\">\r\n          <button mat-button mat-icon-button (click)=\"editEmail()\">\r\n            <mat-icon  matSuffix>edit</mat-icon>\r\n          </button>\r\n        </mat-form-field>-->\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <div class=\"form-2\">\r\n      <mat-form-field id=\"userName\" appearance=\"fill\" class=\"example-full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input class=\"input-fontSize-desktop\"\r\n               [readonly]=\"readOnlyUserName\"\r\n               [formControl]=\"userNameControl\" matInput placeholder=\"johnDoe\"\r\n               (ngModelChange)=\"userNameChanged()\">\r\n        <button (click)=\"readOnlyUserName = false\" mat-button matSuffix mat-icon-button aria-label=\"Edit\">\r\n          <mat-icon style=\"font-size: 17px\">edit</mat-icon>\r\n        </button>\r\n        <mat-error style=\"font-size: 16px\" *ngIf=\"userName.errors\">{{userName.errors.value}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"margin-top: 10px\" class=\"actions\">\r\n      <div class=\"save\">\r\n        <button (click)=\"saveEmailChanges()\"\r\n                color=\"warn\"\r\n                *ngIf=\"!email.errors && !userName.errors && !firstName.errors && !lastName.errors &&\r\n                   ((userDetailsChanged$ | async) === true ||\r\n                (userNameValChange$ | async) === true   ||\r\n                (firstValChange$ | async) === true   ||\r\n                (lastValChange$ | async) === true)\"\r\n                mat-raised-button>Save changes\r\n        </button>\r\n      </div>\r\n      <div fxLayoutAlign=\"end\" fxLayoutGap=\"15px\" class=\"change-pswd\">\r\n        <button *ngIf=\"($thirdPartyLogin | async) === false\" (click)=\"changePassword()\" color=\"warn\" mat-raised-button>Change password</button>\r\n        <button (click)=\"deleteUserAccount()\" mat-raised-button color=\"warn\">Delete account</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {LoginComponent} from \"../../shared/login/login.component\";\r\nimport {FileUploadComponent} from \"../file-upload/file-upload.component\";\r\nimport {Location} from \"@angular/common\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {UploadImageDialogComponent} from \"../upload-image-dialog/upload-image-dialog.component\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {Device} from \"../../serviceV2/device-observer.service\";\r\n\r\n@Component({\r\n  selector: 'app-file-upload-wrapper',\r\n  templateUrl: './file-upload-wrapper.component.html',\r\n  styleUrls: ['./file-upload-wrapper.component.scss']\r\n})\r\nexport class FileUploadWrapperComponent implements OnInit {\r\n\r\n\r\n  device: string;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private route: ActivatedRoute,\r\n              private store: Store,\r\n              private media: MediaObserver) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        const userId = param.get('userId');\r\n        this.store.dispatch(new LoggedUserDetails(userId))\r\n        const ref = new MatDialogConfig();\r\n        // this.dialog.open(UploadImageDialogComponent,\r\n        //   {\r\n        //     width: '900px',\r\n        //     height: '750px',\r\n        //     disableClose: true,\r\n        //     autoFocus: false,\r\n        //     data: userId\r\n        //   });\r\n\r\n        this.media.asObservable().subscribe(value => this.device = value[0].mqAlias);\r\n\r\n        const isMobile = this.device === Device.MOBILE || this.device === Device.TABLET;\r\n        this.dialog.open(FileUploadComponent,\r\n          {\r\n            width: '1300px',\r\n            height: '950px',\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: userId\r\n          });\r\n      });\r\n  }\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\n","<h2 id=\"header\">Publish to <strong>SpecShots</strong></h2>\r\n\r\n\r\n\r\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [completed]=\"uploadSuccess\" [stepControl]=\"firstFormGroup\">\r\n    <ng-template matStepLabel>Select image</ng-template>\r\n    <div id=\"access-type\">\r\n      <p><strong>Choose Access type :</strong></p>\r\n      <mat-radio-group [formControl]=\"fooControl\"\r\n                       (change)=\"changeStuff($event)\"\r\n                       aria-label=\"Select an option\">\r\n        <mat-radio-button class=\"foo\" [checked]=\"true\" value=\"1\">\r\n          <div class=\"options\">\r\n            <mat-icon>public</mat-icon>\r\n            Public\r\n          </div>\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"0\">\r\n          <div class=\"options\">\r\n            <mat-icon>lock</mat-icon>\r\n            Private\r\n          </div>\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n    <ngx-dropzone class=\"drop-zone\" (change)=\"onSelect($event)\">\r\n      <ngx-dropzone-label class=\"drop-label\">\r\n        <div *ngIf=\"isValidating == false && uploadSuccess == false\" class=\"label-content\">\r\n          <button mat-icon-button>\r\n            <mat-icon style=\"font-size: 100px;\">add_photo_alternate</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div style=\"display: flex; flex-direction: column; justify-content: center; align-items: center\" *ngIf=\"isValidating == true\">\r\n          <mat-spinner></mat-spinner>\r\n          <span style=\"margin-top: 20px\">Validating image... This can take a while..</span>\r\n        </div>\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-label class=\"label-header\">\r\n        <h1 *ngIf=\"isValidating == false && uploadSuccess == false\">Drag and drop a file</h1>\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-label class=\"label-description\">\r\n        <!--<div *ngIf=\"isValidating == false && uploadSuccess == false\">-->\r\n          <li class=\"list-item\"><strong>High quality photos</strong></li>\r\n          <li class=\"list-item\">Only upload photos you <strong>own the rights to</strong></li>\r\n          <li class=\"list-item\">Respect the intellectual property of others</li>\r\n          <li class=\"list-item\">Photos are <strong>clear and original</strong></li>\r\n          <li class=\"list-item\">Zero tolerance for nudity, violence or hate</li>\r\n          <li class=\"list-item\">Read the provider terms</li>\r\n        <!--</div>-->\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-preview class=\"preview\"\r\n                            *ngFor=\"let f of files\"\r\n                            [removable]=\"true\"\r\n                            (removed)=\"onRemove(f)\"\r\n                            [file]=\"f\">\r\n        <ngx-dropzone-label style=\"color: black\" class=\"label-header\">{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n      </ngx-dropzone-preview>\r\n    </ngx-dropzone>\r\n    <div class=\"link_ref_label\">\r\n      <mat-icon>public</mat-icon>\r\n      URL link reference :\r\n    </div>\r\n    <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\r\n      <mat-label>URL to image</mat-label>\r\n      <input matInput (ngModelChange)=\"urlReferenceValidator()\"\r\n             [formControl]=\"imageUrlReference\"\r\n             placeholder=\"http:\\\\www.xxx.com\">\r\n      <mat-error>Invalid url</mat-error>\r\n    </mat-form-field>\r\n  </mat-step>\r\n  <!--<mat-step>\r\n      <ng-template  matStepLabel>Edit image for your gallery view</ng-template>\r\n      <div>\r\n        <button (click)=\"cropImageForGallery()\"\r\n                mat-button [disabled]=\"!(this.$imageData | async)\"\r\n                matTooltip=\"Select the part of your image which will be displayed as an thumbnail.\"\r\n                matTooltipPosition=\"below\"\r\n                mat-raised-button>Edit</button>\r\n&lt;!&ndash;        <button mat-button matStepperNext>Next</button>&ndash;&gt;\r\n      </div>\r\n    <div class=\"cropped-image\">\r\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\r\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\r\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\r\n             matTooltipPosition=\"below\"\r\n             [src]=\"this.$galleryFile | async\" />\r\n      </div>\r\n    </div>\r\n  </mat-step>-->\r\n  <mat-step>\r\n    <ng-template  matStepLabel>Edit image for the download view</ng-template>\r\n    <div>\r\n      <button (click)=\"cropImageForDownloadView()\"\r\n              mat-button [disabled]=\"!(this.$imageData | async)\"\r\n              matTooltip=\"Select the part of your image which will be displayed in the download view.\"\r\n              matTooltipPosition=\"below\"\r\n              mat-raised-button>Edit</button>\r\n      <!--        <button mat-button matStepperNext>Next</button>-->\r\n    </div>\r\n    <div class=\"cropped-image\">\r\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\r\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\r\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\r\n             matTooltipPosition=\"below\" height=\"390\"\r\n             [src]=\"this.$croppedDownloadViewImage | async\" />\r\n      </div>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step >\r\n      <ng-template matStepLabel>Upload file</ng-template>\r\n      <button mat-raised-button *ngIf=\"isValidToUpload && !(this.spinner | async)\"\r\n              (click)=\"upload()\"  mat-flat-button>Upload</button>\r\n      <mat-spinner *ngIf=\"this.spinner | async\" ></mat-spinner>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n<mat-divider></mat-divider>\r\n<div class=\"action\" style=\"margin-top: 100px\">\r\n  <button id=\"close_btn\" *ngIf=\"!(this.spinner | async)\" mat-raised-button (click)=\"close()\" style=\"margin-right: 5px\"  mat-flat-button>Cancel</button>\r\n\r\n</div>\r\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {NgxDropzoneChangeEvent} from \"ngx-dropzone\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {\r\n  AsignBase64ToOriginalImage,\r\n  CropDownloadViewImage,\r\n  CropGalleryViewImage,\r\n  UploadImage\r\n} from \"../../shared/app-state/actions/image.action\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {Location} from '@angular/common';\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {FILE} from \"dns\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatRadioChange} from \"@angular/material/radio\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {UploadImageModel} from \"../../shared/domain/imageModel/upload-image.model\";\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {ImageCropperComponent} from \"../image-cropper/image-cropper.component\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {Base64ToBlobConverter} from \"../../shared/util/Base64ToBlobConverter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {ImageUploadService} from \"../../serviceV2/image-upload.service\";\r\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {PassDataToDialogAction} from \"../../shared/app-state/actions/pass-data-to-dialog.action\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss']\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  isLinear = true;\r\n  uploadSuccess: boolean = false;\r\n  files: File[] = [];\r\n  spinner = new Subject<boolean>();\r\n  isValidating: boolean = false;\r\n  imageChangedEvent: any;\r\n  croppedGalleryImage: any;\r\n  croppedDownloadViewImage: any;\r\n  showCropper = false;\r\n  foo;\r\n  @Output()\r\n  change: EventEmitter<MatRadioChange>\r\n  public formGroup;\r\n  public isPublic: boolean = true;\r\n  fooControl = new FormControl(false);\r\n  public imageUrlReference = new FormControl('');\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  @Select(CropImageState.getData) $imageData;\r\n  @Select(CropImageState.getCroppedDownloadImage) $croppedDownloadViewImage;\r\n  @Select(CropImageState.getGalleryFile) $galleryFile;\r\n\r\n\r\n  isValidToUpload: boolean = false;\r\n  canvasRotation: any;\r\n  public displayCroppedImage: boolean = false;\r\n\r\n  originalFileDimensions = {\r\n    width: 0,\r\n    height: 0\r\n  };\r\n\r\n\r\n  public device: string;\r\n\r\n  constructor(private store: Store,\r\n              private dialogRef: MatDialogRef<FileUploadComponent>,\r\n              private router: Router,\r\n              private location: Location,\r\n              private snackBar: MatSnackBar,\r\n              private dialog: MatDialog,\r\n              @Inject(MAT_DIALOG_DATA) public userId: string,\r\n              private formBuilder: FormBuilder,\r\n              private http: HttpClient,\r\n              private dialogRef2: MatDialogRef<ImageCropperComponent>,\r\n              public media: MediaProcessorService,\r\n              private media2: MediaObserver,\r\n              private  uploadService: ImageUploadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n    this.formGroup = this.formBuilder\r\n      .group({url: this.imageUrlReference})\r\n    this.foo = this.formBuilder\r\n      .group({isPublic: this.fooControl})\r\n\r\n    this.firstFormGroup = this.formBuilder.group({\r\n      uploadCtr: ['', Validators.required]\r\n    })\r\n\r\n    /*this.media2.asObservable()\r\n      .subscribe(value => {\r\n        console.log(value[0].mqAlias);\r\n      })*/\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.deviceObserverService.getActiveDevice().subscribe(value => this.device = value);\r\n  }\r\n\r\n  public changeStuff(mrChange: MatRadioChange): void {\r\n    console.log(mrChange.value);\r\n    this.isPublic = mrChange.value === '1';\r\n  }\r\n\r\n  public validate(value: string): boolean {\r\n    const regExp = new RegExp('[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}');\r\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\r\n  }\r\n\r\n  public urlReferenceValidator(): void {\r\n    const value = this.formGroup.get('url').value;\r\n    const regExp = new RegExp(\"[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}\");\r\n    if (regExp.test(value)) {\r\n      this.formGroup.controls['url']\r\n        .setErrors(null)\r\n    } else {\r\n      this.formGroup.controls['url']\r\n        .setErrors({'error': true})\r\n    }\r\n  }\r\n\r\n  onSelect($event: NgxDropzoneChangeEvent): void {\r\n    this.isValidating = true;\r\n    const typeIndex = $event.addedFiles[0].name.lastIndexOf('.');\r\n    const type = $event.addedFiles[0].name.substr(typeIndex + 1);\r\n    console.log(type);\r\n    if ((type === 'jpg' || type === 'png' || type === 'jfif')) {\r\n      let request = new FormData();\r\n      request.append('file', $event.addedFiles[0]);\r\n\r\n\r\n      this.uploadService.validateImage($event.addedFiles[0])\r\n        .subscribe(value => {\r\n          const message = value.message;\r\n          console.log(value.status);\r\n          if (value.status === 200) {\r\n            this.originalFileDimensions.width = value.width;\r\n            this.originalFileDimensions.height = value.height;\r\n            this.files.push(...$event.addedFiles);\r\n            this.isValidToUpload = true;\r\n            this.isLinear = true;\r\n            this.uploadSuccess = true;\r\n            this.isValidating = false;\r\n\r\n            // getting uploaded file and passing it to crop image\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n              const base64Temp = e.target.result;\r\n              this.croppedGalleryImage = base64Temp;\r\n              this.croppedDownloadViewImage = base64Temp;\r\n              this.store.dispatch(new AsignBase64ToOriginalImage(base64Temp));\r\n              this.store.dispatch(new CropDownloadViewImage(this.croppedGalleryImage));\r\n              this.store.dispatch(new CropGalleryViewImage(this.croppedDownloadViewImage))\r\n                .subscribe(value => {\r\n                  // open imageCropper dialog(component) to let user decide\r\n                  // which part of th uploaded image should be displayed\r\n                  // this.dialog.open(ImageCropperComponent,{\r\n                  //   data: e.target.result,\r\n                  //   height: '1200px',\r\n                  //   width: '1400px'\r\n                  // })\r\n                });\r\n            };\r\n            reader.readAsDataURL($event.addedFiles[0]);\r\n          } else {\r\n            this.onRemove($event.addedFiles[0]);\r\n            this.isValidToUpload = false;\r\n            this.isValidating = false;\r\n            console.log(this.isValidToUpload)\r\n            this.snackBar.open(\r\n              message,\r\n              \"Validation was unsuccessful\",\r\n              {\r\n                duration: 3000,\r\n                horizontalPosition: \"center\",\r\n                verticalPosition: \"top\"\r\n              }\r\n            );\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  public cropImageForDownloadView(): void {\r\n    const isMobile = this.device === Device.MOBILE;\r\n    const width = isMobile ? 250 : 1200;\r\n    const height = isMobile ? width / 1.7910 : 670;\r\n\r\n    this.store.dispatch(new PassDataToDialogAction(\r\n      {\r\n        imgData: this.store.selectSnapshot(CropImageState.getData),\r\n        resizeWidth: width,\r\n        resizeHeight: height,\r\n        viewName: 'Download',\r\n        imgDimensions: {\r\n          originalWidth: this.originalFileDimensions.width, originalHeight: this.originalFileDimensions.height\r\n        }\r\n      }\r\n    ));\r\n\r\n    if (this.device === Device.TABLET || this.device == Device.MOBILE) {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height, viewName: 'Download', imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px',\r\n        width: '100vw',\r\n        maxWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height, viewName: 'Download', imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public cropImageForGallery(): void {\r\n\r\n    const isMobile = this.device === Device.MOBILE;\r\n    const isTablet = this.device === Device.TABLET;\r\n    const width = isMobile ? 150 : 500;\r\n    const height = isMobile ? width / 1.087 : 460;\r\n    this.store.dispatch(new PassDataToDialogAction(\r\n      {\r\n        imgData: this.store.selectSnapshot(CropImageState.getData),\r\n        resizeWidth: width,\r\n        resizeHeight: height,\r\n        viewName: 'Gallery',\r\n        imgDimensions: {\r\n          originalWidth: this.originalFileDimensions.width, originalHeight: this.originalFileDimensions.height\r\n        }\r\n      }\r\n    ));\r\n\r\n\r\n    if (this.device === Device.TABLET || this.device == Device.MOBILE) {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height,\r\n          viewName: 'Gallery',\r\n          imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px',\r\n        width: '100vw',\r\n        maxWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height,\r\n          viewName: 'Gallery',\r\n          imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px'\r\n      })\r\n    }\r\n    this.displayCroppedImage = true;\r\n    // this.store.dispatch(new CropGalleryViewImage(this.croppedGalleryImage))\r\n    //   .subscribe(value => console.log(value));\r\n\r\n  }\r\n\r\n  onRemove(f: any): void {\r\n    this.files.splice(this.files.indexOf(f), 1);\r\n    this.isValidToUpload = false;\r\n    this.store.dispatch(new CropGalleryViewImage(null))\r\n  }\r\n\r\n  upload(): void {\r\n    this.spinner.next(true);\r\n    const loggedInUserModel: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    let request = new FormData();\r\n    request.append('file', this.files[0]);\r\n    const isP = this.isPublic ? 'true' : 'false';\r\n\r\n\r\n    const galleryBase64 = this.store.selectSnapshot(CropImageState.getGalleryFile);\r\n    //cropped image to file(base64 to file)\r\n    const imageBlob = Base64ToBlobConverter.dataURItoBlob(galleryBase64.substr(galleryBase64.lastIndexOf(',') + 1));\r\n\r\n    const imageFile = new File([imageBlob],\r\n      \"cropped-\" + this.files[0].name,\r\n      {type: 'image/jpeg'});\r\n\r\n\r\n    const downloadBase64 = this.store.selectSnapshot(CropImageState.getCroppedDownloadImage);\r\n    const downloadBlob = Base64ToBlobConverter.dataURItoBlob(downloadBase64.substr(downloadBase64.lastIndexOf(',') + 1));\r\n    const downloadImageFile = new File([downloadBlob],\r\n      \"cropped-\" + this.files[0].name,\r\n      {type: 'image/jpeg'});\r\n\r\n    // setting response object with needed values\r\n    const uploadModel: UploadImageModel = {\r\n      userId: loggedInUserModel.userId,\r\n      orgFile: this.files[0],\r\n      isPublic: isP,\r\n      urlReference: this.validate(this.imageUrlReference.value) === true ?\r\n        this.imageUrlReference.value : null,\r\n      file: request,\r\n      galleryFile: imageFile,\r\n      downloadFile: downloadImageFile\r\n    }\r\n\r\n    // sending request\r\n    this.store.dispatch(new UploadImage(uploadModel))\r\n      .subscribe(value1 => {\r\n        request = null;\r\n        this.files = [];\r\n        this.isValidToUpload = false;\r\n        if (value1.Upload.status) {\r\n          this.snackBar.open(\r\n            \"File uploaded successfully\",\r\n            \"File uploaded\",\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: \"center\",\r\n              verticalPosition: \"top\"\r\n            }\r\n          );\r\n          this.spinner.next(false);\r\n          this.store.dispatch(new CropGalleryViewImage(null))\r\n          this.store.dispatch(new CropDownloadViewImage(null))\r\n          this.store.dispatch(new AsignBase64ToOriginalImage(null))\r\n        }\r\n        // window.location.reload();\r\n      }, error => {\r\n        this.spinner.next(false);\r\n        this.snackBar.open(\r\n          error.error,\r\n          \"File uploaded error\",\r\n          {\r\n            duration: 3000,\r\n            horizontalPosition: \"center\",\r\n            verticalPosition: \"top\",\r\n            panelClass: ['uploadError']\r\n          }\r\n        );\r\n        request = null;\r\n        this.files = [];\r\n        this.isValidToUpload = false;\r\n        this.imageUrlReference = null;\r\n        this.store.dispatch(new CropGalleryViewImage(null))\r\n      });\r\n  }\r\n\r\n  close(): void {\r\n    const userId: string = this.store.selectSnapshot(LoginStateModel.loggedUserId);\r\n    // this.router.navigate(['profile'])\r\n    this.store.dispatch(new Navigate(['profile', {userId: userId}]))\r\n    this.store.dispatch(new CropGalleryViewImage(null));\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  imageCropped($event: ImageCroppedEvent) {\r\n    console.log(\"dfghdfjkgh\");\r\n    this.croppedGalleryImage = $event.base64;\r\n  }\r\n\r\n  imageLoaded() {\r\n    console.log(\"dfghdfjkgh666666666\");\r\n    this.showCropper = true;\r\n    console.log('Image loaded');\r\n  }\r\n\r\n  cropperReady($event: Dimensions) {\r\n    console.log(\"what\");\r\n  }\r\n\r\n  loadImageFailed() {\r\n\r\n  }\r\n\r\n  // fileChangeEvent($event: Event) {\r\n  //   this.imageChangedEvent = $event;\r\n  //   console.log(this.imageChangedEvent)\r\n  // }\r\n  cropped2: any;\r\n\r\n  fileChangeEvent($event: Event) {\r\n    this.imageChangedEvent = $event;\r\n  }\r\n}\r\n","<div style=\" margin-bottom: 10px;display: flex; flex-direction: row; align-content: center; align-items: center\">\r\n  <span>Select the part of the image which should be displayed as an thumbnail</span>\r\n  <button style=\"margin-left: 10px\" color=\"primary\" mat-raised-button (click)=\"close()\">Crop image</button>\r\n  {{width + ' - ' + height}}\r\n</div>\r\n<div style=\"\" class=\"cropper\" *ngIf=\"cropperObj\">\r\n  <image-cropper *ngIf=\"disable == false\"\r\n                 [canvasRotation]=\"cropperObj.rotate ? 1 : 0\"\r\n                 [imageBase64]=\"croppedImage\"\r\n                 [maintainAspectRatio]=\"true\"\r\n                 [resizeToWidth]=\"cropperObj.resizeWidth\"\r\n                 [resizeToHeight]=\"cropperObj.resizeHeight\"\r\n                 (cropperReady)=\"getDimensionFromCropper($event)\"\r\n                 (imageLoaded)=\"imageLoaded()\"\r\n                 [cropper]=\"cropper\"\r\n                 [cropperStaticWidth]=\"cropperObj.staticWidth\"\r\n                 [cropperStaticHeight]=\"cropperObj.staticHeight\"\r\n                 (imageCropped)=\"imageCropped($event)\"\r\n                  [cropperMinWidth]=\"150\" [cropperMinHeight]=\"138\">\r\n  </image-cropper>\r\n</div>\r\n\r\n\r\n\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {CropDownloadViewImage, CropGalleryViewImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {PassDataToCropperDialogState} from \"../../shared/app-state/states/pass-data-to-cropper-dialog.state\";\r\nimport {DialogCropperData} from \"../../shared/app-state/actions/pass-data-to-dialog.action\";\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-image-cropper',\r\n  templateUrl: './image-cropper.component.html',\r\n  styleUrls: ['./image-cropper.component.scss']\r\n})\r\nexport class ImageCropperComponent implements OnInit {\r\n  public width: number;\r\n  public height: number;\r\n  public cropForView: string;\r\n  imageChangedEvent: any;\r\n  croppedImage: any;\r\n  showCropper: boolean = false;\r\n  transF: any;\r\n  cropped2: any;\r\n  isMobile: boolean;\r\n  isPortraitFormat: boolean;\r\n  device: Device;\r\n\r\n  data: DialogCropperData;\r\n\r\n  cropperObj: CropperObject = {};\r\n\r\n  resizedRatio: number;\r\n\r\n  @Select(CropImageState.getData) $imageData;\r\n\r\n  @ViewChild('cropperComponent') cropperRef: ElementRef;\r\n\r\n  cropper = {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0\r\n  };\r\n\r\n  resizedFactor = 0;\r\n  invertResizeFactor = 0;\r\n  canvasRotation: any;\r\n\r\n  disable = false;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public $event: any,\r\n              private dialogRef: MatDialogRef<ImageCropperComponent>,\r\n              private store: Store,\r\n              public deviceObserverService: DeviceObserverService,\r\n              private media: MediaObserver) {\r\n    this.data = this.store.selectSnapshot(PassDataToCropperDialogState.getComponentData);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const passedData = this.store.selectSnapshot(PassDataToCropperDialogState.getComponentData);\r\n    this.cropperObj.base64 = passedData.imgData;\r\n\r\n    this.croppedImage = this.$event.img;\r\n    this.width = this.$event.width;\r\n\r\n    this.cropperObj.originalWidth = this.$event.imgDimensions.width;\r\n\r\n    this.cropperObj.originalHeight = this.$event.imgDimensions.height;\r\n    this.cropperObj.resizeWidth = this.$event.width;\r\n    this.cropperObj.resizeHeight = this.$event.height;\r\n    this.cropperObj.isPortraitFormat = this.cropperObj.originalWidth < this.cropperObj.originalHeight;\r\n    /*this.cropperObj.staticWidth = this.$event.width;*/\r\n\r\n    this.deviceObserverService.getActiveDevice()\r\n      .subscribe(value => {\r\n        if (value === Device.MOBILE) {\r\n          this.device = Device.MOBILE;\r\n        } else if (value === Device.TABLET) {\r\n          this.device = Device.TABLET;\r\n\r\n        } else {\r\n          this.device = Device.DESKTOP;\r\n        }\r\n        this.cropperObj.staticWidth = this.getStaticCropperWidthByViewAndDevice();\r\n        this.cropperObj.staticHeight = this.getStaticCropperWidthByViewAndDevice() / this.getRatioByView();\r\n        this.isMobile = ((value === 'xs') && this.$event.imgDimensions.width > this.$event.imgDimensions.height);\r\n      });\r\n\r\n    console.log(this.$event.imgDimensions);\r\n    console.log(this.width);\r\n    this.height = this.$event.height;\r\n    /*this.cropperObj.staticHeight = this.$event.height;*/\r\n    console.log(this.height);\r\n    this.cropForView = this.$event.viewName;\r\n  }\r\n\r\n  imageCropped($event: ImageCroppedEvent) {\r\n    if (this.cropForView === 'Gallery') {\r\n      this.store.dispatch(new CropGalleryViewImage($event.base64));\r\n    } else\r\n      this.store.dispatch(new CropDownloadViewImage($event.base64));\r\n  }\r\n\r\n\r\n  imageLoaded() {\r\n    console.log(\"imageLoaded()\");\r\n  }\r\n\r\n\r\n  public close(): void {\r\n    this.dialogRef.close(this.cropped2);\r\n  }\r\n\r\n\r\n  getDimensionFromCropper($event: Dimensions) {\r\n    console.log($event.height);\r\n    console.log($event.width);\r\n    this.cropperObj.imgViewHeight = $event.height;\r\n    this.cropperObj.imgViewWidth = $event.width;\r\n\r\n    this.cropperObj.staticWidth = this.getStaticCropperWidthByViewAndDevice();\r\n    this.cropperObj.staticHeight = this.getStaticCropperWidthByViewAndDevice() / this.getRatioByView();\r\n    this.resizedFactor = this.$event.imgDimensions.width / $event.width;\r\n    this.cropperObj.resizeFactor = this.$event.imgDimensions.width / $event.width;\r\n    this.cropperObj.inverseResizeFactor = $event.width / this.$event.imgDimensions.width;\r\n\r\n    this.cropperObj.resizeWidth = this.getDesktopWidthByView();\r\n    this.cropperObj.resizeHeight = this.getDesktopHeightByView();\r\n\r\n  }\r\n\r\n  private getDesktopHeightByView() {\r\n    return this.isGalleryView() ? environment.desktopGalleryHeight :\r\n      this.isDownloadView() ? environment.desktopDownloadHeight : -1;\r\n  }\r\n\r\n  private getDesktopWidthByView() {\r\n    return this.isGalleryView() ? environment.desktopGalleryWidth :\r\n      this.isDownloadView() ? environment.desktopDownloadWidth : -1;\r\n  }\r\n\r\n  private getRatioByView() {\r\n    return this.isGalleryView() ? environment.galleryAspectRatio :\r\n      this.isDownloadView() ? environment.downloadAspectRatio : -1;\r\n  }\r\n\r\n  private isGalleryView() {\r\n    return this.data.viewName === 'Gallery';\r\n  }\r\n\r\n  private getStaticCropperWidthByViewAndDevice() {\r\n    return (this.device === Device.TABLET ? this.getTabletWidthByView() :\r\n      this.device === Device.MOBILE ? this.getMobileWidthByView() :\r\n        this.device === Device.DESKTOP ? this.getDesktopWidthByView() : -1);\r\n  }\r\n\r\n  private getMobileWidthByView() {\r\n    return this.isGalleryView() ? environment.mobileGalleryWidth :\r\n      this.isDownloadView() ? environment.mobileDownloadWidth : -1;\r\n  }\r\n\r\n  private getTabletWidthByView() {\r\n    return this.isGalleryView() ? environment.tabletGalleryWidth :\r\n      this.isDownloadView() ? environment.tabletDownloadWidth : -1;\r\n  }\r\n\r\n  private getStaticWidthByViewAndDeviceRotated() {\r\n    return (this.device === Device.TABLET ? this.getTabletWidthByView() :\r\n      this.device === Device.MOBILE ? this.getMobileWidthByView() :\r\n        this.device === Device.DESKTOP ? this.getDesktopWidthByView() : -1) / this.getRatioByView();\r\n  }\r\n\r\n  private isDownloadView() {\r\n    return this.data.viewName === 'Download';\r\n  }\r\n\r\n  test($event: Event) {\r\n    console.log($event)\r\n  }\r\n}\r\n\r\nexport interface CropperObject {\r\n  base64?: any;\r\n  resizeWidth?: number;\r\n  resizeHeight?: number;\r\n  staticWidth?: number;\r\n  staticHeight?: number;\r\n  imgViewWidth?: number;\r\n  imgViewHeight?: number;\r\n  isPortraitFormat?: boolean;\r\n  resizeFactor?: number;\r\n  inverseResizeFactor?: number;\r\n  originalWidth?: number;\r\n  originalHeight?: number;\r\n  rotate?: boolean;\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-password-reset-token-wrapper',\r\n  templateUrl: './password-reset-token-wrapper.component.html',\r\n  styleUrls: ['./password-reset-token-wrapper.component.scss']\r\n})\r\nexport class PasswordResetTokenWrapperComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"HUUUUUUUUUUUUUUUU\");\r\n    this.route.paramMap.subscribe(value => console.log(value))\r\n  }\r\n\r\n}\r\n","<p>password-reset-token-wrapper works!</p>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-image-dialog',\n  templateUrl: './upload-image-dialog.component.html',\n  styleUrls: ['./upload-image-dialog.component.scss']\n})\nexport class UploadImageDialogComponent implements OnInit {\n  secondFormGroup: any;\n  firstFormGroup: any;\n  isLinear: Boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button (click)=\"isLinear = !isLinear\" id=\"toggle-linear\">\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\n</button>\n<mat-vertical-stepper [linear]=\"isLinear\" #stepper>\n  <mat-step [completed]=\"isLinear\" [stepControl]=\"firstFormGroup\">\n    <form [formGroup]=\"firstFormGroup\">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"secondFormGroup\">\n    <form [formGroup]=\"secondFormGroup\">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\n               required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>\n\n<p>FOOO</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bootstrap-playground',\n  templateUrl: './bootstrap-playground.component.html',\n  styleUrls: ['./bootstrap-playground.component.scss']\n})\nexport class BootstrapPlaygroundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <div class=\"brand\">\n    <a id=\"android\">\n      <mat-icon style=\"margin-top: 5px\">android</mat-icon>\n    </a>\n    <a id=\"donut\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"text-align: center; margin-top: 5px\">donut_small</mat-icon>\n    </a>\n    <a id=\"widget\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"margin-top: 5px\">widgets</mat-icon>\n    </a>\n    <span id=\"api_name\"><strong>Welcome to SpecShots</strong></span>\n  </div>\n\n</header>\n\n\n<div class=\"form-ang\">\n  <input class=\"search\" type=\"text\" matInput>\n</div>\n\n\n<div class=\"profile_info\">\n  <mat-icon style=\"color: white\">\n    android\n  </mat-icon>\n</div>\n\n<!--Navbar-->\n<!--\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark indigo\">\n\n  &lt;!&ndash; Navbar brand &ndash;&gt;\n  <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">Navbar</a></mdb-navbar-brand>\n\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n  <links>\n\n    &lt;!&ndash; Links &ndash;&gt;\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Pricing</a>\n      </li>\n\n      &lt;!&ndash; Dropdown &ndash;&gt;\n      <li class=\"nav-item dropdown\" dropdown>\n        <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n          Basic dropdown<span class=\"caret\"></span></a>\n        <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Another action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Something else here</a>\n          <div class=\"divider dropdown-divider\"></div>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Separated link</a>\n        </div>\n      </li>\n\n    </ul>\n    &lt;!&ndash; Links &ndash;&gt;\n\n    &lt;!&ndash; Search form &ndash;&gt;\n    <form class=\"form-inline waves-light\" mdbWavesEffect>\n      <div class=\"md-form my-0\">\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n      </div>\n    </form>\n  </links>\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n\n</mdb-navbar>\n&lt;!&ndash;/.Navbar&ndash;&gt;\n-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cropper-details-bar',\n  templateUrl: './cropper-details-bar.component.html',\n  styleUrls: ['./cropper-details-bar.component.scss']\n})\nexport class CropperDetailsBarComponent implements OnInit {\n  showFiller: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\r\n  Component,\r\n  ElementRef, EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {MatFormFieldControl} from \"@angular/material/form-field\";\r\nimport {ControlValueAccessor, FormBuilder, FormControl, FormGroup, NgControl} from \"@angular/forms\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {FocusMonitor} from \"@angular/cdk/a11y\";\r\nimport {MatInput} from \"@angular/material/input\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {SearchViewModel} from \"../search-toolbar/search-view.model\";\r\nimport {debounceTime, tap} from \"rxjs/operators\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\n\r\nexport interface SearchBarContent {\r\n  queryString: string;\r\n  scope: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-search-bar-content',\r\n  templateUrl: './custom-search-bar-content.component.html',\r\n  styleUrls: ['./custom-search-bar-content.component.scss'],\r\n  providers: [{\r\n    provide: MatFormFieldControl,\r\n    useExisting: CustomSearchBarContentComponent\r\n  }]\r\n})\r\nexport class CustomSearchBarContentComponent implements OnInit, OnDestroy,\r\n  MatFormFieldControl<SearchBarContent>, ControlValueAccessor {\r\n\r\n  @Select(SearchByTagState.getFetchedTagListAsOption) $tagOptions: Observable<SearchViewModel[]>;\r\n\r\n  @Select(SearchByUsersState.getFetchedUsers) $users: Observable<BaseUserDetails[]>;\r\n\r\n  @Output() enterPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() clickPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() valueChanged: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  searchTerm$ = new Subject<string>();\r\n\r\n  /*this.searchTerm$\r\n    .pipe(debounceTime(1000))\r\n    .subscribe(value => {\r\n      switch (this.searchOption) {\r\n        case 'Tags':\r\n          this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n          break;\r\n        case 'Users':\r\n          this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n          break;\r\n      }\r\n    });*/\r\n\r\n\r\n\r\n  @ViewChild(MatInput, {read: ElementRef, static: true})\r\n  input: ElementRef;\r\n\r\n\r\n\r\n\r\n  static nextId = 0;\r\n\r\n  autofilled: boolean;\r\n  controlType: string;\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  errorState: boolean;\r\n  focused = true;\r\n  @HostBinding() id = `custom-form-field-id-${CustomSearchBarContentComponent.nextId++}`;\r\n  /*ngControl: NgControl | null;*/\r\n\r\n\r\n\r\n  @Input()\r\n  required: boolean;\r\n\r\n  onChange: (value: SearchBarContent) => void;\r\n  onTouch: () => void;\r\n\r\n  private _placeholder: string;\r\n\r\n  stateChanges = new Subject<void>();\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private focusMonitor: FocusMonitor,\r\n              @Optional() @Self() public ngControl: NgControl,\r\n              private formBuilder: FormBuilder,\r\n              private store: Store) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      scope: new FormControl(''),\r\n      queryString: new FormControl('')\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.focusMonitor\r\n      .monitor(this.input)\r\n      .subscribe(focused => {\r\n        this.focused = !!focused;\r\n        this.stateChanges.next();\r\n      });\r\n\r\n    this.clickPressed.subscribe(val => console.log(val))\r\n\r\n\r\n    this.form.valueChanges.subscribe(value1 => this.valueChanged.emit(value1));\r\n\r\n\r\n\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        switch (this.form.value.scope) {\r\n          case 'Tags':\r\n            this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n            break;\r\n          case 'Users':\r\n            this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  @Output()\r\n  get val(): SearchBarContent {\r\n    return this.form.value;\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent): void {\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]): void {\r\n  }\r\n\r\n  get empty(): boolean {\r\n    return !this.value.queryString && !this.value.scope;\r\n  }\r\n\r\n  @Input()\r\n  public set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  public get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n\r\n  @HostBinding('class.floated')\r\n  get shouldLabelFloat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  @Input()\r\n  set value(value: SearchBarContent) {\r\n    this.form.patchValue(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.input);\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  writeValue(value: SearchBarContent): void {\r\n    this.value = value;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.form.disable();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n\r\n  search(value: string) {\r\n\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"form\">\r\n  <mat-select #select class=\"select\" formControlName=\"scope\">\r\n    <mat-option value=\"Tags\">Tags</mat-option>\r\n    <mat-option value=\"Users\">Users</mat-option>\r\n  </mat-select>\r\n\r\n  <mat-divider class=\"divider\" [vertical]=\"true\"></mat-divider>\r\n  <input [placeholder]=\"placeholder\"\r\n         (keyup.enter)=\"enterPressed.emit(value)\"\r\n         (keyup)=\"searchTerm$.next($event.target.value)\"\r\n         [matAutocomplete]=\"auto\"\r\n         #element\r\n         matInput\r\n         type=\"text\"\r\n         name=\"entity-search-bar\"\r\n         class=\"search-bar\"\r\n         formControlName=\"queryString\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <div class=\"user-search\" *ngIf=\"value.scope === 'Users'\">\r\n      <mat-option #matOption (click)=\"clickPressed.emit({queryString: option.username, scope: 'Users'})\"\r\n                  *ngFor=\"let option of $users | async\"\r\n                  [value]=\"option.username\">\r\n        {{option.username}}\r\n      </mat-option>\r\n    </div>\r\n    <div class=\"tag-search\" *ngIf=\"value.scope === 'Tags'\">\r\n      <mat-option #matOption (click)=\"clickPressed.emit({queryString: option.value, scope: 'Tags'})\"\r\n                  *ngFor=\"let option of $tagOptions | async\"\r\n                  [value]=\"option.value\">\r\n        {{option.value}}\r\n      </mat-option>\r\n    </div>\r\n  </mat-autocomplete>\r\n\r\n\r\n\r\n</ng-container>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {SearchViewModel} from \"../search-toolbar/search-view.model\";\r\nimport {debounceTime} from \"rxjs/operators\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {SearchBarContent} from \"../custom-search-bar-content/custom-search-bar-content.component\";\r\n\r\n\r\nexport interface PressedSearchContent {\r\n  content: SearchBarContent;\r\n  clicked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-search-bar',\r\n  templateUrl: './custom-search-bar.component.html',\r\n  styleUrls: ['./custom-search-bar.component.scss']\r\n})\r\nexport class CustomSearchBarComponent implements OnInit {\r\n  content = new FormControl({ scope: 'Tags', queryString: '' });\r\n\r\n  isOpen = false;\r\n\r\n  contentTemp: SearchBarContent;\r\n\r\n  @Input() disableIcon = false;\r\n\r\n  clickedFilterDetails = false;\r\n  @Output() openCloseSearchOptions: EventEmitter<PressedSearchContent> = new EventEmitter<PressedSearchContent>();\r\n\r\n  @Output() enterPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() clickPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() changedValue: EventEmitter<PressedSearchContent> = new EventEmitter<PressedSearchContent>();\r\n\r\n  constructor(private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTemp = this.content.value;\r\n  }\r\n\r\n  search(value: string) {\r\n\r\n  }\r\n\r\n  emitOpenOptions() {\r\n    this.isOpen = !this.isOpen;\r\n    this.clickedFilterDetails = !this.clickedFilterDetails;\r\n    this.openCloseSearchOptions.emit({content: this.contentTemp, clicked: this.clickedFilterDetails});\r\n  }\r\n\r\n  foo($event: any) {\r\n    this.contentTemp = $event;\r\n    if (this.contentTemp.scope === 'Users') this.clickedFilterDetails = false;\r\n    this.changedValue.emit({content: this.contentTemp, clicked: this.clickedFilterDetails});\r\n  }\r\n}\r\n","<mat-form-field class=\"search-form-field\" appearance=\"outline\">\r\n  <mat-label>Search</mat-label>\r\n  <a *ngIf=\"!disableIcon\"\r\n     mat-icon-button\r\n     matSuffix\r\n     (click)=\"emitOpenOptions()\">\r\n    <mat-icon class=\"search-options-icon\" style=\"color: black\" >menu</mat-icon>\r\n  </a>\r\n  <app-custom-search-bar-content #component (valueChanged)=\"foo($event)\"\r\n                                 (enterPressed)=\"enterPressed.emit($event)\"\r\n                                 (clickPressed)=\"clickPressed.emit($event)\"\r\n                                 [required]=\"false\"\r\n                                 [formControl]=\"content\"\r\n                                 placeholder=\"Search your desired entity\"></app-custom-search-bar-content>\r\n\r\n</mat-form-field>\r\n\r\n","<div style=\"display: flex;\n flex-direction: column;\njustify-content: center;\n align-items: center;\n  justify-items: center;\n   align-content: center; gap: 15px\"\n     *ngIf=\"$croppedValueState | async as croppedValues\" class=\"cropped-values\">\n  <div style=\"display: flex; flex-direction: column;\n   justify-content: center; align-items: center; gap: 10px\"\n    *ngFor=\"let res of croppedValues.possibleResolutions\">\n    <button style=\"width: 150px; height: 80px\" mat-raised-button>\n      <mat-icon>download</mat-icon>\n      {{res}}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Select} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Component({\n  selector: 'app-download-cropped-image-dialog',\n  templateUrl: './download-cropped-image-dialog.component.html',\n  styleUrls: ['./download-cropped-image-dialog.component.scss']\n})\nexport class DownloadCroppedImageDialogComponent implements OnInit {\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValueState;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-search-toolbar></app-search-toolbar>\r\n\r\n<mat-drawer-container class=\"example-container\" [hasBackdrop]=\"isMobile\">\r\n  <mat-drawer class=\"example-sidenav\"\r\n              mode=\"over\" #drawer [opened]=\"!isMobile\"\r\n              [disableClose]=\"isMobile\">\r\n    <div class=\"example-sidenav-content\">\r\n      <div class=\"details\">\r\n\r\n        <button class=\"close\" *ngIf=\"isMobile\" (click)=\"drawer.toggle()\" mat-icon-button>\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <span *ngIf=\"!isMobile\" class=\"title\"><strong>Crop your image with SpecShots</strong></span>\r\n        <mat-divider *ngIf=\"!isMobile\" class=\"title-divider\"></mat-divider>\r\n        <div class=\"icon\" *ngIf=\"!isMobile\">\r\n          <img width=\"40px\" height=\"40px\" src=\"assets/Specshots-Logo.png\">\r\n        </div>\r\n\r\n\r\n        <mat-form-field  class=\"width\" disabled=\"true\" style=\"color: white\"\r\n                        appearance=\"fill\">\r\n          <mat-label>Width</mat-label>\r\n          <input class=\"white-color\" readonly type=\"number\" (change)=\"changedWidthFunc(input.value)\"\r\n                 [formControl]=\"widthInputField\" matInput #input>\r\n          <!--<mat-hint>{{widthInputField.value * diffRatio}}</mat-hint>-->\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field class=\"height\" disabled=\"true\"\r\n                        appearance=\"fill\">\r\n          <mat-label>Height</mat-label>\r\n          <input readonly type=\"number\" [formControl]=\"heightInputField\" matInput #input2>\r\n          <!--<mat-hint>{{heightInputField.value * diffRatio}}</mat-hint>-->\r\n        </mat-form-field>\r\n\r\n\r\n        <div class=\"ratio\">\r\n          <mat-button-toggle-group  class=\"toggle-group\" #group=\"matButtonToggleGroup\">\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(4 / 3)\" value=\"4 / 3\" aria-label=\"Text align left\">\r\n              4 / 3\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(16 / 9)\" value=\"16 / 9\" aria-label=\"Text align center\">\r\n              16 / 9\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(3 / 2)\" value=\"3 / 2\" aria-label=\"Text align right\">\r\n              3 / 2\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(originalRatio)\" checked value=\"original\"\r\n                               aria-label=\"Text align justify\">\r\n              Original\r\n            </mat-button-toggle>\r\n            <!--<mat-button-toggle  (click)=\"$aspectRatioSubj.next(0)\" value=\"free\" aria-label=\"Text align justify\">\r\n              Free\r\n            </mat-button-toggle>-->\r\n          </mat-button-toggle-group>\r\n        </div>\r\n\r\n\r\n        <button *ngIf=\"showSpinner === false\" class=\"download-btn\"\r\n                [matMenuTriggerFor]=\"menu\" (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-raised-button>\r\n          Download\r\n        </button>\r\n        <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n          <div *ngIf=\"$croppedValues | async as croppedDetails\">\r\n            <div class=\"hoverable\" *ngFor=\"let detail of croppedDetails.possibleResolutions\">\r\n              <button (click)=\"download(detail)\" style=\"width: 100%; border-radius: 50%\" mat-menu-item>\r\n                <mat-icon>download</mat-icon>\r\n                <span>{{detail}}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </mat-menu>\r\n        <span *ngIf=\"downloadError\">Error while downloading file.</span>\r\n        <div class=\"\" *ngIf=\"showSpinner\">\r\n          <div class=\"load-image loading\" style=\"\">\r\n            <mat-spinner class=\"foo\" diameter='30'></mat-spinner>\r\n            <span style=\"font-size: 16px; margin-top: 20px\">\r\n              <strong style=\"color: #A9A9A9\">\r\n                {{'Processing request. This can take a while..'}}\r\n              </strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-drawer>\r\n  <mat-drawer-content class=\"drawer-content\">\r\n\r\n\r\n    <!--<button *ngIf=\"finishedLoadingImage || isDownLoadingImage !== null\" [matMenuTriggerFor]=\"menu\" (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-icon-button >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n      <div *ngIf=\"$croppedValues | async as croppedDetails\">\r\n        <div class=\"hoverable\" *ngFor=\"let detail of croppedDetails.possibleResolutions\">\r\n          <button (click)=\"download(detail)\" style=\"width: 100%; border-radius: 50%\" mat-menu-item>\r\n            <mat-icon>download</mat-icon>\r\n            <span>{{detail}}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-menu>-->\r\n\r\n    <div *ngIf=\"$base64 | async as img\" class=\"cropper\">\r\n      <div class=\"wrapper\" style=\"display: flex; flex-direction: column\">\r\n        <button *ngIf=\"isMobile\" (click)=\"drawer.toggle()\" mat-icon-button style=\"margin-bottom: 5px\">\r\n          <mat-icon>download</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"img-cropper\">\r\n        <image-cropper #event [imageBase64]=\"img\"\r\n                       [maintainAspectRatio]=\"maintainAspectRatio\"\r\n                       [cropper]=\"cropper\"\r\n                       (imageLoaded)=\"imageLoaded()\"\r\n                       (cropperReady)=\"foo($event)\"\r\n                       [alignImage]=\"'center'\"\r\n                       [aspectRatio]=\"$aspectRatioSubj | async\"\r\n                       (imageCropped)=\"imageCropped($event)\"\r\n                       class=\"cropper\">\r\n        </image-cropper>\r\n\r\n      </div>\r\n\r\n      <!--<div class=\"overlay\">\r\n        <button mat-icon-button>\r\n          <button *ngIf=\"finishedLoadingImage || isDownLoadingImage !== null\" [matMenuTriggerFor]=\"menu\"\r\n                  (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-icon-button>\r\n            <mat-icon class=\"more-icon\">more_horiz</mat-icon>\r\n          </button>\r\n          <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n            <button mat-raised-button (click)=\"drawer.toggle()\">Show</button>\r\n          </mat-menu>\r\n        </button>\r\n      </div>-->\r\n\r\n    </div>\r\n\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {Subject} from \"rxjs\";\r\nimport {GetBase64ForDownloadCropperState} from \"../../shared/app-state/states/get-base64-for-downloadCropper.state\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {CropAndDownload, GetImageAsByse64, SetCroppedOffsetValues} from \"../../shared/app-state/actions/image.action\";\r\nimport {MatSlideToggleChange} from \"@angular/material/slide-toggle\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {state} from \"@angular/animations\";\r\nimport {DownloadCroppedImageDialogComponent} from \"../download-cropped-image-dialog/download-cropped-image-dialog.component\";\r\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {resolveProvidersRequiringFactory} from \"@angular/compiler-cli/src/ngtsc/annotations/src/util\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\n\r\n@Component({\r\n  selector: 'app-download-cropper',\r\n  templateUrl: './download-cropper.component.html',\r\n  styleUrls: ['./download-cropper.component.scss']\r\n})\r\nexport class DownloadCropperComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  public widthInputField: FormControl;\r\n  public heightInputField: FormControl;\r\n  public origWidthInputField: FormControl;\r\n  public wTest: number;\r\n  public hTest: number;\r\n  private wasCropped: boolean;\r\n  public croppedImage: any;\r\n  public width: number;\r\n  public height: number;\r\n  public diffRatio: number;\r\n  public finishedLoadingImage: boolean = false;\r\n  public isDownLoadingImage: boolean = null;\r\n  public showSpinner = true;\r\n\r\n  maintainAspectRatio: boolean = true;\r\n  $aspectRatioSubj: Subject<number>;\r\n  downloadError = false;\r\n\r\n  maintainTest = true;\r\n\r\n  showAspectRatio: number;\r\n\r\n  aspectRatio: number;\r\n\r\n  public widthChanged: number;\r\n  public croppedWidth: boolean = false;\r\n  public croppedHeight: boolean = false;\r\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValues;\r\n  @Select(GetBase64ForDownloadCropperState.getBase64) $base64;\r\n  @Select(GetImageByIdState.getRatioAsString) $ratio;\r\n  @Select(GetImageByIdState.getFileDetails) $details;\r\n\r\n  @Select(GetImageByIdState.getImageDetail) $detail;\r\n  public loaded: number = 0;\r\n  cropper = {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0\r\n  };\r\n\r\n  isMobile: boolean = false;\r\n\r\n  originalRatio: number;\r\n  enableUserInput: any;\r\n  showFiller: boolean = false;\r\n\r\n  constructor(private store: Store,\r\n              private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog,\r\n              private service: ImageRequestService,\r\n              private downloadService: ImageDownloadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.deviceObserverService\r\n      .getActiveDevice()\r\n      .subscribe(device => this.isMobile = device === 'xs');\r\n\r\n    this.originalRatio = 0;\r\n\r\n    this.$aspectRatioSubj = new Subject<number>();\r\n    this.$aspectRatioSubj.subscribe(value => {\r\n      this.maintainAspectRatio = value !== 0;\r\n    })\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.extractImageIdFromRequest(imageFileDetails);\r\n    this.originalRatio = imageFileDetails.width / imageFileDetails.height;\r\n\r\n    /*this.subscribeToWidthInput(imageFileDetails);\r\n    this.subscribeToHeightInput(imageFileDetails);*/\r\n  }\r\n\r\n\r\n  private extractImageIdFromRequest(imageFileDetails: ImageFileDetails) {\r\n    this.route\r\n      .paramMap\r\n      .subscribe(param => {\r\n        const imageId = param.get(\"imageId\");\r\n        this.store.dispatch(new GetImageAsByse64(imageId));\r\n        this.initFormFields(imageFileDetails);\r\n      })\r\n  }\r\n\r\n  private initFormFields(imageFileDetails: ImageFileDetails) {\r\n    this.widthInputField = new FormControl(imageFileDetails.width);\r\n    this.heightInputField = new FormControl(imageFileDetails.height);\r\n    this.formGroup = this.fb.group({\r\n      width: this.widthInputField,\r\n      height: this.heightInputField,\r\n    })\r\n  }\r\n\r\n\r\n  public imageCropped($event: ImageCroppedEvent): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    console.log(\"Starting Cropper method.....................................................\");\r\n    const ratio = imageFileDetails.width / imageFileDetails.height;\r\n    const width = $event.cropperPosition.x2 - $event.cropperPosition.x1;\r\n    if (!this.croppedWidth || !this.croppedHeight) {\r\n      console.log(\"Cropper width : \" + width);\r\n      this.wasCropped = true;\r\n      const widthWithFactor = width * this.diffRatio;\r\n      console.log(width * this.diffRatio);\r\n      this.widthInputField.setValue(widthWithFactor.toFixed(0));\r\n      const height = $event.cropperPosition.y2 - $event.cropperPosition.y1;\r\n      console.log(\"Cropper height : \" + height);\r\n      console.log(height * this.diffRatio);\r\n      console.log(Math.floor((this.cropper.y1 * this.diffRatio)) + Math.floor((height * this.diffRatio)));\r\n      const heightWithFactor = Math.floor(height) * this.diffRatio;\r\n      this.heightInputField.setValue(heightWithFactor.toFixed(0));\r\n      this.wasCropped = false;\r\n    }\r\n\r\n    // this.croppedWidth.next($event.cropperPosition.x2 - $event.cropperPosition.x1);\r\n    // this.croppedHeight.next($event.cropperPosition.y2 - $event.cropperPosition.y1)\r\n    this.loaded++;\r\n    console.log(\"Method cropper finished............................................\");\r\n  }\r\n\r\n  close() {\r\n\r\n  }\r\n\r\n  setAspectRatio(aspectRatio: number) {\r\n    console.log(this.maintainAspectRatio);\r\n    console.log(this.showAspectRatio);\r\n    this.maintainTest = aspectRatio !== 0;\r\n    this.showAspectRatio = aspectRatio;\r\n    console.log(this.maintainAspectRatio);\r\n    console.log(this.showAspectRatio);\r\n  }\r\n\r\n  public imageLoaded(): void {\r\n    setTimeout(() => {\r\n      const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n      const width = imageFileDetails.width;\r\n      /*this.cropper = {\r\n        x1: 0,\r\n        y1: 0,\r\n        x2: width,\r\n        y2: imageFileDetails.height\r\n      };*/\r\n      this.showSpinner = false;\r\n    });\r\n  }\r\n\r\n  changeStuff($event: MatSlideToggleChange) {\r\n\r\n  }\r\n\r\n  changedWidthFunc(value: string) {\r\n    console.log(value);\r\n  }\r\n\r\n  public cropAndDownload(width: string, height: string): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    const offsetY1 = this.cropper.y1 * this.diffRatio;\r\n    const offsetX1 = this.cropper.x1 * this.diffRatio;\r\n    const heightFactored = (this.cropper.y2 - this.cropper.y1) * this.diffRatio;\r\n    const widthFactored = (this.cropper.x2 - this.cropper.x1) * this.diffRatio;\r\n    const subImageWidth = offsetX1 + widthFactored > imageFileDetails.width ? imageFileDetails.width - offsetX1 : widthFactored;\r\n    const subImageHeight = offsetY1 + heightFactored > imageFileDetails.height ? imageFileDetails.height - offsetY1 : heightFactored;\r\n    this.store.dispatch(\r\n      new SetCroppedOffsetValues(\r\n        this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\r\n        this.cropper.x1 * this.diffRatio,\r\n        this.cropper.y1 * this.diffRatio,\r\n        subImageWidth,\r\n        subImageHeight\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  download(detail: string): void {\r\n    this.showSpinner = true;\r\n    this.downloadError = false;\r\n    let croppedDownloadRequest = this.store.selectSnapshot(PrepareCroppedForDownloadState.getCroppedValues);\r\n    croppedDownloadRequest.imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    croppedDownloadRequest.selectedWidth = Number.parseFloat(detail.split(' x ')[0]);\r\n    croppedDownloadRequest.selectedHeight = Number.parseFloat(detail.split(' x ')[1])\r\n    console.log(croppedDownloadRequest.selectedWidth);\r\n    this.downloadService\r\n      .downloadIndividualImage(croppedDownloadRequest, true)\r\n      .subscribe(res => {\r\n        this.showSpinner = false;\r\n        this.downloadError = false;\r\n      }, error => {\r\n        this.downloadError = true;\r\n        this.showSpinner = false;\r\n      });\r\n  }\r\n\r\n  foo($event: Dimensions) {\r\n    console.log($event);\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.diffRatio = imageFileDetails.width / $event.width;\r\n    this.$aspectRatioSubj.next(imageFileDetails.width / imageFileDetails.height);\r\n    this.aspectRatio = imageFileDetails.width / imageFileDetails.height;\r\n    this.showAspectRatio = imageFileDetails.width / imageFileDetails.height;\r\n    this.maintainAspectRatio = true;\r\n    this.diffRatio.toFixed(2);\r\n    /*this.maintainAspectRatio = false;\r\n    this.$aspectRatioSubj.next(0);*/\r\n  }\r\n\r\n  getAspectRatio(width: number, height: number): string {\r\n    const start = width < height ? width : height;\r\n    console.log(start);\r\n    let ratio = width + '/' + height;\r\n    for ( let i = start; i >= 1; i-- ) {\r\n      if (width % i === 0 && height % i === 0) {\r\n        console.log('Hallo??');\r\n        console.log(i);\r\n        return width / i + '/' + height / i;\r\n      }\r\n    }\r\n    return ratio;\r\n}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl} from \"@angular/forms\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-expired-token-refresh-dialog',\r\n  templateUrl: './expired-token-refresh-dialog.component.html',\r\n  styleUrls: ['./expired-token-refresh-dialog.component.scss']\r\n})\r\nexport class ExpiredTokenRefreshDialogComponent implements OnInit {\r\n\r\n  formGroup: any;\r\n  public emailFormField = new FormControl('');\r\n  public passwordFormField = new FormControl('');\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: UserAuthenticationService,\r\n              private dialog: MatDialog) {\r\n    this.formGroup = this.formBuilder.group({\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get mail(): string {\r\n    return this.formGroup.get('email').value;\r\n  }\r\n\r\n  get pwd(): string {\r\n    return this.formGroup.get('password').value;\r\n  }\r\n\r\n  renewToken() {\r\n    this.authService\r\n      .renewToken({email: this.mail, password: this.pwd})\r\n      .subscribe(value => {\r\n        if (value.status === 200) {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            data: {text: 'Email was sent successfully!'}\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2 class=\"title\">The activation token is expired</h2>\r\n  <div class=\"email\">\r\n    <mat-form-field  class=\"email-field\" appearance=\"fill\">\r\n      <mat-label>\r\n        Email\r\n      </mat-label>\r\n      <input [formControl]=\"emailFormField\" matInput type=\"text\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"password\">\r\n    <mat-form-field class=\"password-field\" appearance=\"fill\">\r\n      <mat-label>\r\n        Password\r\n      </mat-label>\r\n      <input [formControl]=\"passwordFormField\" matInput class=\"password\" type=\"password\">\r\n    </mat-form-field>\r\n  </div>\r\n  <button (click)=\"renewToken()\" color=\"primary\" mat-raised-button class=\"refresh\">Renew token</button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ExpiredTokenRefreshDialogComponent} from \"../expired-token-refresh-dialog/expired-token-refresh-dialog.component\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-expired-token-refresh-wrapper',\r\n  templateUrl: './expired-token-refresh-wrapper.component.html',\r\n  styleUrls: ['./expired-token-refresh-wrapper.component.scss']\r\n})\r\nexport class ExpiredTokenRefreshWrapperComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(ExpiredTokenRefreshDialogComponent)\r\n  }\r\n\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n<div *ngIf=\"$selectedImage | async as data\" fxLayoutAlign.xs=\"center center\"\r\n     fxLayout.lg=\"row\" fxLayout.xs=\"column\" fxLayout.sm=\"column\" class=\"container\" fxLayoutGap=\"30px\"\r\n     fxLayoutAlign=\"center center\" fxLayoutGap.lg=\"10px\"\r\n     [ngStyle.md]=\"{'padding-top': '30px', 'margin-left': '22px', 'height': '820px', 'width': '97%'}\"\r\n     [ngStyle.sm]=\"{'padding-top': '30px', 'margin-left': '3px', 'height': '1200px', 'width': '97%'}\"\r\n     [ngStyle.xs]=\"{'padding-top': '5px', 'margin-left': '5px', 'height': '1200px', 'width': '100%'}\"\r\n     [ngStyle.gt-lg]=\"{'padding-top': '40px', 'margin-left': '5px', 'height': '900px', 'width': '97%'}\">\r\n  <mat-card class=\"example-card shadow color-and-radius\">\r\n    <mat-card-header>\r\n      <img class=\"shadow\" mat-card-avatar [src]=\"data.user.profileImgPath\" alt=\"\">\r\n      <mat-card-title [ngStyle.xs]=\"{'font-size': '15px' }\">{{data.name}}</mat-card-title>\r\n      <mat-card-subtitle>{{data.user.username}}</mat-card-subtitle>\r\n      <mat-card-subtitle *ngIf=\"data.linkReference !== 'null'\">\r\n        <a matTooltip=\"{{'Go to ' + data.linkReference}}\"\r\n           [href]=\"data.linkReference\" mat-icon-button>\r\n          <mat-icon>link</mat-icon>\r\n        </a>\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image [src]=\"data.link\" alt=\"Photo of a Shiba Inu\">\r\n    <mat-card-content>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button class=\"shadow\" mat-button style=\"margin-right: 15px\">\r\n        <mat-icon style=\"margin-right: 3px; margin-left: 3px; color: black\">thumb_up</mat-icon>\r\n        <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.liked}}</span>\r\n      </button>\r\n\r\n\r\n      <button style=\"background-color: #941B85;\" class=\"shadow\" mat-button matTooltip=\"Click to open menu\"\r\n              [matMenuTriggerFor]=\"menu\"\r\n              aria-label=\"Example icon-button with a menu\">\r\n        <!--    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>-->\r\n        <mat-icon style=\"color: white\">save_alt</mat-icon>\r\n        <span style=\"margin-left: 3px; margin-right: 3px; color: white\">{{data.downloaded}}</span>\r\n      </button>\r\n\r\n      <mat-menu backdropClass=\"img-download-detail\" #menu=\"matMenu\">\r\n        <div *ngFor=\"let detail of data.imageDetails\">\r\n          <button (click)=\"download(detail)\" style=\"width: 700px; height: 100%\" mat-menu-item>\r\n            <mat-icon>aspect_ratio</mat-icon>\r\n            <span style=\"display: inline-block; width: 15px\"></span>\r\n            <span>{{detail.width + \" x \" + detail.height}}</span>\r\n            <!--          <span style=\"display: inline-block; width: 25px\"></span>-->\r\n            <!--          <span>{{detail.contentType}}</span>-->\r\n            <span style=\"display: inline-block; width: 25px\"></span>\r\n            <span>{{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n          </button>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <button mat-menu-item [mat-menu-trigger-for]=\"cropImage\">\r\n          <mat-icon>settings_applications</mat-icon>\r\n          Download options\r\n        </button>\r\n\r\n        <mat-menu #cropImage=\"matMenu\" xPosition=\"before\">\r\n          <button (click)=\"cropImageForDownload(data.imageDetails[0])\" mat-menu-item>\r\n            <mat-icon>photo_size_select_large</mat-icon>\r\n            Crop image\r\n          </button>\r\n          <mat-divider></mat-divider>\r\n          <button (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\" mat-menu-item>\r\n            <mat-icon>transform</mat-icon>\r\n            Set individual dimensions\r\n          </button>\r\n        </mat-menu>\r\n      </mat-menu>\r\n    </mat-card-actions>\r\n\r\n    <!--<mat-card-content>\r\n\r\n    </mat-card-content>-->\r\n  </mat-card>\r\n\r\n  <mat-card [ngStyle.xs]=\"{'margin-left': '30px', 'width': '87%'}\"\r\n            class=\"download-image color-and-radius shadow\">\r\n    <mat-card-title>\r\n      <strong>SpecShots</strong> download options\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n\r\n    <mat-card-actions>\r\n      <mat-list #option>\r\n        <mat-list-item #downloadItem\r\n                       (click)=\"OpenDownloadBox(detail)\"\r\n                       class=\"hoverable border-radius\"\r\n                       *ngFor=\"let detail of data.imageDetails; index as i\"\r\n                        [class.clicked-details]=\"detail.width === clickedDownloadResolution.width\">\r\n          <mat-icon mat-list-icon>cloud_download</mat-icon>\r\n          <div mat-line>\r\n          <strong>{{appendFileSizeName(i)}}</strong> {{detail.width + \" x \" + detail.height}}\r\n          </div>\r\n          <div mat-line>\r\n            <span>Size : {{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n          </div>\r\n        </mat-list-item>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <mat-list-item *ngIf=\"toggle\">\r\n          <button matLine\r\n                  (click)=\"download(clickedDownloadResolution)\" style=\"font-size: 23px\" color=\"primary\" mat-line mat-raised-button>\r\n            Download\r\n          </button>\r\n        </mat-list-item>\r\n\r\n        <mat-divider></mat-divider>\r\n        <div mat-subheader>Individual download actions</div>\r\n\r\n        <mat-list-item class=\"hoverable\" (click)=\"cropImageForDownload(data.imageDetails[0])\">\r\n          <mat-icon mat-list-icon>photo_size_select_large</mat-icon>\r\n          <div mat-line>\r\n            Crop image\r\n          </div>\r\n        </mat-list-item>\r\n        <mat-list-item class=\"hoverable\" (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\">\r\n          <mat-icon mat-list-icon>transform</mat-icon>\r\n          <div mat-line>\r\n            Set individual dimensions\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n<!--<div fxLayout=\"row\" style=\"min-width: 100%; padding: 30px; margin-top: 200px\" *ngIf=\"$selectedImage | async as data\">\r\n  <div fxLayoutGap=\"20px\" *ngFor=\"let i of data.tags\">\r\n    <a mat-button (click)=\"clickedTag(i.tag)\" style=\"color: black;\r\n        color: black;\r\n        text-decoration: none;\r\n        border-radius: 20px;\r\n        margin-top: 2%;\">\r\n      {{'# ' + i.tag }}\r\n    </a>\r\n  </div>\r\n</div>-->\r\n\r\n\r\n<!--<div class=\"container\">\r\n\r\n\r\n  <div *ngIf=\"$selectedImage | async as data\" class=\"content\">\r\n    <div class=\"img\">\r\n      <img class=\"img-content\"  [src]=\"data.link\" alt=\"\">\r\n    </div>\r\n    <div class=\"content-details\">\r\n      <span class=\"data-name\">{{data.name}}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"download\" *ngIf=\"$selectedImage | async as data\">\r\n    <div class=\"spacer\" style=\"margin-bottom: 20px; background-color: #941B85\">\r\n      <div class=\"profile-detail\">\r\n        <div class=\"temp\">\r\n          <button mat-icon-button>\r\n            &lt;!&ndash;        <mat-icon>account_circle</mat-icon>&ndash;&gt;\r\n            <img class=\"shadow\" width=\"60px\" height=\"60px\" style=\"border-radius: 100%;\"\r\n                 src=\"{{data.user.profileImgPath}}\" alt=\"\">\r\n          </button>\r\n          <span style=\"margin-left: 30px; font-size: 18px; color: white\">{{data.user.username}}</span>\r\n        </div>\r\n      </div>\r\n      <mat-divider style=\"margin-top: 40px; margin-bottom: 20px; border-color: white\"></mat-divider>\r\n\r\n      <div class=\"img-detail\">\r\n        <div class=\"img-name\" style=\"display: flex; flex-direction: row; align-items: baseline; flex-wrap: wrap; max-width: 220px\">\r\n          &lt;!&ndash;<mat-icon  color=\"primary\" style=\"font-size: 40px; margin-right: 5px\">image</mat-icon>&ndash;&gt;\r\n          <button style=\" ;width: 50px; height: 50px; font-size: 18px; word-break: break-all; background-color: white\" mat-fab>\r\n            <mat-icon style=\"color: black\" >image</mat-icon>\r\n          </button>\r\n          <span style=\"margin-left: 30px; font-size: 18px; max-width: 130px; color: white\">{{data.name}}</span>\r\n        </div>\r\n\r\n        <div class=\"img-stats\">\r\n          <mat-chip-list style=\"margin-top: 20px; margin-bottom: 10px\" aria-label=\"Fish selection\">\r\n            <div class=\"chips\" style=\"display: flex; flex-direction: row; margin-top: 20px\">\r\n              <mat-chip class=\"shadow chip\" style=\"background-color: white\"  selected>\r\n                <mat-icon style=\"margin-right: 3px; margin-left: 3px; color: black\">thumb_up</mat-icon>\r\n                <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.liked}}</span>\r\n              </mat-chip>\r\n              <mat-chip class=\"shadow chip\" style=\"background-color: white\"  selected>\r\n                <mat-icon style=\"color: black\">save_alt</mat-icon>\r\n                <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.downloaded}}</span>\r\n              </mat-chip>\r\n            </div>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <mat-divider style=\"margin-top: 20px; margin-bottom: 10px; border-color: white\"></mat-divider>\r\n\r\n\r\n      <div class=\"download-image\">\r\n        <button class=\"shadow\" mat-raised-button matTooltip=\"Click to open menu\"\r\n                style=\"color: white; width: 300px; height: 50px; background-color: #ef233c\"\r\n                [matMenuTriggerFor]=\"menu\"\r\n                aria-label=\"Example icon-button with a menu\">\r\n          &lt;!&ndash;    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>&ndash;&gt;\r\n          Download\r\n        </button>\r\n\r\n        <mat-menu backdropClass=\"img-download-detail\" #menu=\"matMenu\" >\r\n          <div *ngFor=\"let detail of data.imageDetails\">\r\n            <button (click)=\"download(detail)\" style=\"width: 700px; height: 100%\" mat-menu-item>\r\n              <mat-icon>aspect_ratio</mat-icon>\r\n              <span style=\"display: inline-block; width: 15px\"></span>\r\n              <span>{{detail.width + \" x \" + detail.height}}</span>\r\n              &lt;!&ndash;          <span style=\"display: inline-block; width: 25px\"></span>&ndash;&gt;\r\n              &lt;!&ndash;          <span>{{detail.contentType}}</span>&ndash;&gt;\r\n              <span style=\"display: inline-block; width: 25px\"></span>\r\n              <span>{{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n            </button>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n          <button mat-menu-item [mat-menu-trigger-for]=\"cropImage\">\r\n            <mat-icon>settings_applications</mat-icon>\r\n            Download options\r\n          </button>\r\n\r\n          <mat-menu #cropImage=\"matMenu\" xPosition=\"before\">\r\n            <button (click)=\"cropImageForDownload(data.imageDetails[0])\" mat-menu-item>\r\n              <mat-icon>photo_size_select_large</mat-icon>\r\n              Crop image\r\n            </button>\r\n            <mat-divider></mat-divider>\r\n            <button (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\" mat-menu-item>\r\n              <mat-icon>transform</mat-icon>\r\n              Set individual dimensions</button>\r\n          </mat-menu>\r\n        </mat-menu>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"related-tags\">\r\n      <h3>Related tags : </h3>\r\n      <div *ngIf=\"$selectedImage | async as data\" class=\"tags\">\r\n        <a class=\"shadow\" (click)=\"clickedTag(i.tag)\" style=\"background-color: #f4f1de; color: black;\r\n        color: black;\r\n        text-decoration: none;\r\n        padding: 5px 20px;\r\n        border-radius: 20px;\r\n        margin-top: 2%; margin-right: 1%\" *ngFor=\"let i of data.tags\">{{'# ' + i.tag }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <span style=\"margin-top: 20px\"></span>\r\n  </div>\r\n</div>-->\r\n\r\n<div [ngStyle.xs]=\"{'margin-top': '50px'}\" class=\"related-images-container\">\r\n  <div class=\"header\">\r\n    <h2>Related images : </h2>\r\n  </div>\r\n  <app-image-content [isProfile]=\"false\"\r\n                     [data]=\"$relatedImages\"></app-image-content>\r\n</div>\r\n\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {\r\n  CropAndDownload,\r\n  GetDownloadDetails, GetImageAsByse64,\r\n  GetImageByImageId,\r\n  GetRelatedImagesByTagIDs,\r\n  ImagesByTagsAction\r\n} from \"../../shared/app-state/actions/image.action\";\r\nimport {DownloadDetailsState} from \"../../shared/app-state/states/download-details.state\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {Subject} from \"rxjs\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {ImagesByTagNameQueryImpl} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {RelatedImagesState} from \"../../shared/app-state/states/related-images.state\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ImageCropperComponent} from \"../../private/image-cropper/image-cropper.component\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {DownloadCropperComponent} from \"../download-cropper/download-cropper.component\";\r\nimport {SetResolutionDownloadDialogComponent} from \"../set-resolution-download-dialog/set-resolution-download-dialog.component\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {MatListItem} from \"@angular/material/list\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\n\r\n@Component({\r\n  selector: 'app-image-details',\r\n  templateUrl: './image-details.component.html',\r\n  styleUrls: ['./image-details.component.scss']\r\n})\r\nexport class ImageDetailsComponent implements OnInit {\r\n\r\n  @ViewChild('downloadItem') downloadItem: ElementRef;\r\n\r\n  clickedDownloadResolution: ImageFileDetails = {width: 0, height: 0, downloadLink: '', size: 0, contentType: ''};\r\n  toggle: boolean = false;\r\n\r\n  // @Select(DownloadDetailsState.getFile) $selectedImage;\r\n  @Select(RelatedImagesState.getRelatedImages) $relatedImages;\r\n  @Select(UserDetailsState.profileImgPath) $profileImg;\r\n  @Select(DownloadDetailsState.getDetails) $downloadDetails;\r\n  @Select(GetImageByIdState.getImageDetail) $selectedImage;\r\n  formattedDetails = new Subject<string[]>();\r\n  private imageId: string;\r\n\r\n\r\n  testImg: any\r\n\r\n\r\n  constructor(private store: Store,\r\n              private route: ActivatedRoute,\r\n              private downloadService: ImageDownloadService,\r\n              private dialog: MatDialog,\r\n              private service: ImageRequestService,\r\n              private router: Router,\r\n              private sanitizer: DomSanitizer) {\r\n    this.testImg = this.sanitizer.bypassSecurityTrustStyle(`url(${this.store.selectSnapshot(GetImageByIdState.getImageDetail).link})`);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route\r\n      .paramMap\r\n      .subscribe(param => {\r\n        const imageId = param.get('imageId');\r\n        this.imageId = imageId;\r\n        console.log(this.imageId);\r\n      });\r\n  }\r\n\r\n  download(detail: any) {\r\n    console.log(detail);\r\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    console.log(detail);\r\n    this.store\r\n      .dispatch(new GetDownloadDetails(imageId, detail))\r\n      .subscribe(value1 => {\r\n        console.log(value1.downloadDetails);\r\n        window.location.href = value1.downloadDetails.downloadLink;\r\n        this.store\r\n          .dispatch(new GetImageByImageId(this.imageId));\r\n      });\r\n    // window.location.href = detail.downloadLink;\r\n  }\r\n\r\n  clickedTag(tag: string) {\r\n    this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    );\r\n  }\r\n\r\n  appendFileSizeName(index: number): string {\r\n    switch (index) {\r\n      case 0:\r\n        return 'Original ';\r\n      case 1:\r\n        return 'XLarge ';\r\n      case 2:\r\n        return 'Large ';\r\n      case 3:\r\n        return 'Small ';\r\n    }\r\n  }\r\n\r\n  cropImageForDownload(imageDetail: any) {\r\n    console.log(imageDetail);\r\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    this.store.dispatch(new GetImageByImageId(imageId));\r\n    this.store.dispatch(new GetImageAsByse64(imageId));\r\n    this.router\r\n      .navigate(['crop-download', {imageId: imageId}]);\r\n    console.log(imageDetail);\r\n    // this.service\r\n    //   .getImageBytes(imageId)\r\n    //   .subscribe(byteArray => {\r\n    //     let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n    //     let reader = new FileReader();\r\n    //     reader.onload = (evt: any) => {\r\n    //       this.store\r\n    //         .dispatch(new CropAndDownload(evt.target.result))\r\n    //       this.router\r\n    //         .navigate(['crop-download', {imageId: imageId}])\r\n    //     };\r\n    //     // this.dialog.open(DownloadCropperComponent,{\r\n    //     //   data: { img: evt.target.result,\r\n    //     //     width: imageDetail.width,\r\n    //     //     height: imageDetail.height, viewName: 'Download' }\r\n    //     // })\r\n    //     reader.readAsDataURL(blob);\r\n    //   })\r\n  }\r\n\r\n  getIndividualResolutionDownloadDialog(imageDetail: any) {\r\n    console.log(imageDetail);\r\n    this.dialog.open(SetResolutionDownloadDialogComponent, {\r\n      width: '450px',\r\n      height: '460px',\r\n      panelClass: 'setIndividualResDialog'\r\n    });\r\n  }\r\n\r\n  OpenDownloadBox(detail: ImageFileDetails) {\r\n    this.clickedDownloadResolution = this.clickedDownloadResolution.width === detail.width ? this.clickedDownloadResolution : detail;\r\n    this.toggle = this.clickedDownloadResolution.width === detail.width;\r\n  }\r\n}\r\n","import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {SelectImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {ChangeImageDetailsDialogComponent} from \"../../private/change-image-details-dialog/change-image-details-dialog.component\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-image-item',\r\n  templateUrl: './image-item.component.html',\r\n  styleUrls: ['./image-item.component.scss']\r\n})\r\nexport class ImageItemComponent implements OnInit {\r\n  @Input() image: ImageModel;\r\n  @Input() rowHeight = 1;\r\n  @Input() gutterSize = 1;\r\n  @ViewChild('img') img: ElementRef;\r\n  public rows = 0;\r\n\r\n  constructor(private store: Store, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  calculateRows() {\r\n    console.log(this.img.nativeElement.offsetHeight);\r\n    this.rows = Math.floor(\r\n      this.img.nativeElement.offsetHeight / (this.rowHeight + this.gutterSize)\r\n    );\r\n    console.log('rows calculated : ' + this.rows);\r\n  }\r\n}\r\n\r\n\r\nexport interface ImageViewModel {\r\n  src: string;\r\n  alt?: string;\r\n}\r\n","<div class=\"content\">\r\n  <img class=\"img\" #img\r\n       [src]=\"image.link\"\r\n       (load)=\"calculateRows()\"/>\r\n  <!--FOO-->\r\n</div>\r\n","<div style=\"display: flex; justify-content: center; align-items: center\">\n\n  <mat-error *ngIf=\"$requestStatus | async as status\" style=\";margin: 0 auto; font-size: 30px\">\n    The requested Page could not be found\n    Reason : {{status.message}}\n  </mat-error>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    /*this.store.dispatch(new RequestMessageAction(null));*/\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {UserDetailsActions} from \"../shared/app-state/actions/user-details.action\";\r\nimport ValidResetPasswordTokenResponse = UserDetailsActions.ValidResetPasswordTokenResponse;\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ChangePasswordComponent} from \"../private/change-password/change-password.component\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaswordResetGuard implements CanActivate {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private store: Store,\r\n              private router: Router,\r\n              private dialog: MatDialog) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const tokenId = next.params.id;\r\n    this.store\r\n      .dispatch(new ValidResetPasswordTokenResponse(tokenId.substring(1)))\r\n      .subscribe(value => {\r\n        this.dialog.open(ChangePasswordComponent)\r\n        this.router.navigate(['/welcome']);\r\n      });\r\n    /*this.authService\r\n      .validatePasswordTokenId( {tokenId: tokenId.substring(1)} )\r\n      .subscribe(value => console.log(value))*/\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n\r\n<div  class=\"container\">\r\n  <!--  <div class=\"filler_left\"></div>-->\r\n\r\n  <mat-error *ngIf=\"requestError\" style=\"font-size: 40px\">\r\n    {{errorMessage}}\r\n  </mat-error>\r\n\r\n  <div *ngIf=\"requestError === false\" class=\"center\">\r\n\r\n\r\n    <div class=\"profile_icon\">\r\n<!--      <button *ngIf=\"!($logged | async)\" disabled mat-icon-button-->\r\n<!--              aria-label=\"Example icon button with a home icon\">-->\r\n<!--        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>-->\r\n<!--      </button>-->\r\n\r\n      <mat-icon class=\"profile-img\" *ngIf=\"!($profileImg | async)\"\r\n                style=\"font-size: 145px; color: lightgray;\">\r\n        account_circle\r\n      </mat-icon>\r\n      <!--      <img *ngIf=\"($logged | async) as loggedUser\" class=\"profile-img\" [src]=\"loggedUser.profileImgPath\">-->\r\n      <img *ngIf=\"($profileImg | async) as src\" class=\"profile-img\" [src]=\"src\">\r\n<!--      <img class=\"profile-img\" [src]=\"userDetails.userProfile.profileImgPath\">-->\r\n    </div>\r\n    <div class=\"title\">\r\n      <div class=\"user-name\">\r\n<!--        <span *ngIf=\"userDetails\"-->\r\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\r\n<!--          <strong>-->\r\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName}}-->\r\n<!--          </strong>-->\r\n<!--        </span>-->\r\n<!--        <span *ngIf=\"$userDetails | async as loggedUser\"-->\r\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\r\n<!--          <strong>-->\r\n<!--            {{loggedUser.firstName + \" \" + loggedUser.lastName}}-->\r\n<!--          </strong>-->\r\n<!--        </span>-->\r\n          <span *ngIf=\"$firstLast | async as name\"\r\n                style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">\r\n          <strong>\r\n            {{name}}\r\n          </strong>\r\n        </span>\r\n      </div>\r\n      <br>\r\n      <div class=\"user-name\">\r\n        <p style=\"font-size: 17px; line-height: 28px\">\r\n          Download free, beautiful high-quality photos curated <br> by\r\n<!--          <span *ngIf=\"userDetails\">-->\r\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName }}-->\r\n<!--         </span>.-->\r\n<!--          <span *ngIf=\"$userDetails | async as userDetails\">-->\r\n<!--            {{userDetails.firstName + \" \" + userDetails.lastName }}-->\r\n<!--         </span>.-->\r\n          <span *ngIf=\"$firstLast | async as name\">\r\n            {{name}}\r\n         </span>.\r\n        </p>\r\n      </div>\r\n<!--      <div *ngIf=\"userDetails.isOwner\" class=\"edit\">-->\r\n<!--        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>-->\r\n<!--          <mat-icon>edit</mat-icon>-->\r\n<!--          Edit profile-->\r\n<!--        </button>-->\r\n<!--      </div>-->\r\n      <div *ngIf=\"editableProfile | async\" class=\"edit\">\r\n        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>\r\n          <mat-icon>edit</mat-icon>\r\n          Edit profile\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<mat-tab-group mat-stretch-tabs (selectedTabChange)=\"imageWasLiked($event)\" class=\"mat-tab-group\">\r\n  <mat-tab class=\"tab\" label=\"Gallery\">\r\n    <ng-template class=\"template\" mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\r\n      Images\r\n    </ng-template>\r\n<!--    <app-image-content [isProfile]=\"true\"-->\r\n<!--                       [data]=\"$imgs\"></app-image-content>-->\r\n    <ng-template matTabContent>\r\n      <app-image-content class=\"gallery-content\" [isProfile]=\"true\"\r\n                         [data]=\"$userImages\"></app-image-content>\r\n    </ng-template>\r\n  </mat-tab>\r\n  <mat-tab label=\"Likes\">\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\r\n      Likes\r\n    </ng-template>\r\n    <ng-template matTabContent>\r\n      <app-image-content class=\"gallery-content\" [isProfile]=\"false\"\r\n                         [data]=\"$userLikes\"></app-image-content>\r\n    </ng-template>\r\n    <div>\r\n    </div>\r\n  </mat-tab>\r\n<!--  <mat-tab *ngIf=\"(editableProfile | async) || (userDetails.isOwner)\" label=\"Third\">-->\r\n<!--    <ng-template mat-tab-label>-->\r\n<!--      <mat-icon class=\"example-tab-icon\">lock</mat-icon>-->\r\n<!--      Private-->\r\n<!--    </ng-template>-->\r\n<!--  </mat-tab>-->\r\n  <!--<mat-tab *ngIf=\"editableProfile | async\" label=\"Third\">\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">lock</mat-icon>\r\n      Private\r\n    </ng-template>\r\n  </mat-tab>-->\r\n</mat-tab-group>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {ImagesByUserIdState} from \"../../shared/app-state/states/images-by-user-id.state\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {map, share, switchMap, tap} from \"rxjs/operators\";\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\nimport {UserAuthStateModel} from \"../../shared/domain/UserAuthStateModel\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {MatTabChangeEvent} from \"@angular/material/tabs\";\nimport {ProfileViewModel} from \"./profile-view-model\";\nimport {ModelFilter} from \"../../shared/util/model-filter\";\nimport {ImageModelFilter} from \"../../shared/util/image-model-filter\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n\n  weekFilter: boolean = false;\n\n\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n\n  @Select(LoginStateModel.loggedInUser) $logged;\n  userDetails: ProfileViewModel;\n  @Select(UserDetailsState.firstLastName) $firstLast;\n  @Select(UserDetailsState.getUserImages) $userImages;\n  @Select(UserDetailsState.getUserLikes) $userLikes;\n  @Select(UserDetailsState.userDetails) $userDetails;\n\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  $imgs = new Observable<ImageModel[]>();\n  $likeds = new Observable<ImageModel[]>();\n  likes: ImageModel[] = [];\n  requestError: boolean = false;\n  errorMessage: string;\n  downloadLink: any;\n  editableProfile = new BehaviorSubject<boolean>(false);\n\n  constructor(private store: Store,\n              private route: ActivatedRoute,\n              private service: ImageRequestService,\n              private router: Router) {\n    // this.route.data.subscribe((value: { userDetails: ProfileViewModel }) => {\n    //   this.userDetails = value.userDetails;\n    //   this.$imgs = of(value.userDetails.userProfile.images);\n    //   this.$likeds = of(value.userDetails.userProfile.likes)\n    // })\n  }\n\n  ngOnInit(): void {\n\n    this.likes = this.store.selectSnapshot(UserDetailsState.getUserLikes);\n\n    this.$userLikes.subscribe(console.log)\n\n\n    this.$userImages\n      .subscribe(model =>  {\n        if (model !== undefined) {\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 7)\n          //   .forEach(image => console.log(\"Week : \" + image.uploadDate));\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 30)\n          //   .forEach(image => console.log(\"Month : \" + image.uploadDate))\n          //\n          // ImageModelFilter\n          //   .apply(model, 3600000 * 24 * 365)\n          //   .forEach(image => console.log(\"Year : \" + image.uploadDate))\n\n        }\n      })\n\n\n    console.log(this.userDetails);\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store\n          .dispatch(new UserDetailsActions.GetUserDetails(userId))\n          .subscribe(value => {\n            console.log(value.UserDetails);\n            this.requestError = false;\n          }, error => {\n            this.requestError = true;\n            this.errorMessage = 'Unable to find requested user';\n            this.router.navigate(['profile', {error: error.error.message}])\n          })\n        this.$logged.subscribe(loggedUser => {\n          if (loggedUser) {\n            this.editableProfile.next(loggedUser.userId === param.get('userId'));\n          }\n        })\n      })\n\n    const loggedUser : BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    if (loggedUser !== undefined && loggedUser !== null) {\n\n      // this.store.dispatch([\n      //     new AuthenticationActions.IsLoggedIn(),\n      //     new ImagesByUserIDAction(loggedUser.userId)\n      //   ]\n      // )\n    }\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  getLikes(): ImageModel[] {\n    console.log(this.$userLikes);\n    return this.store.selectSnapshot(UserDetailsState.getUserLikes);\n  }\n\n  imageWasLiked($event: MatTabChangeEvent): void {\n    const label = $event.tab.textLabel;\n    console.log(label);\n    if (label === 'Likes') {\n      console.log(\"da schau her\");\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(\n        this.store.selectSnapshot(UserDetailsState.userDetails).userId\n      ))\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../renew-expired-account-token/renew-expired-account-token.component\";\r\n\r\n@Component({\r\n  selector: 'app-renew-expired-account-token-wrapper',\r\n  templateUrl: './renew-expired-account-token-wrapper.component.html',\r\n  styleUrls: ['./renew-expired-account-token-wrapper.component.scss']\r\n})\r\nexport class RenewExpiredAccountTokenWrapperComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n      width: '450px',\r\n      maxWidth: '450px',\r\n      minWidth: '280px',\r\n      height: '300px',\r\n      minHeight: '300px',\r\n      maxHeight: '300px'\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {RenewAccountVerificationToken} from \"../../shared/login/login.component\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {ShowEmailWasSentDialog} from \"../../shared/util/ShowEmailWasSentDialog\";\r\n\r\n@Component({\r\n  selector: 'app-renew-expired-account-token',\r\n  templateUrl: './renew-expired-account-token.component.html',\r\n  styleUrls: ['./renew-expired-account-token.component.scss']\r\n})\r\nexport class RenewExpiredAccountTokenComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<RenewExpiredAccountTokenComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: RenewAccountVerificationToken,\r\n              private authService: UserAuthenticationService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  renewToken() {\r\n    this.authService\r\n      .renewToken(\r\n        {email: this.data.email, password: this.data.password}\r\n      ).subscribe(value =>\r\n      new ShowEmailWasSentDialog(this.dialog, value));\r\n  }\r\n}\r\n","<div class=\"verification-container\">\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"start end\" class=\"close\">\r\n    <button (click)=\"dialogRef.close()\" mat-icon-button>\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"title\">\r\n    <h2 *ngIf=\"data.tokenError === false\" style=\"text-align: center\">Your account needs to be verified</h2>\r\n    <h2 *ngIf=\"data.tokenError === true\" style=\"text-align: center\">Invalid request</h2>\r\n    <h2 *ngIf=\"data.tokenError === true && data.message\" style=\"text-align: center\">{{data.message}}</h2>\r\n  </div>\r\n\r\n  <a *ngIf=\"data.tokenError === true\"\r\n     mat-button\r\n     (click)=\"dialogRef.close()\"\r\n     routerLink=\"/welcome\"\r\n     class=\"img\"\r\n     fxLayout=\"column\"\r\n     fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/error-3-128.png\">\r\n  </a>\r\n\r\n  <a *ngIf=\"data.tokenError === undefined || data.tokenError === null || data.tokenError === false\" mat-button (click)=\"renewToken()\" class=\"img\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/error-3-128.png\">\r\n    <span>Receive email to verify account</span>\r\n  </a>\r\n\r\n  <!--<div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"home\">\r\n    <a fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n       style=\"color: #3f51b5;\" routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <mat-icon style=\"font-size: 50px\">home</mat-icon>\r\n    </a>\r\n  </div>-->\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {debounceTime, filter, map, switchMap, tap, throttleTime} from \"rxjs/operators\";\r\nimport {TagRequestService} from \"../../serviceV2/tag-request.service\";\r\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImagesByTagsAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\r\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {\r\n  FilterName,\r\n  ImagesByTagNameQueryImpl,\r\n  ImagesByTagNameWithFilterArgs, ImagesByTagNameWithFilterOpt\r\n} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {SignupComponent} from \"../../shared/signup/signup.component\";\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {LoginComponent} from \"../../shared/login/login.component\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {error} from \"@angular/compiler/src/util\";\r\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\r\nimport {IUserAuthState} from \"../../shared/domain/UserAuthStateModel\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {SearchViewModel} from \"./search-view.model\";\r\nimport {MatCheckboxChange} from \"@angular/material/checkbox\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {SearchBarContent} from \"../custom-search-bar-content/custom-search-bar-content.component\";\r\nimport {PressedSearchContent} from \"../custom-search-bar/custom-search-bar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-toolbar',\r\n  templateUrl: './search.toolbar.component.html',\r\n  styleUrls: ['./search.toolbar.component.scss']\r\n})\r\nexport class SearchToolbarComponent implements OnInit, OnDestroy {\r\n\r\n  disableSearchOptionsIcon = false;\r\n\r\n  // if variable filterable is set to true then\r\n  // autocomplete image-request will be filtered with the applied values\r\n  @Input('filterable') filterable: boolean;\r\n\r\n  queryContent: SearchBarContent;\r\n\r\n  openCloseDetails: boolean = false;\r\n  // searchOption can be set either to tags or to users\r\n  // if one of both is set then individual filter-options can be applied\r\n  searchOption = \"Tags\";\r\n  // observable-searchTerm changes when the value in the\r\n  // autocomplete input changes\r\n  searchTerm$ = new Subject<string>();\r\n  // observable $tagOptions is directly fetched from the rest api\r\n  // to be displayed in the options-dialog as a clickable tagList\r\n  @Select(SearchByTagState.getFetchedTagListAsOption) $tagOptions: Observable<SearchViewModel[]>;\r\n  // observable $userOptions is directly fetched from the rest api\r\n  // to be displayed in the options-dialog as a clickable userList\r\n  // which has an existing profile\r\n  @Select(SearchByUsersState.getFetchedUsers) $users: Observable<BaseUserDetails[]>;\r\n  // observable $isLoggedIn validates with a\r\n  // server request if the user is logged in\r\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\r\n  // $profileImage is to display the clickable\r\n  // logged users profile image int the toolbar\r\n  // when icon is clicked then a options menu opens\r\n  @Select(LoginStateModel.profileImg) $profileImage;\r\n  // $loggedUser is fetched from the server\r\n  // and displays the logged user details\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  // $userName -> formatted logged userName\r\n  @Select(LoggedUserDetailsState.loggedUsername) $userName;\r\n\r\n  mobile$ = new Subject<boolean>();\r\n  desktop$ = new Subject<boolean>();\r\n\r\n  isDesktopDevice: boolean;\r\n  isTabletDevice: boolean;\r\n  isMobileDevice: boolean;\r\n\r\n  filterOptions: FilterCheckBox = {\r\n    timeFilterOptions: [\r\n      {name: 'Last 7 Days', checked: false,  value: 7},\r\n      {name: 'Last 30 Days', checked: false,  value: 30},\r\n      {name: 'Last 365 Days', checked: false, value: 365},\r\n      {name: 'All', checked: true, disabled: false, value: -1}\r\n    ],\r\n    mostDownloads: { name: 'Most downloaded', checked: false },\r\n    mostLiked: { name: 'Most liked', checked: false }\r\n  };\r\n\r\n  weekFilter: boolean = false;\r\n  monthFilter: boolean = false;\r\n  yearFilter: boolean = false;\r\n\r\n  // ng until destroy\r\n\r\n  constructor(private service: TagRequestService,\r\n              public store: Store,\r\n              public imageService: ImageRequestService,\r\n              private dialog: MatDialog,\r\n              private authService: UserAuthenticationService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private media: MediaObserver,\r\n              private deviceService: DeviceDetectorService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        switch (this.searchOption) {\r\n          case 'Tags':\r\n            this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n            break;\r\n          case 'Users':\r\n            this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n            break;\r\n        }\r\n      });\r\n\r\n    this.isTabletDevice = deviceService.isTablet();\r\n    this.isDesktopDevice = deviceService.isDesktop();\r\n    this.isMobileDevice = deviceService.isMobile();\r\n\r\n\r\n\r\n    this.media.asObservable().subscribe(value => {\r\n      value.filter(value1 => {\r\n        if (value1.mqAlias === 'xs') {\r\n          this.isMobileDevice = true;\r\n          this.isDesktopDevice = false;\r\n          this.isTabletDevice = false;\r\n        } else if (value1.mqAlias === 'sm' || value1.mqAlias === 'md') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDevice = false;\r\n          this.isTabletDevice = true;\r\n        } else if (value1.mqAlias === 'xl' || value1.mqAlias === 'lg') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDevice = true;\r\n          this.isTabletDevice = false;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  foo(evt) {\r\n    console.log(evt.target.value)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.media.asObservable().subscribe(value => {\r\n      console.log(value);\r\n    });\r\n\r\n\r\n    let val: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    if (val === undefined || val === null)\r\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n        .subscribe(value => {\r\n          this.store.dispatch(new LoggedUserDetails(value.Authentication.user.userId))\r\n            .subscribe(value1 => console.log(value1));\r\n        });\r\n  }\r\n\r\n  search(selected): void {\r\n    console.log(selected);\r\n    /*const filter: ImagesByTagNameWithFilterOpt;*/\r\n\r\n    let filters = new Map();\r\n    filters.set(FilterName.FILTER_BY_DATE_WEEK, this.weekFilter);\r\n    filters.set(FilterName.FILTER_BY_DATE_MONTH, this.monthFilter);\r\n    filters.set(FilterName.FILTER_BY_DATE_YEAR, this.yearFilter);\r\n\r\n    switch (selected.scope) {\r\n      case 'Tags' :\r\n        this.store.dispatch(new ImagesByTagsAction(\r\n          new ImagesByTagNameWithFilterOpt(this.filterOptions, selected.queryString)))\r\n          .subscribe(value => {\r\n            console.log(value);\r\n            console.log(\"Search pressed..\");\r\n            this.store.dispatch(new Navigate(['/image-by-tags']))\r\n          });\r\n        break;\r\n      case 'Users':\r\n        const userId = this.store\r\n          .selectSnapshot(SearchByUsersState.getFetchedUsers)\r\n          .filter(user => user.username === selected.queryString)\r\n          .map(filteredUser => filteredUser.userId);\r\n        this.store.dispatch(\r\n          new Navigate(['profile', {userId: userId}]));\r\n    }\r\n\r\n  }\r\n\r\n  signup(): void {\r\n    const ref = new MatDialogConfig();\r\n    this.dialog.open(SignupComponent,\r\n      {\r\n        width: '500px',\r\n        disableClose: true,\r\n        autoFocus: false,\r\n        panelClass: 'registration-dialog',\r\n      });\r\n  }\r\n\r\n  login(): void {\r\n    const ref = new MatDialogConfig();\r\n    ref.disableClose = true;\r\n    this.dialog.open(LoginComponent,\r\n      {width: this.isDesktopDevice ? '450px' : this.isMobileDevice ? '320' :  '300px',\r\n        panelClass: 'login-dialog'});\r\n  }\r\n\r\n  logout(): void {\r\n    this.store.dispatch(new AuthenticationActions.Logout())\r\n      .subscribe(value =>\r\n        this.store.dispatch(new Navigate(['welcome'])))\r\n  }\r\n\r\n  navigateUploadImage(): void {\r\n    let loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    this.router.navigate(['upload', {userId: loggedUser.userId}]);\r\n  }\r\n\r\n\r\n  navigateToSettings(): void {\r\n    this.store.dispatch(new Navigate(['edit-profile']))\r\n  }\r\n\r\n  navigateToUser(): void {\r\n    let loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    this.store.dispatch(\r\n      new Navigate(['profile', {userId: loggedUser.userId}])\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  testing(el: any) {\r\n    console.log(el);\r\n    console.log(\"AHAHAHAHAH\");\r\n  }\r\n\r\n\r\n\r\n  public updateAll(checked: MatCheckboxChange, timeFilter: CheckBoxModel<number>): void {\r\n    this.filterOptions\r\n      .timeFilterOptions\r\n      .filter(value => value.name != timeFilter.name)\r\n      .forEach(value => value.checked = false);\r\n  }\r\n\r\n  openSearchOptions($event: boolean) {\r\n    console.log($event.valueOf());\r\n  }\r\n\r\n  contentPressed($event: any) {\r\n    console.log($event);\r\n  }\r\n\r\n  closeFilterDetails($event: PressedSearchContent) {\r\n    this.disableSearchOptionsIcon = $event.content.scope === 'Users';\r\n    this.openCloseDetails = $event.content.scope === 'Tags' && $event.clicked;\r\n  }\r\n}\r\n\r\n\r\nexport interface CheckBoxModel<T> {\r\n  name: string;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n  value?: T;\r\n}\r\n\r\nexport interface FilterCheckBox {\r\n  timeFilterOptions: Array<CheckBoxModel<number>>;\r\n  mostDownloads: CheckBoxModel<boolean>;\r\n  mostLiked: CheckBoxModel<boolean>;\r\n}\r\n\r\n\r\n","<div class=\"primary-color\"  [ngClass]=\"[isMobileDevice && ($isLoggedIn | async) == true ? 'mobile-logged-container' :\r\n                  isMobileDevice ? 'mobile-container' :\r\n                  isDesktopDevice  && ($isLoggedIn | async) == true ? 'container' :\r\n                   isDesktopDevice ?  'container-not-logged':\r\n                   ($isLoggedIn | async) == true ? 'tablet-logged-container' : 'tablet-container']\">\r\n  <div *ngIf=\"isDesktopDevice || isTabletDevice || isMobileDevice\" class=\"left\">\r\n    <a routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <img width=\"60px\" height=\"60px\" style=\"margin-top: 0px\"  src=\"assets/Specshots-Logo.png\">\r\n    </a>\r\n   <a style=\"margin-left: 10px; font-family: Epilogue,serif\"\r\n      *ngIf=\"(isDesktopDevice || isTabletDevice)\">\r\n      <strong>Welcome to SpecShots</strong>\r\n    </a>\r\n  </div>\r\n  <div  fxLayoutAlign=\"center\" fxFlexAlign=\"center\">\r\n  <!--  <div class=\"center\"> -->\r\n        <div class=\"center-wrapper\"  style=\"background-color: white; height: 60px; padding: 3px; border-radius: 10px;\"\r\n             [ngClass]=\"[isMobileDevice ? 'mobile-width' : isTabletDevice ? 'tablet-width' : 'desktop-width']\">\r\n          <app-custom-search-bar [disableIcon]=\"disableSearchOptionsIcon\"\r\n                                 (changedValue)=\"closeFilterDetails($event)\"\r\n                                 (enterPressed)=\"search($event)\"\r\n                                 (clickPressed)=\"search($event)\"\r\n                                 (openCloseSearchOptions)=\"closeFilterDetails($event)\"></app-custom-search-bar>\r\n        </div>\r\n   <!-- </div> -->\r\n  </div>\r\n\r\n  <!--<div *ngIf=\"($isLoggedIn | async) == false\" class=\"auth-container\">\r\n    <button (click)=\"login()\" mat-raised-button id=\"login\" class=\"\">Login</button>\r\n\r\n  </div>\r\n  <div *ngIf=\"($isLoggedIn | async) == false\" class=\"signUp\">\r\n    <button (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\r\n  </div>-->\r\n\r\n\r\n  <div class=\"user_actions\" *ngIf=\"(isMobileDevice || isTabletDevice) && ($isLoggedIn | async) == false\">\r\n    <button class=\"mobile-menu\" mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon style=\"color: white\">menu</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item *ngIf=\"($isLoggedIn | async) == false\" (click)=\"login()\" class=\"\">\r\n        <mat-icon>account_box</mat-icon>\r\n        Login\r\n      </button>\r\n      <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"signup()\" mat-menu-item>\r\n        <mat-icon>person_add</mat-icon>\r\n        Register\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n\r\n  <div class=\"unregistered_actions\" *ngIf=\"isDesktopDevice\">\r\n    <button  *ngIf=\"($isLoggedIn | async) == false\"\r\n            (click)=\"login()\"\r\n            mat-raised-button id=\"login\" class=\"\">\r\n      Login\r\n    </button>\r\n    <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\r\n    <!--<button *ngIf=\"($isLoggedIn | async) == true\" class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>-->\r\n    <button *ngIf=\"($isLoggedIn | async) == true\"\r\n            (click)=\"navigateUploadImage()\"\r\n            mat-icon-button>\r\n      <mat-icon matTooltip=\"Add your spectacular shot to your gallery.\"\r\n                matTooltipPosition=\"below\"\r\n                style=\"color: white; font-size: 40px\">add_a_photo</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <!--<div *ngIf=\"($isLoggedIn | async) == true\" class=\"submit_image\">\r\n    <button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>\r\n  </div>-->\r\n\r\n\r\n  <div class=\"account_icon_container\" *ngIf=\"($isLoggedIn | async) == true\">\r\n    <!--<button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>-->\r\n    <div class=\"msg\" >\r\n      <span class=\"welcome_msg\"\r\n            style=\"color: white; margin-left: 10%; font-size: 15px\"\r\n            *ngIf=\"($isLoggedIn | async) == true && (isDesktopDevice || isTabletDevice)\">\r\n      <strong>{{ \"Hi, \" + ($userName | async) || \"User\" }}</strong>\r\n    </span>\r\n    </div>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon *ngIf=\"!($profileImage | async)\"\r\n                style=\"color: white;font-size: 50px\">account_circle\r\n      </mat-icon>\r\n\r\n      <img *ngIf=\"($profileImage | async)\"\r\n           class=\"img shadow\"\r\n           [src]=\"$profileImage | async\">\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button (click)=\"navigateToUser()\" mat-menu-item>\r\n          <mat-icon>person</mat-icon>\r\n          <span>View profile</span>\r\n        </button>\r\n        <button *ngIf=\"isMobileDevice || isTabletDevice\" (click)=\"navigateUploadImage()\" mat-menu-item>\r\n          <mat-icon>add_a_photo</mat-icon>\r\n          <span>Submit your image</span>\r\n        </button>\r\n        <button (click)=\"navigateToSettings()\" mat-menu-item>\r\n          <mat-icon>settings</mat-icon>\r\n          <span>Account settings</span>\r\n        </button>\r\n        <mat-divider></mat-divider>\r\n        <button (click)=\"logout()\" mat-menu-item>\r\n          <mat-icon>exit_to_app</mat-icon>\r\n          <span>Logout</span>\r\n        </button>\r\n      </mat-menu>\r\n    </button>\r\n  </div>\r\n\r\n\r\n  <!-- <div style=\"width: 33%\"></div> -->\r\n  <!--<div *ngIf=\"filterable && searchOption !== 'Users'\" class=\"open-filter-details\">\r\n\r\n\r\n    <button class=\"expand_btn\" style=\"color: white;\" (click)=\"closeFilterDetails()\" mat-icon-button>\r\n      <mat-icon style=\"color: white\">expand_more</mat-icon>\r\n      <span style=\"color: white;\">Search details </span>\r\n    </button>\r\n  </div>\r\n</div>-->\r\n\r\n\r\n</div>\r\n\r\n<div class=\"container filterDetails\" *ngIf=\"filterable && openCloseDetails\">\r\n  <div *ngIf=\"searchOption === 'Tags'\" class=\"center2\" style=\"padding: 10px; display: flex; justify-content: center\">\r\n    <section id=\"id_Section\">\r\n      <ul class=\"align_ul\" style=\"list-style-type: none;\">\r\n        <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Filter : </strong></li>\r\n        <li *ngFor=\"let timeFilter of filterOptions.timeFilterOptions \"\r\n            style=\"color: white;\">\r\n          <mat-checkbox [(ngModel)]=\"timeFilter.checked\"\r\n                        (change)=\"updateAll($event, timeFilter)\">\r\n            {{timeFilter.name}}\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n\r\n      <section style=\"display: flex; flex-direction: column\">\r\n        <ul class=\"align_ul\" style=\"list-style-type: none\">\r\n          <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Sort : </strong></li>\r\n          <li style=\"color: white\">\r\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostDownloads.checked\">\r\n              {{filterOptions.mostDownloads.name}}\r\n            </mat-checkbox>\r\n          </li>\r\n          <li style=\"color: white\">\r\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostLiked.checked\">\r\n              {{filterOptions.mostLiked.name}}\r\n            </mat-checkbox>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </section>\r\n  </div>\r\n</div>\r\n","<div style=\"display: flex; flex-direction: column; font-size: 23px\" class=\"container\">\r\n\r\n  <!--<mat-divider style=\"margin-top: 40px\"></mat-divider>-->\r\n  <mat-form-field style=\"margin-top: 40px\" appearance=\"fill\">\r\n    <mat-label>Width</mat-label>\r\n    <input style=\"width: 250px\" (focusin)=\"focusedInWidth($event)\" type=\"text\" matInput [formControl]=\"widthInputField\">\r\n    <mat-error *ngIf=\"width.errors\">\r\n      <div *ngIf=\"width.errors.forbiddenValue\">\r\n        {{\"Invalid width : \"  + width.errors.forbiddenValue.value}}\r\n      </div>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field style=\"margin-top: 40px\" appearance=\"fill\">\r\n    <mat-label>Height</mat-label>\r\n    <input (focusin)=\"focusInHeight($event)\" style=\"width: 250px\" type=\"text\" matInput [formControl]=\"heightInputField\">\r\n    <mat-error *ngIf=\"height.errors\">\r\n      <div *ngIf=\"height.errors.forbiddenValue\">\r\n        {{\"Invalid height : \"  + height.errors.forbiddenValue.value}}\r\n      </div>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <div *ngIf=\"(width.errors || height.errors) && $selectedImage | async as selectedImg\">\r\n    <div *ngIf=\"width.value > 100 || height.value > 100\">\r\n      <mat-error>{{\"Selected size is invalid.\"}}</mat-error>\r\n      <mat-error>{{\"Size cannot be bigger than : \" }}</mat-error>\r\n      <mat-error>{{selectedImg.width + \" X \" + selectedImg.height}}</mat-error>\r\n    </div>\r\n    <mat-error *ngIf=\"width.value < 100 || height.value < 100\">{{\"Image is to small\"}}</mat-error>\r\n  </div>\r\n  <button (click)=\"downloadImage(width.value, height.value)\" *ngIf=\"isDownloading == false && (!width.errors || !height.errors)\" style=\"margin: 40px auto;font-size: 30px\" mat-fab color=\"primary\">\r\n        <mat-icon>download</mat-icon>\r\n  </button>\r\n  <div *ngIf=\"isDownloading\" class=\"spinner\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <mat-spinner diameter=\"40\"></mat-spinner>\r\n  </div>\r\n  <div *ngIf=\"isDownloading\" class=\"download-txt\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <p style=\"text-align: center\">Please wait</p>\r\n    <p style=\"text-align: center\">Downloading image.....This can take a while</p>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn} from \"@angular/forms\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\n\r\n@Component({\r\n  selector: 'app-set-resolution-download-dialog',\r\n  templateUrl: './set-resolution-download-dialog.component.html',\r\n  styleUrls: ['./set-resolution-download-dialog.component.scss']\r\n})\r\nexport class SetResolutionDownloadDialogComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  public widthInputField: FormControl;\r\n  public heightInputField: FormControl;\r\n  public widthFocus: boolean = false;\r\n  public heightFocus: boolean = false;\r\n  public isDownloading = false;\r\n  @Select(GetImageByIdState.getFileDetails) $selectedImage;\r\n\r\n  constructor(private dialogRef: MatDialogRef<SetResolutionDownloadDialogComponent>,\r\n              private fb: FormBuilder,\r\n              private store: Store,\r\n              private downloadService: ImageDownloadService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.initFormFields(imageFileDetails);\r\n    const ratio = imageFileDetails.width / imageFileDetails.height;\r\n\r\n    this.widthInputField\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (!this.heightFocus && this.widthFocus)\r\n          this.heightInputField.setValue((val / ratio).toFixed(2));\r\n\r\n      });\r\n    this.heightInputField\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (!this.widthFocus && this.heightFocus)\r\n          this.widthInputField.setValue((val * ratio).toFixed(2));\r\n      })\r\n  }\r\n\r\n  get width() {\r\n    return this.formGroup.get('width');\r\n  }\r\n\r\n  get height() {\r\n    return this.formGroup.get('height');\r\n  }\r\n\r\n  private initFormFields(imageFileDetails: ImageFileDetails) {\r\n    this.widthInputField = new FormControl(imageFileDetails.width, [\r\n      imgSizeValidator(imageFileDetails.width)\r\n    ]);\r\n    this.heightInputField = new FormControl(imageFileDetails.height, [\r\n      imgSizeValidator(imageFileDetails.height)\r\n    ]);\r\n    this.formGroup = this.fb.group({\r\n      width: this.widthInputField,\r\n      height: this.heightInputField,\r\n    })\r\n  }\r\n\r\n  focusedInWidth($event: FocusEvent): void {\r\n    console.log($event);\r\n    this.widthFocus = true;\r\n    this.heightFocus = false;\r\n  }\r\n\r\n  focusInHeight($event: FocusEvent): void {\r\n    console.log($event);\r\n    this.heightFocus = true;\r\n    this.widthFocus = false;\r\n  }\r\n\r\n  public downloadImage(width: any, height: any): void {\r\n    this.isDownloading = true;\r\n    this.downloadService\r\n      .downloadIndividualImage(\r\n        {\r\n          imageId: this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\r\n          width: width,\r\n          height: height\r\n        },\r\n        false)\r\n      .subscribe(value => console.log(value),\r\n          error => this.isDownloading = false,\r\n        () => this.isDownloading = false\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport function imgSizeValidator(value: number): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const forbidden = value < Number.parseFloat(control.value) || control.value < 100;\r\n    return forbidden ? {forbiddenValue: {value: control.value}} : null;\r\n  };\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {parseArguments} from \"@angular/cli/models/parser\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-startup',\r\n  templateUrl: './startup.component.html',\r\n  styleUrls: ['./startup.component.scss']\r\n})\r\nexport class StartupComponent implements OnInit {\r\n\r\n  public foo: string;\r\n  public isMobileDevice: boolean;\r\n  public isDesktopDeviceLg: boolean;\r\n  public isDesktopDeviceXl: boolean;\r\n  public isTabletDevice: boolean;\r\n  public desktop: string = Device.DESKTOP;\r\n  public tablet: Device.TABLET;\r\n  public mobile: Device.MOBILE;\r\n  constructor(public media: MediaProcessorService,\r\n              public deviceObserverService: DeviceObserverService,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        console.log(param.get('test'));\r\n        /*this.dialog.open(VerificationDialogComponent);*/\r\n      })\r\n\r\n    /*this.deviceObserverService\r\n      .getActiveDevice();*/\r\n\r\n    this.media.$mediaGetter.subscribe(value => {\r\n      console.log(value);\r\n      value.filter(value1 => {\r\n        if (value1.mqAlias === 'xs') {\r\n          this.isMobileDevice = true;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if (value1.mqAlias === 'sm') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = true;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if (value1.mqAlias === 'lg') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = true;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if(value1.mqAlias === 'xl') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<app-search-toolbar [filterable]=\"false\"></app-search-toolbar>\r\n\r\n<!--<app-bootstrap-playground></app-bootstrap-playground>-->\r\n\r\n<main>\r\n  <section class=\"banner\" id=\"top\">\r\n    <div class=\"container-banner\">\r\n      <!--<div class=\"row\">\r\n        <img class=\"logo\" width=\"512px\" height=\"512px\" src=\"assets/Specshots-Logo.png\">\r\n      </div>-->\r\n\r\n      <div class=\"row\">\r\n        <!--foo-->\r\n        <div class=\"banner-caption\">\r\n          <h1 style=\"font-size: 58px\">SpecShots</h1>\r\n          <div class=\"line-dec\"></div>\r\n          <h3>The most Spectacle Photography for You</h3>\r\n          <p>Here is some filler text to work with Hello Test.</p>\r\n          <button routerLink=\"/tag-view\" id=\"btn\" mat-stroked-button>Explore SpecShots</button>\r\n        </div>\r\n        <div  [ngStyle]=\"\r\n        {\r\n        'position': 'absolute',\r\n        'right': isDesktopDeviceXl ? '0%' : isDesktopDeviceLg ? '5%' : '0'\r\n        }\"\r\n             class=\"logo\">\r\n          <img width=\"800px\" height=\"800px\" src=\"assets/Specshots-Logo.png\">\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <div class=\"container-1\">\r\n    <div class=\"box-1\">\r\n      <h3>High quality</h3>\r\n      <p>Internationalized and accessible components for everyone. Well tested to ensure performance and\r\n        reliability.</p>\r\n      <p>Straightforward APIs with consistent cross platform behaviour.</p>\r\n    </div>\r\n    <div class=\"box-2\">\r\n      <h3>Versatile</h3>\r\n      <p>Provide tools that help developers build their own custom components with common interaction patterns.</p>\r\n      <p>Customizable within the bounds of the Material Design specification.</p>\r\n    </div>\r\n    <div class=\"box-3\">\r\n      <h3>Box Three</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  </div>\r\n\r\n</main>\r\n\r\n<!--<footer>\r\n\r\n</footer>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ImagesByTagsAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {\r\n  ImagesByTagNameQueryImpl,\r\n  ImagesByTagNameWithFilterOpt\r\n} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {TagRequestService} from \"../../serviceV2/tag-request.service\";\r\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\n\r\n@Component({\r\n  selector: 'app-tag-view',\r\n  templateUrl: './tag-view.component.html',\r\n  styleUrls: ['./tag-view.component.scss']\r\n})\r\nexport class TagViewComponent implements OnInit {\r\n  tags: TagModel[] = [];\r\n\r\n\r\n  constructor(public tagReqService: TagRequestService,\r\n              private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.tagReqService\r\n      .getAllTags()\r\n      .subscribe(value => this.tags = value);\r\n    /*this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    );*/\r\n  }\r\n\r\n\r\n  showTagImages(tag: TagModel) {\r\n    this.store.dispatch(new ImagesByTagsAction(\r\n      new ImagesByTagNameWithFilterOpt(null, tag.tag)))\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        this.store.dispatch(new Navigate(['/image-by-tags']))\r\n      });\r\n  }\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n\r\n<section id=\"main-content\">\r\n <div class=\"container\">\r\n  <div class=\"description-container\">\r\n    <h1>Topics</h1>\r\n    <p>Explore the world through topics of beautiful photos free to use under the Specshots License.</p>\r\n  </div>\r\n\r\n   <div class=\"grid-row\">\r\n    <mat-card class=\"card-body\" *ngFor=\"let tag of tags\">\r\n      <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <div class=\"flex-card-content\">\r\n          <div class=\"flex-card-content-text\">\r\n            <mat-card-title>{{tag.tag}}</mat-card-title>\r\n            <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"flex-card-content-thumbnail\">\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          Exploring our complicated relationship with technology — from the phone's we are glued to morning until night,\r\n          to the prized cameras we've got displayed around the house.\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button (click)=\"showTagImages(tag)\" mat-button><strong>EXPLORE</strong></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <!--<mat-card class=\"card-body\">\r\n      <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <div class=\"flex-card-content\">\r\n          <div class=\"flex-card-content-text\">\r\n            <mat-card-title>Humans</mat-card-title>\r\n            <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"flex-card-content-thumbnail\">\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          Humanity can be fascinating at times. The diversity in appereance and skills makes humans interesting.\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button>LIKE</button>\r\n        <button mat-button>SHARE</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n      <mat-card class=\"card-body\">\r\n        <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-content>\r\n          <div class=\"flex-card-content\">\r\n            <div class=\"flex-card-content-text\">\r\n              <mat-card-title>Food</mat-card-title>\r\n              <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n            </div>\r\n            <div class=\"flex-card-content-thumbnail\">\r\n              <div mat-card-avatar class=\"example-header-image\"></div>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            From street food to homemade cooking. People love to share their favorite types of food or\r\n            want to show off their abilities in making food.\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-button>LIKE</button>\r\n          <button mat-button>SHARE</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Gadgets</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Gadgets are useful devices to make certain situations more convenient. Show off your gadgets or how\r\n           you tinker gadgets regardless of how useful they are.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Hardware</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Found some old, intersting or new hardware ? Feel free to share it here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Fashion</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n          Discover the latest fashion trends or share your own style of fashion here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Movies</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Show off your favorite movie scene via a picture or share how passionate you feel about\r\n           movies, actors or directors.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Architecture</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Explore exteriors from around the world —\r\n           from brutalist buildings to minimalist structures that will give you\r\n           a new appreciation for the art of architecture.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Buildings</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Have you seen buildings you find fasicinating ? Or are you building your own house or room ?\r\n           Feel free to share it here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Experimental</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Experimenting is trying out ideas without knowing the outcome. Trying new things out is a good thing.\r\n           Show off your most intersting, strange or even not successful attempts of your experiments here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Flowers</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Explore photography of flowers or other types of plants people found\r\n           in the world or have in their garden.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Nature</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Do you appreciate the gifts of nature? Share your discoveries of plants and other things mother nature\r\n           has to offer here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Landscape</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Do you love the beautiful scenery of landscapes ? Explore this tag to find the most fascinating of locations people\r\n           have discovered.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>-->\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-verification-dialog-wrapper',\r\n  templateUrl: './verification-dialog-wrapper.component.html',\r\n  styleUrls: ['./verification-dialog-wrapper.component.scss']\r\n})\r\nexport class VerificationDialogWrapperComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    console.log(\"DUDDEEE\");\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        if (param.get('type') === 'email') {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            width: '450px',\r\n            maxWidth: '450px',\r\n            minWidth: '280px',\r\n            height: '300px',\r\n            minHeight: '300px',\r\n            maxHeight: '300px',\r\n            data: { text: 'Email was send successfully.' }\r\n          });\r\n        } else {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            width: '450px',\r\n            maxWidth: '450px',\r\n            minWidth: '280px',\r\n            height: '300px',\r\n            minHeight: '300px',\r\n            maxHeight: '300px',\r\n            data: { text: 'Account has been verified!' }\r\n          });\r\n        }\r\n\r\n        /*this.dialog.open(VerificationDialogComponent);*/\r\n      })\r\n\r\n  }\r\n}\r\n\r\n\r\nexport interface VerificationData {\r\n  text: string;\r\n}\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-verification-dialog',\r\n  templateUrl: './verification-dialog.component.html',\r\n  styleUrls: ['./verification-dialog.component.scss']\r\n})\r\nexport class VerificationDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<VerificationDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {text: string}) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","<div class=\"verification-container\">\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"start end\" class=\"close\">\r\n      <button (click)=\"dialogRef.close()\" mat-icon-button>\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"title\">\r\n    <h2 style=\"text-align: center\">\r\n      {{data.text}} </h2>\r\n  </div>\r\n  <a routerLink=\"/welcome\" mat-button (click)=\"dialogRef.close()\" class=\"img\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/check-mark-11-512.png\">\r\n    <span>Click to continue</span>\r\n  </a>\r\n\r\n  <!--<div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"home\">\r\n    <a fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n       style=\"color: #3f51b5;\" routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <mat-icon style=\"font-size: 50px\">home</mat-icon>\r\n    </a>\r\n  </div>-->\r\n</div>\r\n","import {AfterViewInit, ComponentRef, Directive, ElementRef, HostListener, Input, OnInit} from '@angular/core';\nimport {FlexibleConnectedPositionStrategy, Overlay, OverlayPositionBuilder, OverlayRef} from \"@angular/cdk/overlay\";\nimport {ComponentPortal} from \"@angular/cdk/portal\";\nimport {VerifyTooltipComponent} from \"./verify-tooltip/verify-tooltip.component\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {RequestStatusState} from \"../shared/app-state/states/request-status.state\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {Subject} from \"rxjs\";\nimport {ShowEmailWasSentDialog} from \"../shared/util/ShowEmailWasSentDialog\";\nimport {RequestMessageAction} from \"../shared/app-state/actions/request-message.action\";\n\n@Directive({\n  selector: '[appVerifyTooltip]'\n})\nexport class VerifyTooltipDirective implements OnInit, AfterViewInit {\n\n  @Select(RequestStatusState.getStatusCode) $requestStatusCode;\n  @Input('appVerifyTooltip') text = '';\n  overlayRef: OverlayRef;\n\n  @Input() email = '';\n\n  @Input() password = '';\n\n  @Input() close: Subject<boolean> = new Subject<boolean>();\n\n  @Input() open: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private overlayPositionBuilder: OverlayPositionBuilder,\n              private elementRef: ElementRef,\n              private overlay: Overlay,\n              public store: Store) {}\n\n  ngOnInit() {\n    this.store.dispatch(new RequestMessageAction(null))\n    /*this.overlay.scrollStrategies.close().disable();\n    this.overlay.position().global().dispose();*/\n    const positionStrategy = this.overlayPositionBuilder\n      // Create position attached to the elementRef\n      .flexibleConnectedTo(this.elementRef)\n      // Describe how to connect overlay to the elementRef\n      // Means, attach overlay's center bottom point to the\n      // top center point of the elementRef.\n      .withPositions([{\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n      }]);\n\n    this.overlayRef = this.overlay.create({ positionStrategy });\n\n\n  }\n\n  ngAfterViewInit(): void {\n    this.close.subscribe(value => {\n      console.log(value);\n      if (value) {\n        console.log(\"Closed pressed\");\n        this.overlayRef.detach();\n        this.overlayRef = null;\n      }\n    })\n\n    this.$requestStatusCode.subscribe(val => {\n\n\n      if (val === 423) {\n        console.log(this.email);\n        console.log(this.password);\n        const tooltipRef: ComponentRef<VerifyTooltipComponent>\n          = this.overlayRef.attach(new ComponentPortal(VerifyTooltipComponent));\n        this.overlayRef.backdropClick().subscribe(() => console.log(\"clicked\"));\n        console.log(this.overlayRef.backdropElement);\n        tooltipRef.instance.text = this.text;\n        tooltipRef.instance.email = this.email;\n        tooltipRef.instance.password = this.password;\n        tooltipRef.instance.close.subscribe(close => {\n          if (close) {\n            console.log(\"Closed pressed\");\n            this.overlayRef.detach();\n            this.overlayRef = null;\n          }\n        })\n\n      } else {\n        console.log(\"Closed pressed\");\n        /*this.overlayRef.detach();*/\n\n      }\n    })\n  }\n\n\n\n  /*@HostListener('mouseenter')\n  show() {\n\n    const tooltipRef: ComponentRef<VerifyTooltipComponent>\n      = this.overlayRef.attach(new ComponentPortal(VerifyTooltipComponent));\n    tooltipRef.instance.text = this.text;\n  }*/\n\n  /*@HostListener('mouseout')\n  hide() {\n    this.overlayRef.detach();\n  }*/\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ShowEmailWasSentDialog} from \"../../shared/util/ShowEmailWasSentDialog\";\nimport {Store} from \"@ngxs/store\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-verify-tooltip',\n  templateUrl: './verify-tooltip.component.html',\n  styleUrls: ['./verify-tooltip.component.scss']\n})\nexport class VerifyTooltipComponent implements OnInit {\n\n  @Input() text = '';\n\n  @Input() email = '';\n\n  @Input() password = '';\n\n  @Output() close: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private authService: UserAuthenticationService,\n              private dialog: MatDialog,\n              private store: Store,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.close.emit(false)\n  }\n\n  closeToolTip() {\n    this.close.emit(true);\n    this.store\n      .dispatch(new RequestMessageAction({message: '', status: 0}));\n  }\n\n  sendEmail() {\n    console.log(this.email);\n    console.log(this.password);\n    this.authService\n      .renewToken(\n        {email: this.email, password: this.password}\n      ).subscribe(value => {\n      this.snackBar.open(\n        'Email was sent successfully',\n        'Check your inbox',\n        {\n          duration: 3000,\n          horizontalPosition: \"center\",\n          verticalPosition: \"top\"\n        }\n      );\n      /*var showEmailWasSentDialog = new ShowEmailWasSentDialog(this.dialog, value);*/\n      this.closeToolTip();\n    });\n  }\n}\n","<div class=\"arrow_box\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"tooltip-header color\">{{text}}</div>\n\n\n  <div fxLayoutAlign=\"start center\" class=\"tooltip-action\" fxLayout=\"row\">\n    <button (click)=\"sendEmail()\" mat-icon-button>\n      <mat-icon class=\"color\">mail</mat-icon>\n    </button>\n    <span class=\"action-text color\">Did not receive email</span>\n  </div>\n    <button (click)=\"closeToolTip()\" style=\"color: white\" mat-stroked-button>\n      Cancel\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\nimport {Observable} from \"rxjs\";\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {environment} from \"../../../environments/environment\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './image-by-tag.component.html',\n  styleUrls: ['./image-by-tag.component.scss']\n})\nexport class ImageByTagComponent implements OnInit {\n  foo: string = \"IHUTiYJ6Wdk.jpg\";\n  @Select(ImagesByTagState.getData) $imagesByTags: Observable<ImageModel[]>;\n  constructor(private store: Store, private service: ImageRequestService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n\r\n\r\n\r\n<div class=\"image-content\">\r\n  <app-image-content [isProfile]=\"false\" [data]=\"$imagesByTags\"></app-image-content>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {BehaviorSubject, EMPTY, Observable, of, Subject, throwError} from 'rxjs';\nimport {Select, Selector, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../shared/app-state/states/login.state.model\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\nimport {async} from \"rxjs/internal/scheduler/async\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {catchError, map, retry, switchMap} from \"rxjs/operators\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthSecurityGuard implements CanActivate {\n  $test = new Subject<boolean>();\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\n\n  constructor(private store: Store,\n              private router: Router,\n              private authService: UserAuthenticationService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> |\n    Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return this.$isLoggedIn;\n\n    let isLoggedIn: boolean =\n      this.store.selectSnapshot(LoginStateModel.isLoggedIn);\n    if (!isLoggedIn) {\n      console.log(\"could not login\");\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n        .pipe(map(loggedUser => {\n          if (loggedUser) return loggedUser.Authentication.status;\n        })).subscribe(status => {\n          if (!status) this.store.dispatch(new Navigate(['login']))\n        this.$test.next(status);\n      })\n    } else return isLoggedIn;\n    return this.$test;\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .pipe(\n    //     map(value => {\n    //       return !!value.Authentication.status;\n    //     })\n    //   ).subscribe(value => this.$diffRatio.next(value),\n    //   error => {\n    //     console.log(error)\n    //   });\n    // return this.$diffRatio;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {EMPTY, Observable, throwError} from \"rxjs\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {ResponseBody} from \"../shared/domain/responseBody\";\r\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\r\nimport {RequestMessageAction} from \"../shared/app-state/actions/request-message.action\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../public/renew-expired-account-token/renew-expired-account-token.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CookieAuthInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private store: Store, private router: Router,\r\n              private deviceService: DeviceDetectorService,\r\n              private dialog: MatDialog) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log(\"HUHOOHOHOH\");\r\n\r\n    console.log(req.headers.get(\"tokenRefresh\"));\r\n    const isMobile = this.deviceService.isMobile() || this.deviceService.isTablet() ? 1 : 0;\r\n    console.log(isMobile);\r\n    const clonedReq = req.clone({withCredentials: true,\r\n      headers: req.headers.set('isMobile', isMobile + \"\"  )});\r\n    return next.handle(clonedReq).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.error instanceof Error) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          console.log('An error occurred:', error.error.message);\r\n        } else {\r\n          // this.store.dispatch(new Navigate(['/login']))\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          console.log(error);\r\n          console.log(error.message);\r\n          console.log();\r\n          if (error.url === 'http://localhost:8880/image-app/images/insert/') {\r\n            console.log(error.error);\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/users/signUp') {\r\n            console.log(error.error);\r\n            return throwError(error);\r\n          } else if (error.url === UserAuthenticationService.USER_LOGIN ||\r\n            error.url === UserAuthenticationService.GOOGLE_LOGIN) {\r\n            this.store.dispatch(new RequestMessageAction({message: error.error, status: error.status}));\r\n          } else if (error.url.indexOf(UserAuthenticationService.USER_DETAILS) !== -1) {\r\n            this.store.dispatch(new RequestMessageAction({ message: error.error }))\r\n            /*this.router.navigate(['not-found']);*/\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/library/download/cropped/file/') {\r\n            this.store.dispatch(new RequestMessageAction({message: 'Error while downloading.'}));\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/verify/show-validated-token/') {\r\n            console.log(\"OIDA???\");\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true}, hasBackdrop: true\r\n            })\r\n            this.router.navigate(['/welcome'])\r\n          } else if (error.url === 'http://localhost:8880/image-app/auth/renew/accountToken') {\r\n            console.log('ASDASKASKAS');\r\n            console.log(error.error.message);\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n          } else if (error.url === 'http://localhost:8880/image-app/reset/password/from-redirect/') {\r\n            this.store\r\n              .dispatch(new RequestMessageAction({message: error.error.message, status: error.status}));\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n            return throwError(error.error);\r\n          } else if(error.url === 'http://localhost:8880/image-app/reset/password/validate-tokenId/') {\r\n            this.router.navigate(['/welcome']);\r\n            console.log(\"token id error\");\r\n            this.store\r\n              .dispatch(new RequestMessageAction({message: error.error.message, status: error.status}));\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n            return throwError(error.error);\r\n          }\r\n          console.log(error.statusText);\r\n          if (error.error !== null && error.error.message !== null) {\r\n\r\n            console.log(`Backend returned code ${error.status}, body was: ${error.error.message}`);\r\n          }\r\n        }\r\n\r\n        // If you want to return a new response:\r\n        //return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\r\n\r\n        // If you want to return the error on the upper level:\r\n        //return throwError(error);\r\n\r\n        // or just return nothing:\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {GetBase64ForDownloadCropperState, CropAndDownloadStateModel} from \"../shared/app-state/states/get-base64-for-downloadCropper.state\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {ImageRequestService} from \"./image-request.service\";\nimport {CropAndDownload, GetImageByImageId} from \"../shared/app-state/actions/image.action\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CropAndDownloadResolverService implements Resolve<CropAndDownloadStateModel> {\n\n  constructor(private store: Store,\n              private service: ImageRequestService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CropAndDownloadStateModel> | Promise<CropAndDownloadStateModel> | CropAndDownloadStateModel {\n    this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n    return this.service\n      .getImageBytes(route.params.imageId)\n      .pipe(map(byteArray => {\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\n        let reader = new FileReader();\n        reader.onload = (evt: any) => {\n           this.store\n            .dispatch(new CropAndDownload(evt.target.result))\n        };\n        // this.dialog.open(DownloadCropperComponent,{\n        //   data: { img: evt.target.result,\n        //     width: imageDetail.width,\n        //     height: imageDetail.height, viewName: 'Download' }\n        // })\n        reader.readAsDataURL(blob);\n        return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel)\n      }))\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteImageService {\r\n  private static readonly DELETE_IMAGE_URL = environment.apiUrl + \"image/delete\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public deleteImage(image: ImageModel): Observable<any> {\r\n    return this.http.post(\r\n      DeleteImageService.DELETE_IMAGE_URL,\r\n      image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {MediaChange, MediaObserver} from \"@angular/flex-layout\";\nimport {flatMap, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\n\n\nexport enum Device {\n  MOBILE = 'xs',\n  DESKTOP = 'lg',\n  DESKTOP_XL = 'xl',\n  TABLET = 'sm',\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceObserverService {\n  constructor(private media: MediaObserver) { }\n\n  public getActiveDevice(): Observable<string> {\n    return this.media.asObservable()\n      .pipe(map(media => {\n        return media[0].mqAlias;\n    }));\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../shared/app-state/states/get-image-by-id.state\";\nimport {GetImageByImageId, GetRelatedImagesByTagIDs} from \"../shared/app-state/actions/image.action\";\nimport {switchMap, tap} from \"rxjs/operators\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageDetailsResolverService implements Resolve<ImageModel> {\n\n  constructor(private store: Store) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ImageModel> | ImageModel {\n    return this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n      .pipe(switchMap(state =>\n          this.store.dispatch(new GetRelatedImagesByTagIDs(state.modelDetails.tags)))\n      )\n      .pipe(tap(val => {\n        this.store.dispatch(new AuthenticationActions.IsLoggedIn());\n        console.log(\"ImageDetailResolver was called with value : \" + val);\n      }));\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {DownloadImageByIndividualResolution, ImageModel} from \"../shared/domain/imageModel/image.model\";\r\nimport {finalize, map, tap} from \"rxjs/operators\";\r\nimport {ImageFileDetails, ImageDownloadResponse} from \"../shared/domain/imageModel/image-file-details\";\r\nimport {CroppedDownloadRequest} from \"../shared/domain/http/req/CroppedDownloadRequest\";\r\nimport {conditionallyCreateMapObjectLiteral} from \"@angular/compiler/src/render3/view/util\";\r\nimport {BlobToBase64Pipe} from \"../shared/util/blob-to-base64-pipe\";\r\nimport {GetImageByIdState} from \"../shared/app-state/states/get-image-by-id.state\";\r\nimport {Store} from \"@ngxs/store\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageDownloadService {\r\n  constructor(private http: HttpClient,\r\n              private base64Pipe: BlobToBase64Pipe, private store: Store) {\r\n  }\r\n\r\n  public static readonly DOWNLOAD_BY_API_RESOLUTION_URL = environment.apiUrl + \"library/download/file/\";\r\n  public static readonly DOWNLOAD_BY_CROPPED_RESOLUTION_URL = environment.apiUrl + \"library/download/cropped/file/\";\r\n  public static readonly DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL = environment.apiUrl + \"library/download/resized/file\";\r\n\r\n\r\n  public downloadImage(imageId: string, imageFileDetail: ImageFileDetails): Observable<ImageFileDetails> {\r\n    return this.http\r\n      .post<ImageFileDetails>(\r\n        ImageDownloadService.DOWNLOAD_BY_API_RESOLUTION_URL + imageId,\r\n        imageFileDetail);\r\n  }\r\n\r\n\r\n  public downloadIndividualImage(croppedDetails: CroppedDownloadRequest |\r\n    DownloadImageByIndividualResolution, wasCropped: boolean): Observable<string> {\r\n    const url = wasCropped ? ImageDownloadService.DOWNLOAD_BY_CROPPED_RESOLUTION_URL :\r\n      ImageDownloadService.DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL;\r\n    return this.base64Pipe.getBase64(this.http\r\n       .post(\r\n         url,\r\n         croppedDetails, { responseType: 'arraybuffer' })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {BehaviorSubject, EMPTY, Observable, Subject} from \"rxjs\";\nimport {GetImagesByTagNameRequest, ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\nimport {ResponseBody} from \"../shared/domain/responseBody\";\nimport {environment} from \"../../environments/environment\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ResolutionsResponse} from \"../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRequestService {\n  // 178.112.217.30\n  public $bSubject = new BehaviorSubject<ImageModel[]>(null);\n  // private readonly SEARCH_URL: string = \"http://localhost:8880/image-app/images/search/by/tag/\";\n  private readonly SEARCH_URL: string = environment.apiUrl + \"library/search-by/tag/\";\n\n  public static readonly ALL_IMAGES_BY_USERID = environment.apiUrl + \"library/search-by/user/\";\n  public static readonly ALL_IMAGES_BY_IMG_ID = environment.apiUrl + \"library/search-by/image/\";\n  public static readonly RELATED_IMAGES_BY_TAG_IDS = environment.apiUrl + \"library/search-by/tags/\";\n  public static readonly GET_IMAGE_BYTES_BY_ID_URL = environment.apiUrl + \"library/search-by/image/raw/\";\n  public static readonly GET_API_RESOLTIONS = environment.apiUrl + \"api/resolutions/\";\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\n  private readonly UPLOAD_TAG = environment.apiUrl + \"image/update/tags/\";\n\n  constructor(private http: HttpClient,\n              private sanitizer: DomSanitizer) {\n  }\n\n\n  public getRelatedImagesByTagList(tags: TagModel[]): Observable<ImageModel[]> {\n    console.log(tags)\n    return this.http\n      .post<ImageModel[]>(\n        ImageRequestService.RELATED_IMAGES_BY_TAG_IDS,\n        {tags: tags},\n        {responseType: \"json\"});\n  }\n\n\n  public setTagToImage(data: SetImageWithTags): Observable<any> {\n    console.log(data)\n    return this.http.post(\n      this.UPLOAD_TAG,\n      data,\n      {observe: 'response'});\n  }\n\n\n  public getResolutions(): Observable<ResolutionsResponse> {\n    return this.http\n      .get<ResolutionsResponse>(\n        ImageRequestService.GET_API_RESOLTIONS,\n        {responseType: \"json\"} );\n  }\n\n  public getImageBytes(imgId: string) {\n    return this.http\n      .get(\n        ImageRequestService.GET_IMAGE_BYTES_BY_ID_URL + imgId,\n        {responseType: \"arraybuffer\"}\n        );\n  }\n\n\n\n\n  public getImagesByImgId(imgId: string): Observable<ImageModel> {\n    return this.http.get<ImageModel>(\n      ImageRequestService.ALL_IMAGES_BY_IMG_ID + imgId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n\n  public getImagesByUserId(userId: string): Observable<ImageModel[]> {\n    return this.http.get<ImageModel[]>(\n      ImageRequestService.ALL_IMAGES_BY_USERID + userId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n  public getImagesByTag(req: GetImagesByTagNameRequest, page: number): Observable<ImageModel[]> {\n    return this.http.post<ImageModel[]>(\n      this.SEARCH_URL,\n      req, { observe: \"response\" })\n      .pipe(\n        map(resp => {\n          console.log(resp.status)\n          return resp.body;\n        }),\n        catchError((err) => {\n          console.log(err.error.message);\n          return EMPTY;\n        }));\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {UploadImageModel} from \"../shared/domain/imageModel/upload-image.model\";\r\nimport {SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageUploadService {\r\n  private readonly UPLOAD_IMAGE = environment.apiUrl + \"images/insert/\";\r\n  private readonly VALIDATE_IMAGE = environment.apiUrl + \"library/validate-image/\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public addToUserLibrary(uploadModel: UploadImageModel): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", uploadModel.orgFile);\r\n    request.append(\"userId\", uploadModel.userId);\r\n    request.append(\"urlReference\", uploadModel.urlReference);\r\n    request.append(\"isPublic\", uploadModel.isPublic);\r\n    request.append('galleryFile', uploadModel.galleryFile);\r\n    request.append(\"downloadFile\", uploadModel.downloadFile);\r\n    console.log(uploadModel.urlReference);\r\n    return this.http.post(\r\n      this.UPLOAD_IMAGE, request,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public validateImage(data: File): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", data);\r\n    return this.http.post(\r\n      this.VALIDATE_IMAGE,\r\n      request,\r\n      {responseType: 'json'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {MediaChange, MediaObserver} from '@angular/flex-layout';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaProcessorService {\n  public $mediaGetter: Observable<MediaChange[]>;\n  constructor(private media: MediaObserver) {\n    this.$mediaGetter = media.asObservable();\n    console.log(this.media);\n  }\n}\n","import {State} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../shared/domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {SearchRequestService} from \"./search.request.service\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchByUsersService {\r\n  private readonly SEARCH_URL = environment.apiUrl + \"query/searchUsers/\";\r\n  private readonly SEARCH_BY_U_NAME_URL = environment.apiUrl + \"query/searchByUserName/\";\r\n  constructor(private http: HttpClient,\r\n              private searchReqService: SearchRequestService<BaseUserDetails>) { }\r\n\r\n  public searchByEmail(searchTerm$: Observable<string>): Observable<BaseUserDetails[]> {\r\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL);\r\n  }\r\n\r\n  public searchByUserName(searchTerm$: Observable<string>): Observable<BaseUserDetails[]> {\r\n    return this.searchReqService.search(searchTerm$, this.SEARCH_BY_U_NAME_URL);\r\n  }\r\n}\r\n","import {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {distinctUntilChanged, switchMap, throttleTime} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchRequestService<T> {\r\n  private readonly SEARCH_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public search(searchTerm$: Observable<string>, url: string): Observable<T[]> {\r\n    return searchTerm$.pipe(\r\n      distinctUntilChanged(),\r\n      throttleTime(2000),\r\n      switchMap(searchTerm => this.getSearchResult(searchTerm, url))\r\n    );\r\n  }\r\n\r\n  private getSearchResult(term: string, url: string): Observable<T[]> {\r\n    return SearchRequestService.validateTerm(term) ?\r\n      this.sendSearchRequest(term, url) :\r\n      new BehaviorSubject([]);\r\n  }\r\n\r\n  private sendSearchRequest(terms: string, url: string): Observable<T[]> {\r\n    return this.http.get<T[]>(url + terms);\r\n  }\r\n\r\n  private static validateTerm(term: string): boolean {\r\n    return term.length > 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\"\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {DistinctSubscriber} from \"rxjs/internal/operators/distinct\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {SearchRequestService} from \"./search.request.service\";\nimport {environment} from \"../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagRequestService {\n  private readonly secr = \"user/HJeDHE2XBFwgJ81pzuLNj3MshJqXbU/images/all\";\n  constructor(private http: HttpClient,\n              private searchReqService: SearchRequestService<TagModel>) { }\n  //178.112.217.30\n  private readonly SEARCH_URL: string = environment.apiUrl + \"query/searchByTag/\";\n  private readonly GET_TAGS: string = environment.apiUrl + 'tags/';\n  private static readonly REQUEST_DELAY: number = 2000;\n\n  public searchByTagName(searchTerm$: Observable<string>): Observable<TagModel[]> {\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL)\n  }\n\n  public getAllTags(): Observable<TagModel[]> {\n    return this.http.get<TagModel[]>(this.GET_TAGS);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateImageDetailsService {\n  private readonly UPDATE_IMAGE_DETAILS_URL = environment.apiUrl + \"image/update/details\";\n  constructor(private http: HttpClient) { }\n\n  public changeImageDetails(imageToUpdate: ImageModel): Observable<any> {\n    console.log(imageToUpdate);\n    return this.http.post(\n      this.UPDATE_IMAGE_DETAILS_URL,\n      imageToUpdate,\n      {observe: 'response'});\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdateUserService {\r\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\r\n  private readonly ADD_USER_LIKE = environment.apiUrl + \"user/set/likes/\";\r\n  private readonly CHANGE_USER_EMAIL = environment.apiUrl + \"user/set/email/\";\r\n  private readonly CHANGE_USER_PASSWORD = environment.apiUrl + \"user/set/password/\";\r\n  private readonly CHANGE_USER_PASSWORD_FROM_TOKEN = environment.apiUrl + \"reset/password/from-redirect/\";\r\n  private readonly DELETE_USER_ACCOUNT = environment.apiUrl + \"user/set/deleteAccount/\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  public changeUserPasswordByToken(userId: string, password: string, tokenId: string ): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_PASSWORD_FROM_TOKEN,\r\n      {\r\n        userId: userId,\r\n        password: password,\r\n        tokenId: tokenId\r\n      },\r\n      {observe: 'response'});\r\n  }\r\n\r\n\r\n  public changeUserPassword(userId: string, changePassword: { oldPassword: string, newPassword: string } ): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_PASSWORD,\r\n      {\r\n        userId,\r\n        oldPassword: changePassword.oldPassword,\r\n        newPassword: changePassword.newPassword\r\n      },\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public deleteUserAccount( changePasswordRequest: { userId: string, password: string }  ): Observable<any> {\r\n    return this.http.post(\r\n      this.DELETE_USER_ACCOUNT,\r\n      changePasswordRequest,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public setUserProfile(userId: string, image: FormData): Observable<any> {\r\n    return this.http.post(\r\n      this.UPLOAD_PROFILE_IMAGE + userId, image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public addUserLike(imageId: string, userId: string): Observable<any> {\r\n    return this.http.post(\r\n      this.ADD_USER_LIKE + imageId + \"/\" + userId,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public changeUserEmail(user: BaseUserDetails): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_EMAIL,\r\n      {\r\n        userId: user.userId,\r\n        email: user.email,\r\n        password: user.password,\r\n        username: user.username,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        profileImgPath: user.profileImgPath\r\n      },\r\n      {observe: 'response', responseType: \"json\"});\r\n  }\r\n}\r\n","import {Injectable, OnInit} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BaseUserDetails, UserDetailsImpl, UserRegistrationModel} from \"../shared/domain/userModel/user-details.model\";\r\nimport {BehaviorSubject, Observable, throwError} from \"rxjs\";\r\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\r\nimport {IUserLoginModel, LoggedInUserModel, UserLoginModel} from \"../shared/domain/userModel/UserLoginModel\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SignupState} from \"../shared/app-state/states/signup.state\";\r\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {ValidateTokenRequestUrl} from \"../shared/domain/Validate-Token-Request-Url\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAuthenticationService {\r\n  private readonly USER_SIGNUP = \"http://localhost:8880/image-app/users/signUp\";\r\n  public static readonly USER_LOGIN = environment.apiUrl + \"users/login\";\r\n  private readonly USER_LOGOUT = environment.apiUrl + \"logout\";\r\n  private readonly AUTH_STATUS = environment.apiUrl + \"auth/identify/user\";\r\n  public static readonly USER_DETAILS = environment.apiUrl + \"user/details/\";\r\n  public static readonly GOOGLE_LOGIN = environment.apiUrl + \"users/oauth/login\";\r\n  public static readonly RENEW_TOKEN = environment.apiUrl + \"auth/renew/accountToken\";\r\n  public static readonly VERIFY_TOKEN_REQUEST = environment.apiUrl + 'verify/show-validated-token/';\r\n  public static readonly RESET_PASSWORD = environment.apiUrl + 'reset/password/request-token';\r\n  public static readonly RESET_PASSWORD_VALIDATE_TOKEN_ID = environment.apiUrl + 'reset/password/validate-tokenId/';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n\r\n\r\n  public validatePasswordTokenId(req: { tokenId: string }): Observable<{tokenId: string; userId: string}> {\r\n    return this.http.post<{tokenId: string; userId: string}>\r\n    (UserAuthenticationService.RESET_PASSWORD_VALIDATE_TOKEN_ID,\r\n      {tokenId: req.tokenId},\r\n      {observe: 'body'});\r\n  }\r\n\r\n  public requestResetPasswordToken(req: { email: string }): Observable<any> {\r\n    return this.http.post<any>\r\n    (UserAuthenticationService.RESET_PASSWORD,\r\n      req,\r\n      {observe: 'body'});\r\n  }\r\n\r\n  public validateRequestTokenUrl(req: ValidateTokenRequestUrl): Observable<{ status: boolean; alreadyProcessed: boolean}> {\r\n    return this.http.post<{ status: boolean; alreadyProcessed: boolean}>\r\n    (UserAuthenticationService.VERIFY_TOKEN_REQUEST,\r\n      req,\r\n      {responseType: \"json\"});\r\n  }\r\n\r\n\r\n  public renewToken(userLoginModel: IUserLoginModel): Observable<any> {\r\n    console.log('who pressed me ?');\r\n    console.log(userLoginModel);\r\n    return this.http.post<{email: string, password: string}>(UserAuthenticationService.RENEW_TOKEN,\r\n      userLoginModel,\r\n      {observe: 'response', responseType: 'json'});\r\n  }\r\n\r\n  public getUserDetails(userId: string): Observable<BaseUserDetails> {\r\n    return this.http.get<BaseUserDetails>\r\n    (UserAuthenticationService.USER_DETAILS + userId, {responseType: \"json\"});\r\n  }\r\n\r\n\r\n  public createNewUser(userSignupModel: UserRegistrationModel): Observable<LoggedInUserModel> {\r\n    return this.http\r\n      .post<LoggedInUserModel>(this.USER_SIGNUP, userSignupModel, {observe: \"body\" , responseType: \"json\"});\r\n  }\r\n\r\n  public login(userLoginModel: IUserLoginModel, loginMethod: string): Observable<any> {\r\n    console.log('who pressed me ?');\r\n    const URL = loginMethod === \"GOOGLE\" ? UserAuthenticationService.GOOGLE_LOGIN : UserAuthenticationService.USER_LOGIN;\r\n    console.log(userLoginModel);\r\n    return this.http.post<any>(URL, userLoginModel, {observe: 'response'});\r\n  }\r\n\r\n  public isLoggedIn(): Observable<any> {\r\n    return this.http.get(this.AUTH_STATUS, {responseType: \"json\", observe: 'response'})\r\n      .pipe(\r\n        map(value => {\r\n          console.log(value)\r\n          return value;\r\n        })\r\n      );\r\n  }\r\n\r\n  public logout(): Observable<any> {\r\n    return this.http.post(this.USER_LOGOUT, {responseType: \"json\"});\r\n  }\r\n\r\n}\r\n","import {Observable} from \"rxjs\";\r\n\r\nexport class GetZipCodesAndCitiesByRegion {\r\n  static readonly type = '[AddressValidation] Get Zipcodes and Cities'\r\n  constructor(public zipcode: Observable<string>,\r\n              public region: string) { }\r\n}\r\n\r\nexport class GetCountriesAction {\r\n  static readonly type = '[AddressValidation] Get Countries'\r\n  constructor() { }\r\n}\r\n\r\nexport class GetRegionsAction {\r\n  static readonly type = '[AddressValidation] Get Regions'\r\n  constructor(public countryName: string) { }\r\n}\r\n\r\n\r\n","import {IUserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\n\r\nexport namespace AuthenticationActions {\r\n  export class LoginAction {\r\n    static readonly type = '[Authentication] Login';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class LogoutAction {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class SignUpAction {\r\n    static readonly type = '[Authentication] Signup';\r\n    constructor(public userRegistration: UserRegistrationModel) { }\r\n  }\r\n\r\n  export class IsLoggedIn {\r\n    static readonly type = '[Authentication] Is logged in';\r\n    constructor() { }\r\n  }\r\n\r\n  export class Logout {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor() { }\r\n  }\r\n\r\n  export class LoggedUserDetails {\r\n    static readonly type = '[Authentication] Logged userDetails';\r\n    constructor(public userId: string) { }\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {ImagesByTagName, ImagesByTagNameQueryImpl} from \"../../domain/imageModel/ImagesByTagNameQuery\";\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\nimport {ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\n\nexport class ImagesByUserIDAction {\n  static readonly type = '[ImageAPI] Images by userId';\n  constructor(public userId: string) { }\n}\n\nexport class ImagesByTagsAction {\n  static readonly type = '[ImageAPI] ImagesByTagsAction';\n  constructor(public imagesByTag: ImagesByTagName) { }\n}\n\nexport class ImagesNextPageAction {\n  static readonly type = '[ImageAPI] NextImagePage';\n  constructor(public imageResponseModel: ImageModel[]) { }\n}\n\nexport class UploadImage {\n  static readonly type = '[ImageAPI] Upload image';\n  constructor(public uploadModel: UploadImageModel) { }\n}\n\nexport class FilterByDate {\n  static readonly type = '[ImageAPI] Filter image'\n  constructor(public limit: number) { }\n}\n\nexport class DeleteImage {\n  static readonly type = '[ImageAPI] Delete image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class SelectImage {\n  static readonly type = '[ImageAPI] Select image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class GetDownloadDetails {\n  static readonly type = '[ImageAPI] Get download details';\n  constructor(public imageId: string, public imageFileDetail: ImageFileDetails) { }\n}\n\nexport class GetImageByImageId {\n  static readonly type = '[ImageAPI] Get image by imageId';\n  constructor(public imageId: string) { }\n}\n\nexport class GetRelatedImagesByTagIDs {\n  static readonly type = '[ImageAPI] Related images';\n  constructor(public tagIds: TagModel[]) { }\n}\n\n\nexport class GetImageAsByse64 {\n  static readonly type = '[ImageAPI] Get image bytes';\n  constructor(public imageId: string) { }\n}\n\nexport class CropAndDownload {\n  static readonly type = '[ImageAPI] Crop and download';\n  constructor(public base64: string) { }\n}\n\nexport class CropDownloadViewImage {\n  static readonly type = '[ImageAPI] Crop download view image';\n  constructor(public data: string) { }\n}\n\nexport class CropGalleryViewImage {\n  static readonly type = '[ImageAPI] Crop gallery view image';\n  constructor(public data: string) { }\n}\n\nexport class AsignBase64ToOriginalImage {\n  static readonly type = '[ImageAPI] Crop gallery temp view image';\n  constructor(public data: string) { }\n}\n\nexport class SetCroppedOffsetValues {\n  static readonly type = '[ImageAPI] Set cropped image values';\n  constructor(public imgId: string,\n              public offsetX: number, public offsetY: number,\n              public subImageWidth: number,public subImageHeight: number) { }\n}\n\nexport class AssignCropperPosToImageUpload {\n  static readonly type = '[ImageAPI] Set cropped image values';\n  constructor(public imgId: string,\n              public offsetX: number, public offsetY: number,\n              public subImageWidth: number,public subImageHeight: number) { }\n}\n\n\n","import {RequestStatus} from \"../../domain/request-status\";\r\n\r\nexport class PassDataToDialogAction {\r\n  static readonly type = '[Dialog] Pass data to dialog';\r\n  constructor(public data: DialogCropperData) {}\r\n}\r\n\r\nexport interface DialogCropperData {\r\n  imgData: any;\r\n  resizeWidth: number;\r\n  resizeHeight: number;\r\n  viewName: string;\r\n  imgDimensions: { originalWidth: number, originalHeight: number };\r\n}\r\n","import {Observable} from \"rxjs\";\n\nexport class QueryTagAction {\n  static readonly type = '[Tag] Query tags';\n  constructor(public searchTerm: Observable<string>) {}\n}\n","import {Observable} from \"rxjs\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\n\r\nexport class RequestMessageAction {\r\n  static readonly type = '[Request] Check request status';\r\n  constructor(public requestStatus: RequestStatus) {}\r\n}\r\n\r\n","export namespace UpdateUserProfileActions {\r\n  export class UploadUserProfileImg {\r\n    static readonly type = '[Update profile] Set user profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n}\r\n","import {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\nexport namespace UserDetailsActions {\r\n  export class UploadUserProfile {\r\n    static readonly type = '[User Action] Upload user-profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n\r\n  export class GetUserDetails {\r\n    static readonly type = '[User Action] Get user details';\r\n    constructor(public userId: string) { }\r\n  }\r\n\r\n  export class ValidResetPasswordTokenResponse {\r\n    static readonly type = '[User Action] Reset Password';\r\n    constructor(public tokenId: string) {}\r\n  }\r\n\r\n\r\n  export class SearchUsers {\r\n    static readonly type = '[User Action] Get user profiles';\r\n    constructor(public searchTerm: Observable<string>) {}\r\n  }\r\n}\r\n\r\nexport interface ValidResetPasswordToken {\r\n  tokenId: string;\r\n  userId: string;\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'UserDetails',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class UserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static profileImgPath(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static firstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static getState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserImages(state: BaseUserDetails): ImageModel[] {\r\n    return state.images;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserLikes(state: BaseUserDetails): ImageModel[] {\r\n    return state.likes;\r\n  }\r\n\r\n  @Action(UserDetailsActions.GetUserDetails)\r\n  userDetails(ctx: StateContext<BaseUserDetails>,\r\n              action: UserDetailsActions.GetUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log(response)\r\n          const state = ctx.getState();\r\n          console.log(response)\r\n          console.log(response.images);\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username,\r\n            likes: response.likes,\r\n            images: response.images\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserDetailsActions, ValidResetPasswordToken} from \"../actions/user-details.action\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport ValidResetPasswordTokenResponse = UserDetailsActions.ValidResetPasswordTokenResponse;\r\nimport {Observable, of} from \"rxjs\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\n\r\n@State<ValidResetPasswordToken>({\r\n  name: 'ResetPassword',\r\n  defaults: {\r\n    tokenId: '',\r\n    userId: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class ValidPasswordTokenState {\r\n  constructor(private authService: UserAuthenticationService) { }\r\n\r\n  @Selector()\r\n  static getTokenId(state: ValidResetPasswordToken): string {\r\n    return state.tokenId;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserId(state: ValidResetPasswordToken): string {\r\n    return state.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static getRequest(state: ValidResetPasswordToken): ValidResetPasswordToken {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(ValidResetPasswordTokenResponse)\r\n  setTokenState(ctx: StateContext<ValidResetPasswordToken>, action: ValidResetPasswordTokenResponse): Observable<ValidResetPasswordToken> {\r\n    return this.authService\r\n      .validatePasswordTokenId({tokenId: action.tokenId})\r\n      .pipe(switchMap(response => {\r\n        ctx.patchState({userId: response.userId, tokenId: response.tokenId});\r\n        return of(ctx.getState());\r\n      }));\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {Country, Region, ZipCodeAndCity} from \"../../domain/address-model/addres.view.model\";\r\nimport {AddCommand} from \"@angular/cli/commands/add-impl\";\r\nimport {AddressValidationService} from \"../../service/address-validation.service\";\r\nimport {ImagesByTagsAction} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {GetZipCodesAndCitiesByRegion, GetCountriesAction, GetRegionsAction} from \"../actions/address-validation-action\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<AddressViewListState>({\r\n  name: 'AddressValidation'\r\n})\r\n@Injectable()\r\nexport class AddressValidationState {\r\n  constructor(private addressService: AddressValidationService) { }\r\n\r\n  @Selector()\r\n  static zipCodesAndCities(state: AddressViewListState): ZipCodeAndCity[] {\r\n    return state.zipCodesAndCity;\r\n  }\r\n\r\n  @Selector()\r\n  static regions(state: AddressViewListState): Region[] {\r\n    return state.regions;\r\n  }\r\n\r\n  @Selector()\r\n  static countries(state: AddressViewListState): Country[] {\r\n    return state.name;\r\n  }\r\n\r\n  @Action(GetCountriesAction)\r\n  getCountries(ctx: StateContext<AddressViewListState>,\r\n               action: GetCountriesAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getCountries()\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              name: res\r\n            }\r\n          )\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  @Action(GetRegionsAction)\r\n  getRegionsByCountry(ctx: StateContext<AddressViewListState>,\r\n                      action: GetRegionsAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getRegionsByCountry(action.countryName)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(\"Du Hund du\")\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              regions: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(GetZipCodesAndCitiesByRegion)\r\n  getZipCodesAndCitiesByRegion(ctx: StateContext<AddressViewListState>,\r\n                      action: GetZipCodesAndCitiesByRegion) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getZipCodesAndCitiesByRegion2(action.zipcode, action.region)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              zipCodesAndCity: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {CropDownloadViewImage, CropGalleryViewImage, AsignBase64ToOriginalImage} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\n\r\n@State<CropImageModel>({\r\n  name: 'cropImage',\r\n  defaults: {\r\n    data: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class CropImageState {\r\n  constructor() {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getCroppedDownloadImage(state: CropImageModel): string {\r\n    return state.downloadViewFile;\r\n  }\r\n\r\n  @Selector()\r\n  static getTemp(state: CropImageModel): string {\r\n    return state.tempFile;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getData(state: CropImageModel): string {\r\n    return state.data;\r\n  }\r\n\r\n  @Selector()\r\n  static getGalleryFile(state: CropImageModel): string {\r\n    return state.galleryFile;\r\n  }\r\n\r\n  @Action(AsignBase64ToOriginalImage)\r\n  cropTempImage(ctx: StateContext<CropImageModel>, action: CropGalleryViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      data: action.data\r\n    })\r\n  }\r\n\r\n\r\n  @Action(CropGalleryViewImage)\r\n  cropImage(ctx: StateContext<CropImageModel>, action: CropGalleryViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      galleryFile: action.data\r\n    })\r\n  }\r\n\r\n  @Action(CropDownloadViewImage)\r\n  cropDownloadViewImage(ctx: StateContext<CropImageModel>, action: CropDownloadViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      downloadViewFile: action.data\r\n    })\r\n  }\r\n}\r\n","import {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {DeleteImageService} from \"../../../serviceV2/delete-image.service\";\r\nimport {DeleteImage} from \"../actions/image.action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'Delete'\r\n})\r\n@Injectable()\r\nexport class DeleteImageState {\r\n    constructor(private deleteService: DeleteImageService) { }\r\n\r\n    @Action(DeleteImage)\r\n    public deleteUserImage(ctx: StateContext<ImageModel>, action: DeleteImage): Observable<any> {\r\n      return this.deleteService\r\n        .deleteImage(action.image)\r\n        .pipe(map(response => {\r\n          return response;\r\n        }))\r\n    }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {\r\n  ImageFileDetails,\r\n  ImageDownloadResponse,\r\n  ImageDetailsViewModel\r\n} from \"../../domain/imageModel/image-file-details\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {CropGalleryViewImage, GetDownloadDetails} from \"../actions/image.action\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@State<ImageDetailsViewModel>({\r\n  name: 'downloadDetails',\r\n})\r\n@Injectable()\r\nexport class DownloadDetailsState {\r\n  constructor(private downloadService: ImageDownloadService) { }\r\n\r\n  @Selector()\r\n  static getFile(state: ImageDetailsViewModel): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getDetails(state: ImageDetailsViewModel): ImageFileDetails {\r\n    return state.fileDetails;\r\n  }\r\n\r\n  @Action(GetDownloadDetails)\r\n  public getDownloadDetails(ctx: StateContext<ImageFileDetails>, action: GetDownloadDetails): Observable<ImageFileDetails> {\r\n    const state = ctx.getState();\r\n    return this.downloadService\r\n      .downloadImage(action.imageId, action.imageFileDetail)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        ctx.setState({\r\n          ...state,\r\n          downloadLink: res.downloadLink,\r\n          width: res.width,\r\n          height: res.height,\r\n          size: res.size,\r\n          contentType: res.contentType\r\n        })\r\n        return res;\r\n      }))\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {CropAndDownload, CropGalleryViewImage, GetImageAsByse64} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\nexport interface CropAndDownloadStateModel {\r\n  base64: string;\r\n}\r\n\r\n@State<CropAndDownloadStateModel>({\r\n  name: 'CropAndDownload',\r\n  defaults: {\r\n    base64: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class GetBase64ForDownloadCropperState {\r\n\r\n  constructor(private service: ImageRequestService) {\r\n\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getBase64(state: CropAndDownloadStateModel): string {\r\n    return state.base64;\r\n  }\r\n\r\n  @Selector()\r\n  public static getModel(state: CropAndDownloadStateModel): CropAndDownloadStateModel {\r\n    return state;\r\n  }\r\n\r\n  @Action(GetImageAsByse64)\r\n  getDataAsBytes(ctx: StateContext<CropAndDownloadStateModel>, action: GetImageAsByse64): Observable<CropAndDownloadStateModel> {\r\n    return this.service\r\n      .getImageBytes(action.imageId)\r\n      .pipe(map(byteArray => {\r\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n        let reader = new FileReader();\r\n        let state = ctx.getState();\r\n        reader.onload = (evt: any) => {\r\n          ctx.patchState({\r\n            ...state,\r\n            base64: evt.target.result\r\n          })\r\n        };\r\n        reader.readAsDataURL(blob);\r\n        return GetBase64ForDownloadCropperState.getModel(state);\r\n      }))\r\n  }\r\n\r\n  @Action(CropAndDownload)\r\n  getData(ctx: StateContext<CropAndDownloadStateModel>, action: CropAndDownload): Observable<CropAndDownloadStateModel> {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      base64: action.base64\r\n    })\r\n    return of(ctx.getState());\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDetailsViewModel, ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {GetImageByImageId} from \"../actions/image.action\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'modelDetails',\r\n})\r\n@Injectable()\r\nexport class GetImageByIdState {\r\n  constructor(private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getImageDetail(state: ImageModel): ImageModel {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getFileDetails(state: ImageModel): ImageFileDetails {\r\n    return state.imageDetails[0];\r\n  }\r\n\r\n  @Selector()\r\n  public static getRatioAsString(state: ImageModel): number {\r\n    return state.imageDetails[0].width /state.imageDetails[0].height;\r\n  }\r\n\r\n  @Action(GetImageByImageId)\r\n  getImageById(ctx: StateContext<ImageModel>, action: GetImageByImageId): Observable<ImageModel> {\r\n    return this.imgReqService\r\n      .getImagesByImgId(action.imageId)\r\n      .pipe(map(req => {\r\n          let state = ctx.getState();\r\n        const newState = {\r\n          imageId: req.imageId,\r\n          link: req.link,\r\n          name: req.name,\r\n          profileImg: req.profileImg,\r\n          linkReference: req.linkReference,\r\n          isPublic: req.isPublic,\r\n          tags: req.tags,\r\n          user: req.user,\r\n          downloaded: req.downloaded,\r\n          liked: req.liked,\r\n          imageDetails: req.imageDetails,\r\n          mobileImgPath: req.mobileImgPath\r\n        };\r\n        ctx.setState(newState)\r\n        return newState;\r\n        })\r\n      )\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {Injectable} from \"@angular/core\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {ImagesByTagsAction, ImagesNextPageAction} from \"../actions/image.action\";\nimport {map, switchMap, tap} from \"rxjs/operators\";\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\n\n\n@State<ImagesByTagNameStateModel>({\n  name: 'image',\n  defaults: {\n    page: 0,\n    searchTerm: \"\",\n    imagResponseList: null\n  }\n\n})\n@Injectable()\nexport class ImagesByTagState {\n  constructor(private imageRequestService: ImageRequestService) {\n  }\n\n\n  @Selector()\n  static getData(state: ImagesByTagNameStateModel): ImageModel[] {\n    return state.imagResponseList;\n  }\n\n\n\n  @Action(ImagesByTagsAction)\n  searchByTags(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesByTagsAction): Observable<ImageModel[]> {\n    const state = ctx.getState();\n    const term = action.imagesByTag.searchTerm;\n    console.log(action.imagesByTag.filterOpt);\n\n    let dayFilterVal;\n\n    if (action.imagesByTag\n      .filterOpt && action.imagesByTag\n      .filterOpt.timeFilterOptions) {\n      dayFilterVal = action.imagesByTag\n        .filterOpt\n        .timeFilterOptions\n        .filter(value => value.checked)\n        .map(filterByDays => filterByDays.value);\n    }\n\n\n    console.log(dayFilterVal);\n    let page = state.page;\n    page = term !== state.searchTerm ? 0 : page;\n    return this.imageRequestService\n      .getImagesByTag(\n        {\n          tagName: term,\n          filterByDays: dayFilterVal !== undefined ? dayFilterVal[0] : null,\n          mostDownloaded: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostDownloads.checked : null,\n          mostLiked: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostLiked.checked : null\n        },\n        page)\n      .pipe(\n        map(res => {\n          ctx.patchState(\n            {\n              ...state,\n              page: page,\n              searchTerm: term,\n              imagResponseList: res\n            }\n          )\n          return state.imagResponseList;\n        })\n      )\n  }\n\n  // @Selector()\n  // static getImageData(state: ImagesByTagNameQuery): ImageModelList {\n  //   return state.imagResponseList;\n  // }\n\n  /*@Action(ImagesNextPageAction)\n  getNextPage(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesNextPageAction) {\n    const state = ctx.getState();\n    const nextPage = state.page + 1;\n\n    return this.imageRequestService\n      .getImagesByTag(state.searchTerm, nextPage)\n      .pipe(\n        tap(res => {\n          console.log(res.length);\n          ctx.setState(\n            {\n              ...state,\n              page: nextPage,\n              searchTerm: state.searchTerm,\n              imagResponseList: res.length === 0 ? state.imagResponseList :\n                state.imagResponseList.concat(res)\n            }\n          )\n        })\n      )\n  }*/\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {ImagesByTagsAction, ImagesByUserIDAction, ImagesNextPageAction} from \"../actions/image.action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\n\r\n@State<ImageModelList>({\r\n  name: 'ImagesByUserId'\r\n})\r\n@Injectable()\r\nexport class ImagesByUserIdState {\r\n  constructor(private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getData(state: ImageModelList): ImageModel[] {\r\n    return state.models;\r\n  }\r\n\r\n  @Action(ImagesByUserIDAction)\r\n  searchByTags(ctx: StateContext<ImageModelList>, action: ImagesByUserIDAction) {\r\n    const state = ctx.getState();\r\n    return this.imageRequestService\r\n      .getImagesByUserId(action.userId)\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              models: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext, Store} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'LoggedDetails'\r\n})\r\n@Injectable()\r\nexport class LoggedUserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: UpdateUserService,\r\n              private store: Store) {\r\n  }\r\n\r\n  @Selector()\r\n  static getProfile(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserId(state: BaseUserDetails): string {\r\n    return state.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUsername(state: BaseUserDetails): string {\r\n    return state.username;\r\n  }\r\n\r\n  @Selector()\r\n  static getLoggedState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoggedUserDetails)\r\n  getUserDetails(ctx: StateContext<BaseUserDetails>,\r\n                 action: AuthenticationActions.LoggedUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(UserDetailsActions.UploadUserProfile)\r\n  uploadProfileImage(ctx: StateContext<BaseUserDetails>,\r\n                     action: UserDetailsActions.UploadUserProfile): Observable<any> {\r\n    return this.imageRequestService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(map(res => {\r\n        if (res.status === 200) {\r\n          console.log(res.body);\r\n          const state = ctx.getState();\r\n          return this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n        }\r\n      }))\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {IUserAuthState, UserAuthStateModel} from \"../../domain/UserAuthStateModel\";\r\nimport {IUserLoginModel, LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {catchError, map, retry, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {BehaviorSubject, Observable, Subject, throwError} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {BaseUserDetails, UserDetailsImpl} from \"../../domain/userModel/user-details.model\";\r\n\r\n@State<IUserAuthState>({\r\n  name: 'Authentication',\r\n  defaults: {\r\n    user: undefined,\r\n    status: false\r\n  }\r\n})\r\n@Injectable()\r\nexport class LoginStateModel {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static loggedUserId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static isLoggedIn(state: IUserAuthState): boolean {\r\n    return state.status;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedInUser(state: IUserAuthState): BaseUserDetails {\r\n    return state.user;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstName(state: IUserAuthState): string {\r\n    return state.user.firstName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedLastName(state: IUserAuthState): string {\r\n    return state.user.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static userName(state: IUserAuthState): string {\r\n    return state.user.username;\r\n  }\r\n\r\n  @Selector()\r\n  static loginType(state: IUserAuthState): boolean {\r\n    return state.thirdPartyLogin;\r\n  }\r\n\r\n  @Selector()\r\n  static userId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static profileImg(state: IUserAuthState): string {\r\n    return state.user.profileImgPath;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoginAction)\r\n  login(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.LoginAction) {\r\n    const loginType = action.userLoginModel.password === undefined ? \"GOOGLE\" : \"DEFAULT\";\r\n    return this.authService.login(action.userLoginModel, loginType)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log('who triggered me??');\r\n          const status = response.status === 200;\r\n          const userId = response.headers.get(\"UserId\");\r\n          const state = ctx.getState();\r\n          console.log(response);\r\n          const body = response.body;\r\n          console.log(body)\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email,\r\n            },\r\n            status: status,\r\n            thirdPartyLogin: body.thirdPartyLogin\r\n          });\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.IsLoggedIn)\r\n  isLoggedIn(ctx: StateContext<IUserAuthState>,\r\n             action: AuthenticationActions.IsLoggedIn): Observable<boolean> {\r\n    return this.authService.isLoggedIn()\r\n      .pipe(\r\n        map(response => {\r\n          const status = response.status === 200;\r\n          const state = ctx.getState();\r\n          const body = response.body;\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email\r\n            },\r\n            status: status,\r\n            thirdPartyLogin: body.thirdPartyLogin\r\n          })\r\n          return status;\r\n        }), retry(1), catchError(err => {\r\n          console.log(\"Error in isLoggedin\");\r\n          return throwError(err);\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.Logout)\r\n  logout(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.Logout) {\r\n    return this.authService.logout()\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            user: null,\r\n            status: false\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {DialogCropperData, PassDataToDialogAction} from \"../actions/pass-data-to-dialog.action\";\r\nimport {CroppedDownloadRequest} from \"../../domain/http/req/CroppedDownloadRequest\";\r\nimport {SetCroppedOffsetValues} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\n\r\n@State<DialogCropperData>({\r\n  name: 'PassDataToDialog'\r\n\r\n})\r\n@Injectable()\r\nexport class PassDataToCropperDialogState {\r\n  constructor() {  }\r\n\r\n\r\n  @Selector()\r\n  static getComponentData(state: DialogCropperData): DialogCropperData {\r\n    return state;\r\n  }\r\n\r\n  @Action(PassDataToDialogAction)\r\n  public passData(ctx: StateContext<DialogCropperData>,\r\n                  action: PassDataToDialogAction): Observable<DialogCropperData> {\r\n    ctx.patchState(action.data);\r\n    return of(ctx.getState());\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CroppedDownloadRequest} from \"../../domain/http/req/CroppedDownloadRequest\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {AssignCropperPosToImageUpload, SetCroppedOffsetValues} from \"../actions/image.action\";\r\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {flatMap, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\r\n\r\n@State<CroppedDownloadRequest>({\r\n  name: 'prepareForCroppedDownloadRequest'\r\n})\r\n@Injectable()\r\nexport class PrepareCroppedForDownloadState {\r\n  constructor(private downloadService: ImageDownloadService,\r\n              private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getCroppedValues(state: CroppedDownloadRequest): CroppedDownloadRequest {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(AssignCropperPosToImageUpload)\r\n  public prepareCropperValuesForUpload(\r\n    ctx: StateContext<CroppedDownloadRequest>,\r\n    action: AssignCropperPosToImageUpload): Observable<CroppedDownloadRequest> {\r\n    ctx.patchState({\r\n      ...ctx.getState(),\r\n      offsetX: action.offsetX,\r\n      offsetY: action.offsetY,\r\n      subImageWidth: action.subImageWidth,\r\n      subImageHeight: action.subImageHeight\r\n    });\r\n    return new BehaviorSubject(ctx.getState());\r\n  }\r\n\r\n\r\n  @Action(SetCroppedOffsetValues)\r\n  public setCroppedOffsetValues(ctx: StateContext<CroppedDownloadRequest>,\r\n                                action: SetCroppedOffsetValues): Observable<CroppedDownloadRequest> {\r\n    const subImageWidth = action.subImageWidth;\r\n    const subImageHeight = action.subImageHeight;\r\n\r\n    let possibleResolutions: Array<string> = [];\r\n\r\n\r\n    // put cropped image resolution into the resolutionList\r\n    possibleResolutions.push(subImageWidth.toFixed(0) + \" x \" + subImageHeight.toFixed(0))\r\n\r\n    // get possible app resolution array from endpoint\r\n    return this.imgReqService\r\n      .getResolutions()\r\n      .pipe(switchMap(response => {\r\n        let state = ctx.getState();\r\n        const ratio = subImageWidth / subImageHeight;\r\n\r\n        // check if querformat or hochformat\r\n        if (subImageWidth > subImageHeight) {\r\n          response.widthList\r\n            .forEach(widthResolution => {\r\n              if (subImageWidth > widthResolution) {\r\n                const height = widthResolution / ratio;\r\n                possibleResolutions.push(widthResolution + \" x \" + height.toFixed(0));\r\n              }\r\n            })\r\n\r\n          // only take lower resolutions from response array\r\n        } else if (subImageHeight > subImageWidth) {\r\n          response.heightList\r\n            .forEach(heightResolution => {\r\n              if (subImageHeight > heightResolution) {\r\n                const width = heightResolution * ratio;\r\n                possibleResolutions.push(width.toFixed(0) + \" x \" + heightResolution.toFixed(0));\r\n              }\r\n            })\r\n\r\n        }\r\n        ctx.patchState({\r\n          ...state,\r\n          offsetX: action.offsetX,\r\n          offsetY: action.offsetY,\r\n          subImageWidth: subImageWidth,\r\n          subImageHeight: subImageHeight,\r\n          possibleResolutions: possibleResolutions\r\n        })\r\n        return of(ctx.getState());\r\n      }));\r\n  }\r\n}\r\n\r\n\r\nexport interface ResolutionsResponse {\r\n  widthList: Array<number>;\r\n  heightList: Array<number>;\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\nimport {GetRelatedImagesByTagIDs} from \"../actions/image.action\";\r\n\r\n@State<RelatedImagesModel>({\r\n  name: 'RelatedImages'\r\n})\r\n@Injectable()\r\nexport class RelatedImagesState {\r\n  constructor(private imageReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getRelatedImages(state: RelatedImagesModel): ImageModel[] {\r\n    return state.data;\r\n  }\r\n\r\n  @Action(GetRelatedImagesByTagIDs)\r\n  userDetails(ctx: StateContext<RelatedImagesModel>,\r\n              action: GetRelatedImagesByTagIDs): Observable<ImageModel[]> {\r\n    return this.imageReqService.getRelatedImagesByTagList(action.tagIds)\r\n      .pipe(\r\n        map(response => {\r\n          console.log(response)\r\n          let state = ctx.getState();\r\n          state.data = response;\r\n          ctx.setState({\r\n            data: response\r\n          })\r\n          return response;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport interface RelatedImagesModel {\r\n  data: ImageModel[]\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<RequestStatus>({\r\n  name: 'RequestStatus'\r\n})\r\n@Injectable()\r\nexport class RequestStatusState {\r\n\r\n  @Selector()\r\n  static getStatus(state: RequestStatus): RequestStatus {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getStatusCode(state: RequestStatus): number {\r\n    return state.status;\r\n  }\r\n\r\n\r\n  @Action(RequestMessageAction)\r\n  getRequestStatus(ctx: StateContext<RequestStatus>, action: RequestMessageAction) {\r\n    let state = ctx.getState();\r\n    state.message = '';\r\n    if (action.requestStatus !== null) {\r\n      ctx.setState({\r\n        message: action.requestStatus.message,\r\n        status: action.requestStatus.status !== null ?\r\n          action.requestStatus.status : null\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {Injectable} from \"@angular/core\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {tap} from \"rxjs/operators\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\n\n@State<TagQueryList>({\n  name: 'tag'\n})\n@Injectable()\nexport class SearchByTagState {\n  constructor(public tagService: TagRequestService) {\n  }\n\n  @Selector()\n  static tags(state: TagQueryList): TagQueryList {\n    return state;\n  }\n\n  @Selector()\n  static getFetchedTagListAsOption(state: TagQueryList): SearchViewModel[] {\n    return state.result\n      .map(val => {\n        return {\n          value: val.tag\n        }\n      });\n  }\n\n  @Selector()\n  static getFetchedTagList(state: TagQueryList): TagModel[] {\n    return state.result;\n  }\n\n  @Action(QueryTagAction)\n  queryTags(ctx: StateContext<TagQueryList>, action: QueryTagAction) {\n    return this.tagService\n      .searchByTagName(action.searchTerm)\n      .pipe(\n        tap(res => {\n          const state = ctx.getState();\n          //ctx.patchState({result: res})\n          ctx.setState({\n            ...state,\n            result: res\n          })\n        })\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SearchByUsersService} from \"../../../serviceV2/search-by-users.service\";\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {map, tap} from \"rxjs/operators\";\nimport {UserDetailsActions} from \"../actions/user-details.action\";\nimport SearchUsers = UserDetailsActions.SearchUsers;\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\nimport {Observable} from \"rxjs\";\n\n@State<UserSearchModel>({\n  name: 'users'\n})\n@Injectable()\nexport class SearchByUsersState {\n\n  constructor(public userSearchService: SearchByUsersService) { }\n\n  @Selector()\n  static getFetchedUsersAsOptions(state: UserSearchModel): SearchViewModel[] {\n    console.log(state.data);\n    return state.data.map(val => {\n      return {\n        value: val.username\n      }\n    });\n  }\n\n\n  @Selector()\n  static getFetchedUsers(state: UserSearchModel): BaseUserDetails[] {\n    console.log(state.data);\n    return state.data;\n  }\n\n  @Action(SearchUsers)\n  queryTags(ctx: StateContext<UserSearchModel>, action: SearchUsers): Observable<UserSearchModel> {\n    return this.userSearchService\n      .searchByEmail(action.searchTerm)\n      .pipe(map(response => {\n        console.log(response)\n        const users = {data: response};\n        const state = ctx.getState();\n        ctx.patchState({\n          ...state,\n          data: response\n        })\n        return ctx.getState();\n      }))\n  }\n}\n\nexport interface UserSearchModel {\n  data: BaseUserDetails[];\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {GetImageByImageId, SelectImage} from \"../actions/image.action\";\r\n\r\n\r\n\r\n\r\n@State<SelectedImage> ( {\r\n  name: 'SelectImage'\r\n} )\r\n@Injectable()\r\nexport class SelectImageState {\r\n  constructor() { }\r\n\r\n  @Selector()\r\n  static getSelectedImage(state: SelectImage): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageUrlReference(state: SelectImage): string {\r\n    return state.image.linkReference;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageId(state: SelectImage): string {\r\n    return state.image.imageId;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedLink(state: ImageModel): string {\r\n    return state.link;\r\n  }\r\n\r\n  @Selector()\r\n  static getIsPublic(state: SelectImage): boolean {\r\n    return state.image.isPublic;\r\n  }\r\n\r\n  @Action(SelectImage)\r\n  selectImage(ctx: StateContext<SelectedImage>, action: SelectImage) {\r\n    const state = ctx.getState();\r\n    ctx.setState( {\r\n      ...state,\r\n      image: action.image\r\n    } )\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\r\nimport {LoggedInUserModel, UserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {EMPTY, Observable} from \"rxjs\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {Country} from \"../../domain/address-model/addres.view.model\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\n\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'Signup',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class SignupState {\r\n  constructor(private authService: UserAuthenticationService) {\r\n  }\r\n\r\n  @Selector()\r\n  static registrationModel(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n\r\n\r\n  @Action(AuthenticationActions.SignUpAction)\r\n  createNewUser(ctx: StateContext<BaseUserDetails>,\r\n                action: AuthenticationActions.SignUpAction): Observable<LoggedInUserModel> {\r\n    return this.authService.createNewUser(action.userRegistration)\r\n      .pipe(\r\n        map(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: action.userRegistration.firstName,\r\n            lastName: action.userRegistration.lastName,\r\n            email: action.userRegistration.email,\r\n            password: action.userRegistration.password,\r\n            address: action.userRegistration.address\r\n          })\r\n\r\n          return response;\r\n        }), catchError(err => {\r\n          ctx.dispatch(new RequestMessageAction({ status: err.status, message: err.error.message}))\r\n          return EMPTY;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\nimport {UpdateUserProfileActions} from \"../actions/update-user-profile.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'foo'\r\n})\r\n@Injectable()\r\nexport class UpdateUserProfileImageState {\r\n  constructor(private updateProfileService: UpdateUserService) { }\r\n\r\n  @Action(UpdateUserProfileActions.UploadUserProfileImg)\r\n  setProfile(ctx: StateContext<UploadImageModel>,\r\n             action: UpdateUserProfileActions.UploadUserProfileImg) {\r\n    return this.updateProfileService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(tap(response => {\r\n        const state = ctx.getState();\r\n        state.file = action.file;\r\n        state.userId = action.userId;\r\n        ctx.patchState({...state})\r\n      }))\r\n\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UploadImage} from \"../actions/image.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {ImageUploadService} from \"../../../serviceV2/image-upload.service\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'Upload'\r\n\r\n})\r\n@Injectable()\r\nexport class UploadImageState {\r\n  constructor(private uploadService: ImageUploadService) {\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(UploadImage)\r\n  uploadImage(ctx: StateContext<UploadImageModel>,\r\n              action: UploadImage): Observable<any> {\r\n\r\n    // const userId = action.uploadModel.userId;\r\n    // const image = action.uploadModel.file;\r\n    return this.uploadService\r\n      .addToUserLibrary(action.uploadModel)\r\n      .pipe(\r\n        tap(response => {\r\n          // console.log(response.status)\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            userId: action.uploadModel.userId,\r\n            orgFile: action.uploadModel.orgFile,\r\n            galleryFile: action.uploadModel.galleryFile,\r\n            downloadFile: action.uploadModel.downloadFile,\r\n            status: response.status === 200\r\n          })\r\n        })\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {Store} from \"@ngxs/store\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\n\n@Component({\n  selector: 'app-dialog-wrapper',\n  templateUrl: './login-dialog-wrapper.component.html',\n  styleUrls: ['./login-dialog-wrapper.component.scss']\n})\nexport class LoginDialogWrapperComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private store: Store) { }\n\n  ngOnInit(): void {\n    const ref = new MatDialogConfig();\n    this.dialog.open(LoginComponent,\n      {\n        width: '750px',\n        height: '600px',\n        disableClose: true,\n        autoFocus: false\n      });\n  }\n\n}\n","<app-search-toolbar></app-search-toolbar>\n\n","export class UserAddressModel {\r\n  street: string;\r\n  region: string;\r\n  zipcode: string;\r\n  country: string;\r\n\r\n\r\n  constructor(street: string,\r\n              region: string,\r\n              zipcode: string,\r\n              country: string) {\r\n    this.street = street;\r\n    this.region = region;\r\n    this.zipcode = zipcode;\r\n    this.country = country;\r\n  }\r\n}\r\n","import {ImageModel} from \"./image.model\";\r\nimport {FilterCheckBox} from \"../../../public/search-toolbar/search.toolbar.component\";\r\n\r\nexport interface ImagesByTagName {\r\n  page?: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n  filterOpt?: FilterCheckBox;\r\n}\r\n\r\nexport class FilterName {\r\n  public static readonly FILTER_BY_DATE_WEEK = \"WEEK\";\r\n  public static readonly FILTER_BY_DATE_MONTH = \"MONTH\";\r\n  public static readonly FILTER_BY_DATE_YEAR = \"YEAR\";\r\n  public static readonly FILTER_BY_MOST_DOWNLOADS = \"DOWNLOADS\";\r\n  public static readonly FILTER_BY_MOST_LIKES = \"LIKES\";\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterArgs implements ImagesByTagName{\r\n  searchTerm: string;\r\n  filters: Map<string, boolean>;\r\n\r\n  constructor(searchTerm: string, filters: Map<string, boolean>) {\r\n    this.searchTerm = searchTerm;\r\n    this.filters = filters;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterOpt implements ImagesByTagName{\r\n  filterOpt: FilterCheckBox;\r\n  searchTerm: string;\r\n\r\n\r\n  constructor(filterOpt: FilterCheckBox, searchTerm: string) {\r\n    this.filterOpt = filterOpt;\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\n\r\nexport class ImagesByTagNameQueryImpl implements ImagesByTagName{\r\n  searchTerm: string;\r\n\r\n  constructor(searchTerm: string) {\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameStateModel implements ImagesByTagName{\r\n  page: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n\r\n  constructor(page: number,\r\n              searchTerm: string,\r\n              imagResponseList: ImageModel[]) {\r\n    this.page = page;\r\n    this.searchTerm = searchTerm;\r\n    this.imagResponseList = imagResponseList;\r\n  }\r\n}\r\n","export interface IUserLoginModel {\n  userId?: string;\n  email: string;\n  password?: string;\n  firstName?: string;\n  lastName?: string;\n  profileImg?: string;\n  tokenId?: string;\n}\n\nexport class UserLoginModel implements IUserLoginModel{\n  email: string;\n  password: string;\n\n  constructor(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n  }\n}\n\nexport class LoggedInUserModel implements IUserLoginModel {\n  email: string;\n  userId: string;\n\n  constructor(userId: string, email: string) {\n    this.email = email;\n    this.userId = userId;\n  }\n}\n\nexport class GoogleUserLogin implements IUserLoginModel {\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileImg: string;\n  tokenId: string;\n\n\n  constructor(email: string, firstName: string, lastName: string, profileImg: string, tokenId: string) {\n    this.email = email;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.profileImg = profileImg;\n    this.tokenId = tokenId;\n  }\n}\n","import {UserAddressModel} from \"../address-model/user-address-model\";\r\nimport {ImageModel} from \"../imageModel/image.model\";\r\n\r\nexport interface BaseUserDetails {\r\n  userId?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  username?: string;\r\n  likes?: ImageModel[];\r\n  images?: ImageModel[];\r\n  profileImgPath?: string;\r\n  password?: string;\r\n  address?: UserAddressModel;\r\n}\r\n\r\nexport class UserRegistrationModel implements BaseUserDetails{\r\n  address?: UserAddressModel;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: string;\r\n\r\n  constructor(firstName: string, lastName: string,\r\n              email: string, password: string,\r\n              street: string, region: string,\r\n              zipcode: string, country:string) {\r\n    this.address = new UserAddressModel(street, region, zipcode, country);\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n\r\nexport class UserDetailsImpl implements BaseUserDetails{\r\n  userId: string\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImgPath: string;\r\n  username: string;\r\n\r\n\r\n  constructor(userId: string, email: string,\r\n              firstName: string, lastName: string,\r\n              profileImgPath: string, username: string) {\r\n    this.userId = userId;\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.profileImgPath = profileImgPath;\r\n    this.username = username;\r\n  }\r\n}\r\n\r\n\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\r\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\r\nimport {ImageModelList} from \"../domain/imageModel/image-model-list\";\r\nimport {ImageModel, ImageViewModel} from \"../domain/imageModel/image.model\";\r\nimport {map, switchMap, tap, throttleTime} from \"rxjs/operators\";\r\nimport {ImageTile} from \"./image-tile\";\r\nimport {TileRandomizer} from \"./tile-randomizer\";\r\nimport {Tile} from \"./tile\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {\r\n  GetDownloadDetails,\r\n  GetImageByImageId, GetRelatedImagesByTagIDs,\r\n  ImagesByTagsAction,\r\n  ImagesByUserIDAction,\r\n  ImagesNextPageAction,\r\n  SelectImage\r\n} from \"../app-state/actions/image.action\";\r\nimport {ImagesByTagNameQueryImpl, ImagesByTagNameWithFilterOpt} from \"../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {SignupComponent} from \"../signup/signup.component\";\r\nimport {ImageDetailViewComponent} from \"../image-detail-view/image-detail-view.component\";\r\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\r\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\r\n\r\n@Component({\r\n  selector: 'app-image-content',\r\n  templateUrl: './image-content.component.html',\r\n  styleUrls: ['./image-content.component.scss']\r\n})\r\nexport class ImageContentComponent implements OnInit {\r\n\r\n  @Input('data') models: Observable<ImageModel[]>;\r\n  @Input('dataArray') models2: ImageModel[];\r\n  @Input('isProfile') isProfile: boolean;\r\n\r\n\r\n  @Input() cols = 3;\r\n  @Input() rowHeight = 15;\r\n  @Input() gutterSize = 40;\r\n\r\n  panelOpenState = false;\r\n  //fetched data\r\n  public data: ImageModel[];\r\n  @Select(ImagesByTagState.getData) fData$: Observable<ImageModel[]>;\r\n  @Select(LoginStateModel.loggedUserId) $loggedUserId;\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  @Select(ImagesByUserIdState.getData) $imageData;\r\n  loggedUserState: BaseUserDetails;\r\n  hover: boolean = false;\r\n  editable: boolean = false;\r\n\r\n\r\n  //AutoScroll\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  viewport: CdkVirtualScrollViewport;\r\n  test = new Array<string>();\r\n  end = false;\r\n  offset = new Subject();\r\n  evenRowLimit = new Subject<boolean>();\r\n  infinite: Observable<any[]>;\r\n  showLoadBtn: boolean;\r\n  dataEvenRowSize: number;\r\n  breakpoint: any;\r\n  downloadLink: any;\r\n  rows = new Subject<ImageRowView[]>();\r\n  imageViewModel: ImageViewModel[];\r\n  device: string = '';\r\n\r\n  constructor(private store: Store,\r\n              public imgReqService: ImageRequestService,\r\n              private router: Router,\r\n              private updateUserService: UpdateUserService,\r\n              private dialog: MatDialog,\r\n              private downloadService: ImageDownloadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.models.subscribe(value => {\r\n      const imageRowViews: ImageRowView[] = ImageRowMapper.mapToImageRow(value);\r\n      // if (imageRowViews) console.log(imageRowViews.length);\r\n      this.rows.next(imageRowViews);\r\n    })\r\n\r\n    this.$loggedUserId.subscribe(id => {\r\n      console.log(id);\r\n      this.models.subscribe(data => {\r\n        if (data) {\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (data[i].user.userId !== id) {\r\n              // console.log(data[i]);\r\n              // console.log(id);\r\n              this.editable = false;\r\n              break;\r\n            } else {\r\n              this.editable = true;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log(this.editable);\r\n\r\n    this.deviceObserverService\r\n      .getActiveDevice()\r\n      .subscribe(value => this.device = value);\r\n\r\n\r\n  }\r\n\r\n  public nextBatch(e, offset) {\r\n    if (this.end) { return; }\r\n    const end = this.viewport.getRenderedRange().end;\r\n    var total = this.viewport.getDataLength();\r\n    console.log(total);\r\n    console.log(end);\r\n    this.offset.subscribe(value => console.log(value));\r\n    if (end == total) this.offset.next(offset);\r\n  }\r\n\r\n  public getBatch(lastSeen: string) {\r\n\r\n  }\r\n\r\n  onResize($event: any) {\r\n\r\n  }\r\n\r\n  enter() {\r\n    this.hover = true;\r\n    console.log(this.hover);\r\n  }\r\n\r\n  leave() {\r\n    this.hover = false;\r\n    console.log(this.hover);\r\n  }\r\n\r\n  download(img: ImageModel): void {\r\n    console.log(img)\r\n    this.store.dispatch(new GetImageByImageId(img.imageId))\r\n    this.router.navigate(['image', { imageId: img.imageId }]);\r\n  }\r\n\r\n  clickedTag(tag: string) {\r\n    this.store.dispatch(new ImagesByTagsAction(\r\n      new ImagesByTagNameWithFilterOpt(null, tag)))\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        console.log(\"Search pressed..\");\r\n        this.router.navigate(['/image-by-tags']);\r\n      });\r\n    /*this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    ).subscribe(value => {\r\n      /!*this.store.dispatch(new Navigate(['/image-by-tags']))*!/\r\n      this.router.navigate(['image-by-tags'])\r\n    });*/\r\n\r\n  }\r\n\r\n  reachedLastEvenElement(val) {\r\n    console.log(val)\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return index;\r\n  }\r\n\r\n  loadNextPage() {\r\n    this.store.dispatch(new ImagesNextPageAction(this.data))\r\n  }\r\n\r\n  navigateToUser(item: ImageModel): void {\r\n    console.log(item.user.userId);\r\n    this.store.dispatch(\r\n      new Navigate(['profile', {userId: item.user.userId}])\r\n    )\r\n  }\r\n\r\n  showFullscreenImage(item: ImageModel): void {\r\n    this.store.dispatch(new SelectImage(item))\r\n      .subscribe(value => {\r\n        const ref = new MatDialogConfig();\r\n        this.dialog.open(ImageDetailViewComponent,\r\n          {\r\n          height: '100%',\r\n          width: '100vw',\r\n          maxWidth: '100vw',\r\n            data: item,\r\n            panelClass: 'show-fullscreen-img'\r\n            // disableClose: true,\r\n            // autoFocus: false\r\n          });\r\n      })\r\n\r\n  }\r\n\r\n  changeImageDetails(item: ImageModel): void {\r\n    if (this.isProfile && this.editable) {\r\n      this.store.dispatch(new SelectImage(item))\r\n      this.dialog.open(ChangeImageDetailsDialogComponent,\r\n        {\r\n          width: '780px',\r\n          height: '780px',\r\n          data: item,\r\n          panelClass: 'change-img-details'\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  showAddTagsDialog(item: ImageModel): void {\r\n    const ref = new MatDialogConfig();\r\n    // ref.disableClose = true;\r\n    this.store.dispatch(new SelectImage(item))\r\n    this.dialog.open(AddTagsDialogComponent,\r\n      {\r\n        width: '435px',\r\n        height: '600px',\r\n        data: item,\r\n        panelClass: 'add-tag-dialog'\r\n      }\r\n    );\r\n\r\n    this.dialog.afterAllClosed\r\n      .subscribe(value => {\r\n        console.log(\"FOO\")\r\n        this.store.dispatch(new Navigate(['profile', {userId: item.user.userId}]))\r\n      })\r\n  }\r\n\r\n  // when not logged user likes image then redirect to login page\r\n\r\n\r\n  likeImage(item: ImageModel, userId: string): void {\r\n    console.log(this.store.selectSnapshot(LoginStateModel.loggedUserId));\r\n    this.store.dispatch(new IsLoggedIn())\r\n      .subscribe(value1 => {\r\n        this.updateUserService.addUserLike(item.imageId, value1.Authentication.user.userId)\r\n          .subscribe(value => console.log(value));\r\n        this.store.dispatch(new UserDetailsActions.GetUserDetails(userId))\r\n      });\r\n  }\r\n\r\n  fooTest() {\r\n    console.log(\"FOOOOOOOOOOOO\")\r\n  }\r\n}\r\n\r\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\r\nimport {LoginComponent} from \"../login/login.component\";\r\nimport {AddTagsDialogComponent} from \"../../private/add-tags-dialog/add-tags-dialog.component\";\r\n\r\n\r\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\r\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\r\nimport {ImageRowView} from \"../domain/ImageRowView\";\r\nimport {ImageRowMapper} from \"../image-row-mapper\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport IsLoggedIn = AuthenticationActions.IsLoggedIn;\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {ChangeImageDetailsDialogComponent} from \"../../private/change-image-details-dialog/change-image-details-dialog.component\";\r\nimport {FileSaverService} from \"ngx-filesaver\";\r\nimport {DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\n","<mat-grid-list class=\"img-list\" [cols]=\"device === 'sm' || device === 'md' ? 2 : device === 'xs' ? 1 : 4\"\r\n               [rowHeight]=\"10\"\r\n               [gutterSize]=\"20+'px'\" >\r\n  <mat-grid-tile class=\"grid-tile\" [rowspan]=\"item.rows\"\r\n                 *ngFor=\"let imgItem of ((models | async) ? (models | async) : models); index as i; trackBy: track\" >\r\n      <app-image-item class=\"img-item\" #item [image]=\"imgItem\"\r\n                      [rowHeight]=\"10\"\r\n                      [gutterSize]=\"20\">\r\n\r\n      </app-image-item>\r\n\r\n      <div (click)=\"fooTest()\" class=\"item-container\">\r\n          <button mat-icon-button *ngIf=\"imgItem.user.profileImgPath\" class=\"account-btn profile-icon\" (click)=\"navigateToUser(imgItem)\">\r\n            <img class=\"shadow3 user-profile-img\" id=\"img-profile\" [src]=\"imgItem.user.profileImgPath\" alt=\"\">\r\n          </button>\r\n        <span class=\"user-name\" id=\"user-txt\">{{ imgItem.user.email.substr(0, imgItem.user.email.indexOf('@')) }}</span>\r\n\r\n          <a class=\"img-download\"\r\n             matTooltip=\"Click to download this image\"\r\n             mat-icon-button\r\n             (click)=\"download(imgItem)\">\r\n            <mat-icon style=\"font-weight: bolder\" class=\"img-download white-icon\">save_alt</mat-icon>\r\n          </a>\r\n\r\n\r\n\r\n\r\n        <!--<img class=\"fullscreen-img\" src=\"assets/arrows_fullscreen_icon_160438.png\" alt=\"\">-->\r\n\r\n\r\n\r\n\r\n        <a (click)=\"showFullscreenImage(imgItem)\" class=\"fullscreen-icon\"\r\n           matTooltip=\"Click to view full screen\"\r\n           mat-icon-button>\r\n          <!--<mat-icon class=\"fullscreen-icon\" style=\"font-weight: bolder; color: white\">fullscreen</mat-icon>-->\r\n          <img class=\"expand-icon\"\r\n               matTooltip=\"Click to view full screen\"\r\n               src=\"assets/expand-512.png\" alt=\"\">\r\n        </a>\r\n\r\n\r\n\r\n        <div *ngIf=\"!imgItem.user.profileImgPath\" class=\"profile-icon\">\r\n          <button class=\"btn\" mat-icon-button>\r\n            <mat-icon style=\"font-size: 70px; color: white\">account_circle</mat-icon>\r\n          </button>\r\n          <a mat-button *ngIf=\"!imgItem.user.profileImgPath\" class=\"header\"\r\n             (click)=\"navigateToUser(imgItem)\">\r\n            {{ imgItem.user.email.substr(0, imgItem.user.email.indexOf('@')) }}\r\n          </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"editable && isProfile\" class=\"img-settings\">\r\n          <a mat-icon-button>\r\n            <mat-icon class=\"setting-icon icon white-icon mobile-icon\"\r\n                      matTooltip=\"Open settings menu\"\r\n                      (click)=\"changeImageDetails(imgItem)\"\r\n                      *ngIf=\"imgItem.isPublic\">settings\r\n            </mat-icon>\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"likes-box\">\r\n          <div class=\"likes\">\r\n            <a class=\"thumbUp\" (click)=\"likeImage(imgItem, imgItem.userId)\"\r\n               mat-icon-button>\r\n              <mat-icon class=\"white-icon icon mobile-icon\" style=\"\">thumb_up</mat-icon>\r\n            </a>\r\n          </div>\r\n\r\n          <!--<button mat-icon-button (click)=\"download(imgItem)\">\r\n            <mat-icon class=\"white-icon icon-size\">save_alt</mat-icon>\r\n          </button>-->\r\n        </div>\r\n\r\n        <a *ngIf=\"imgItem.linkReference !== 'null' && imgItem.linkReference.length > 0\"\r\n           class=\"actions\"\r\n           matTooltip=\"{{'Go to ' + imgItem.linkReference}}\"\r\n           mat-menu-item\r\n           [href]=\"imgItem.linkReference\">\r\n        <img class=\"expand-icon\"\r\n             src=\"assets/link-5-512.png\" alt=\"\">\r\n        </a>\r\n\r\n        <!--<div class=\"actions\">\r\n          <button matTooltip=\"Click to open menu\"\r\n                  style=\"color: white;\"\r\n                  mat-icon-button\r\n                  [matMenuTriggerFor]=\"menu\"\r\n                  aria-label=\"Example icon-button with a menu\">\r\n            <mat-icon class=\"action_icon icon white-icon mobile-icon\" style=\"\">more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"editable && isProfile\"\r\n                    (click)=\"showAddTagsDialog(imgItem)\"\r\n                    mat-menu-item>\r\n              <mat-icon>edit</mat-icon>\r\n              <span>Add tags</span>\r\n            </button>\r\n            &lt;!&ndash;<button (click)=\"showFullscreenImage(imgItem)\" mat-menu-item>\r\n              <mat-icon>fullscreen</mat-icon>\r\n              <span>Fullscreen</span>\r\n            </button>&ndash;&gt;\r\n            &lt;!&ndash;<a mat-menu-item (click)=\"download(imgItem)\">\r\n              <mat-icon>save_alt</mat-icon>\r\n              <span>Download image</span>\r\n            </a>&ndash;&gt;\r\n            <a matTooltip=\"Go to {{imgItem.linkReference}}\"\r\n               mat-menu-item\r\n               [href]=\"imgItem.linkReference\">\r\n              <mat-icon>public</mat-icon>\r\n              <span>Go to source</span>\r\n            </a>\r\n          </mat-menu>\r\n        </div>-->\r\n        <!--<a *ngIf=\"imgItem.linkReference !== 'null'\" class=\"link-reference\" matTooltip=\"Go to {{imgItem.linkReference}}\"\r\n           mat-menu-item\r\n           [href]=\"imgItem.linkReference\">\r\n          <mat-icon style=\"color: white\">public</mat-icon>\r\n        </a>-->\r\n      </div>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Select} from \"@ngxs/store\";\r\nimport {SelectImageState} from \"../app-state/states/select-image.state\";\r\nimport {ImageModel} from \"../domain/imageModel/image.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-image-detail-view',\r\n  templateUrl: './image-detail-view.component.html',\r\n  styleUrls: ['./image-detail-view.component.scss']\r\n})\r\nexport class ImageDetailViewComponent implements OnInit {\r\n\r\n  @Select(SelectImageState.getSelectedLink) selectedImage: Observable<string>;\r\n  link: string = '';\r\n  panelOpenState: boolean;\r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<ImageDetailViewComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /*closeFullscreen() {\r\n    this.dialogRef.close();\r\n  }*/\r\n  closeFullscreen() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"content\">\r\n    <button style=\"background-color: black\" (click)=\"closeFullscreen()\" mat-icon-button>\r\n      <mat-icon class=\"icon\">close</mat-icon>\r\n    </button>\r\n    <img class=\"img-content\" [src]=\"data.originalImgPath\" alt=\"\">\r\n  </div>\r\n</div>\r\n","import {ImageModel} from \"./domain/imageModel/image.model\";\r\nimport {ImageRowView} from \"./domain/ImageRowView\";\r\n\r\nexport class ImageRowMapper {\r\n  public static mapToImageRow(imageModels: ImageModel[]): ImageRowView[] {\r\n    let countRow: number = 0;\r\n    let countItem: number = 0;\r\n    let rowModels: ImageRowView[] = [];\r\n    let temp: ImageModel[] = [];\r\n    let test: ImageRowView = {row: null, content: []};\r\n    if (imageModels !== undefined && imageModels !== null) {\r\n      imageModels.forEach((value1, index) => {\r\n        countItem++;\r\n        if (countItem <= 3) temp.push(value1);\r\n        if (countItem == 3) {\r\n          countItem = 0;\r\n          rowModels.push({row: countRow, content: temp});\r\n          temp = [];\r\n          countRow++;\r\n        }\r\n        if (index == imageModels.length - 1) {\r\n          rowModels.push({row: countRow, content: temp});\r\n        }\r\n      })\r\n      return rowModels;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl} from \"@angular/forms\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport {GoogleUserLogin, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {Location} from \"@angular/common\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {log} from \"util\";\r\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\r\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../../public/renew-expired-account-token/renew-expired-account-token.component\";\r\nimport {ShowEmailWasSentDialog} from \"../util/ShowEmailWasSentDialog\";\r\nimport {\r\n  CdkConnectedOverlay,\r\n  CdkOverlayOrigin, ConnectedPosition,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayPositionBuilder\r\n} from \"@angular/cdk/overlay\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  public formGroup;\r\n  public emailFormField = new FormControl('');\r\n  public passwordFormField = new FormControl('');\r\n  public pressedLogin = false;\r\n  forgotPasswordPressed = false;\r\n\r\n  @ViewChild(CdkConnectedOverlay) testing;\r\n\r\n  closeToolTip: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  isOpen = false;\r\n\r\n  openToolTip: Subject<boolean> = new Subject<boolean>();\r\n\r\n  connectedPosition: ConnectedPosition[] = [{\r\n    originX: 'end',\r\n    originY: 'bottom',\r\n    overlayX: 'end',\r\n    overlayY: 'top',\r\n  }];\r\n\r\n  variable: FlexibleConnectedPositionStrategy;\r\n\r\n  closeTooltip: Subject<boolean> = new Subject<boolean>();\r\n\r\n  closeToolTipFunc($event) {\r\n    this.isOpen = !$event;\r\n    console.log($event);\r\n    console.log(this.isOpen);\r\n  }\r\n\r\n\r\n  @Select(RequestStatusState.getStatus) $requestStatus;\r\n  @Select(RequestStatusState.getStatusCode) $requestStatusCode;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              public store: Store,\r\n              private dialogRef: MatDialogRef<LoginComponent>,\r\n              private authService: UserAuthenticationService,\r\n              private location: Location,\r\n              private googleAuthService: SocialAuthService,\r\n              private dialog: MatDialog,\r\n              private overlay: Overlay,\r\n              private overlayPositionBuilder: OverlayPositionBuilder,\r\n              private elementRef: ElementRef,) {\r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setStatusToNull();\r\n\r\n    this.variable = this.overlayPositionBuilder\r\n      // Create position attached to the elementRef\r\n      .flexibleConnectedTo(this.elementRef)\r\n      // Describe how to connect overlay to the elementRef\r\n      // Means, attach overlay's center bottom point to the\r\n      // top center point of the elementRef.\r\n      .withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'bottom',\r\n      }]);\r\n\r\n    this.setStatusToNull();\r\n\r\n    /*this.$requestStatusCode.subscribe(val => {\r\n      console.log(val);\r\n      this.isOpen = val === 423;\r\n    })*/\r\n\r\n\r\n    /*this.$requestStatusCode.subscribe(value => {\r\n      if (value !== undefined && value === 423 && this.mail.length > 0 && this.pwd.length > 0) {\r\n        this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n          width: '450px',\r\n          maxWidth: '450px',\r\n          minWidth: '280px',\r\n          height: '300px',\r\n          minHeight: '300px',\r\n          maxHeight: '300px',\r\n          data: {email: this.mail, password: this.pwd}\r\n        });\r\n      }\r\n    })*/\r\n\r\n  }\r\n\r\n  public setStatusToNull() {\r\n    this.isOpen = false;\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n  }\r\n\r\n  get mail(): string {\r\n    return this.formGroup.get('email').value;\r\n  }\r\n\r\n  get pwd(): string {\r\n    return this.formGroup.get('password').value;\r\n  }\r\n\r\n  public login(): void {\r\n    this.openToolTip.next(this.store.selectSnapshot(RequestStatusState.getStatusCode) === 423)\r\n    this.setStatusToNull();\r\n    console.log(this.testing);\r\n    this.pressedLogin = !this.pressedLogin;\r\n    const email = this.formGroup.get('email').value\r\n    const password = this.formGroup.get('password').value;\r\n    console.log(\"HALLLOOOO\");\r\n    this.store\r\n      .dispatch(\r\n        new AuthenticationActions.LoginAction(\r\n          new UserLoginModel(\r\n            email,\r\n            password\r\n          )\r\n        )).subscribe(value => {\r\n\r\n      console.log(\"HHHHHHHHHHHHHHHHHHHHHH66666\");\r\n      console.log(this.store.selectSnapshot(RequestStatusState.getStatusCode));\r\n      this.authService.isLoggedIn()\r\n        .subscribe(value1 => {\r\n          console.log(value1);\r\n\r\n          this.store.dispatch(new LoggedUserDetails(value1.body.userId));\r\n          this.close();\r\n        })\r\n    }, error => {\r\n      console.log(\"HHHHHHHHHHHHHHHHHHHHHH666668899\");\r\n    });\r\n  }\r\n\r\n  googleLogin(): void {\r\n    this.googleAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\r\n      .then(value => {\r\n        this.store.dispatch(new AuthenticationActions.LoginAction(\r\n          new GoogleUserLogin(value.email,\r\n            value.firstName, value.lastName,\r\n            value.photoUrl, value.idToken)\r\n        )).subscribe(value1 => {\r\n          this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n            .subscribe(value2 =>\r\n              this.store.dispatch(\r\n                new LoggedUserDetails(value2.Authentication.user.userId))\r\n            )\r\n\r\n        });\r\n      });\r\n    this.close();\r\n  }\r\n\r\n  public close(): void {\r\n    this.closeTooltip.next(true);\r\n    // this.store.dispatch(new Navigate(['welcome']))\r\n    this.dialogRef.close();\r\n    this.store\r\n      .dispatch(new RequestMessageAction({message: '', status: 0}));\r\n  }\r\n\r\n  openRenewDialog() {\r\n    console.log(\"Na da schau her du beidl\");\r\n    this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n      data: {email: this.mail, password: this.pwd}\r\n    });\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.authService\r\n      .requestResetPasswordToken({email: this.mail})\r\n      .subscribe(value => new ShowEmailWasSentDialog(this.dialog, value));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setStatusToNull();\r\n  }\r\n}\r\n\r\n\r\nexport interface RenewAccountVerificationToken {\r\n  email?: string;\r\n  password?: string;\r\n  tokenError?: boolean;\r\n  message?: string;\r\n}\r\n","<div class=\"header-container shadow\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n  <div class=\"header\">\r\n    <strong>Login</strong>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"logo-container\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\r\n    <a (click)=\"close()\" mat-icon-button class=\"home_button\">\r\n      <!--<img width=\"40px\" height=\"40px\" style=\"margin-top: 0px\"  src=\"assets/Specshots-Logo.png\">-->\r\n      <mat-icon style=\"color: white\">close</mat-icon>\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"logo-container2 shadow\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <img class=\"logo-image\" width=\"40px\" height=\"40px\" style=\"margin-top: 0px\" src=\"assets/Specshots-Logo.png\">\r\n</div>\r\n<div style=\"margin-top: 10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <span fxLayout=\"column\" class=\"logo-name\" fxLayoutAlign=\"center center\">\r\n    <span style=\"font-size: 18px;\">Sign In with</span>\r\n    <span><strong>SpecShots</strong></span>\r\n  </span>\r\n</div>\r\n<!--<mat-divider style=\"color: black\"></mat-divider>-->\r\n\r\n<div (click)=\"isOpen = false\" class=\"content\"\r\n     [formGroup]=\"formGroup\"\r\n     fxLayout=\"column\"\r\n     fxLayoutAlign=\"center space-evenly\" fxLayoutGap=\"20px\">\r\n  <!--  <div class=\"icon\" >-->\r\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\r\n  <!--    -->\r\n  <!--  </div>-->\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Email</mat-label>\r\n      <input type=\"email\"\r\n             matInput [formControl]=\"emailFormField\">\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\" *ngIf=\"forgotPasswordPressed === false\">\r\n      <mat-label>Password</mat-label>\r\n      <input type=\"password\"\r\n             matInput [formControl]=\"passwordFormField\">\r\n    </mat-form-field>\r\n  </p>\r\n  <!--  <mat-grid-list gutterSize=\"10px\" cols=\"1\" rowHeight=\"220px\">-->\r\n  <!--    <mat-grid-tile>-->\r\n  <!--      <div class=\"container2\">-->\r\n  <!--        -->\r\n  <!--        -->\r\n  <!--      </div>-->\r\n  <!--    </mat-grid-tile>-->\r\n  <!--  </mat-grid-list>-->\r\n\r\n  <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"center stretch\" class=\"container\">\r\n    <!--<div *ngIf=\"forgotPasswordPressed === false\">\r\n\r\n    </div>-->\r\n\r\n    <!--<button *ngIf=\"forgotPasswordPressed === false\" [close]=\"closeTooltip\" [email]=\"mail\"\r\n            [password]=\"pwd\"\r\n            appVerifyTooltip=\"Your Account must be verified\"\r\n            (click)=\"login()\" color=\"primary\" class=\"shadow\"\r\n            mat-raised-button >Sign In\r\n    </button>-->\r\n\r\n    <ng-container *ngIf=\"forgotPasswordPressed === false\">\r\n      <button cdkOverlayOrigin\r\n              #trigger=\"cdkOverlayOrigin\"\r\n              (click)=\"login()\" color=\"primary\"\r\n              class=\"shadow\"\r\n              mat-raised-button>Sign In\r\n      </button>\r\n\r\n\r\n      <ng-template cdkConnectedOverlay\r\n                   [cdkConnectedOverlayOrigin]=\"trigger\"\r\n                   [cdkConnectedOverlayOpen]=\"(isOpen || ($requestStatusCode | async) === 423) && forgotPasswordPressed === false\">\r\n        <app-verify-tooltip (close)=\"closeToolTipFunc($event)\" [email]=\"mail\" [password]=\"pwd\"\r\n                            text=\"Verify your account!\"></app-verify-tooltip>\r\n      </ng-template>\r\n    </ng-container>\r\n\r\n\r\n    <button class=\"shadow\" *ngIf=\"forgotPasswordPressed === true\" (click)=\"forgotPassword()\"\r\n            mat-raised-button color=\"warn\">Reset Password\r\n    </button>\r\n\r\n    <button *ngIf=\"forgotPasswordPressed === true\"\r\n            (click)=\"forgotPasswordPressed = false;\" color=\"primary\" class=\"shadow\"\r\n            mat-raised-button>\r\n      <mat-icon>arrow_back</mat-icon>\r\n      Back to Sign In\r\n    </button>\r\n    <!--<button class=\"shadow\" (click)=\"close()\" mat-raised-button color=\"warn\">Close</button>-->\r\n\r\n    <button *ngIf=\"forgotPasswordPressed === false\" (click)=\"googleLogin()\" mat-icon-button>\r\n      <img style=\"margin-top: 15px\" src=\"../../../assets/btn_google_signin_dark_normal_web.png\" alt=\"FOO\">\r\n    </button>\r\n    <!--<button fxLayoutAlign=\"start\" (click)=\"openRenewDialog()\" style=\"background-color: white\" mat-raised-button\r\n            *ngIf=\"($requestStatusCode | async) === 423 && pressedLogin === true && forgotPasswordPressed === false\">\r\n      <img src=\"assets/padlock-5-64.png\" width=\"40px\" height=\"40px\" alt=\"\">\r\n      Your account needs to be verified\r\n    </button>-->\r\n\r\n    <!--<mat-dialog-actions>\r\n      <div>\r\n\r\n        &lt;!&ndash;<div class=\"btn-grp1\" fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n\r\n        </div>&ndash;&gt;\r\n        &lt;!&ndash;<div style=\"margin-top: 10px\" class=\"btn2\" fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n          <button fxLayoutAlign=\"start\" (click)=\"openRenewDialog()\" style=\"background-color: white\" mat-raised-button\r\n                  *ngIf=\"($requestStatusCode | async) === 423 && pressedLogin === true && forgotPasswordPressed === false\">\r\n            <img src=\"assets/padlock-5-64.png\" width=\"40px\" height=\"40px\" alt=\"\">\r\n            Your account needs to be verified\r\n          </button>\r\n        </div>\r\n        <button *ngIf=\"forgotPasswordPressed == false\" mat-icon-button (click)=\"forgotPasswordPressed = true\">\r\n          <mat-icon> vpn_key</mat-icon>\r\n          Forgot password?\r\n        </button>&ndash;&gt;\r\n      </div>\r\n    </mat-dialog-actions>-->\r\n    <mat-error *ngIf=\"($requestStatusCode | async) === 401 \">\r\n      <strong>Wrong credentials provided</strong>\r\n    </mat-error>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"footer\" style=\"margin-top: 30px\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <div class=\"forogt-box\" fxFlex=\"80\">\r\n    <button *ngIf=\"forgotPasswordPressed == false\" mat-icon-button (click)=\"forgotPasswordPressed = true;\">\r\n      Forgot password?\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"font-family: 'agave Nerd Font', sans-serif; color: white\">\r\n      <span><strong>SpecShots</strong></span>\r\n    <span class=\"small-txt\"> &#169;2020</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {TagModel} from \"../domain/tagModel/tag-model\";\nimport {distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\";\nimport { Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\nimport {GetZipCodesAndCitiesByRegion} from \"../app-state/actions/address-validation-action\";\nimport {SearchRequestService} from \"../../serviceV2/search.request.service\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressValidationService {\n  private readonly SEARCH_URL: string = environment.apiUrl + \"addresses/validate/\";\n  private readonly COUNTRIES: string = environment.apiUrl + \"addresses/get/all/countries\";\n  private readonly REGIONS: string = environment.apiUrl + \"addresses/regions/\";\n  private readonly ZIPCODES: string =  environment.apiUrl + \"query/searchByZipAndRegion/\";\n  constructor(private  http: HttpClient,\n              private searchReqService: SearchRequestService<ZipCodeAndCity>) { }\n\n  public getCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(this.COUNTRIES);\n  }\n\n  public getRegionsByCountry(countryName: string): Observable<Region[]> {\n    return this.http.get<Region[]>(this.REGIONS + countryName);\n  }\n\n  public getZipCodesAndCitiesByRegion(region: string): Observable<ZipCodeAndCity[]> {\n    return this.http.get<ZipCodeAndCity[]>(this.ZIPCODES + region);\n  }\n\n  public getZipCodesAndCitiesByRegion2(zipcode: Observable<string>, region: string): Observable<ZipCodeAndCity[]> {\n    return this.searchReqService.search(zipcode, this.ZIPCODES + region + \", \");\n  }\n}\n","<div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <span class=\"white-color\" style=\"font-family: 'agave Nerd Font', sans-serif\">\n      <strong>Create a new Account</strong>\n    </span>\n\n  <button (click)=\"closeDialog()\" mat-icon-button color=\"warn\">\n    <mat-icon class=\"white-color\">close</mat-icon>\n  </button>\n</div>\n\n\n<div class=\"logo-container2 shadow\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <img class=\"logo-image\" width=\"40px\" height=\"40px\" style=\"margin-top: 0px\" src=\"assets/Specshots-Logo.png\">\n</div>\n<div style=\"margin-top: 10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <span fxLayout=\"column\" class=\"logo-name\" fxLayoutAlign=\"center center\">\n    <span style=\"font-size: 18px;\">Register to </span>\n    <span><strong>SpecShots</strong></span>\n  </span>\n</div>\n\n<div fxLayoutGap=\"10px\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\"\n                    class=\"registration profile-icon\"\n                    [formGroup]=\"formGroup\">\n  <div fxLayoutGap=\"10px\" class=\"registration-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Firstname</mat-label>\n      <input [formControl]=\"firstNameFormField\" [style.fontSize.px]=\"15\"\n             matInput>\n      <mat-error>Firstname is required</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Lastname</mat-label>\n      <input [style.fontSize.px]=\"15\"\n             matInput [formControl]=\"formGroup.get('lastName')\">\n      <mat-error>Lastname is required</mat-error>\n    </mat-form-field>\n  </div>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input name=\"email\" type=\"email\" ngModel [email]=\"true\"\n             [style.fontSize.px]=\"15\"\n             matInput [formControl]=\"emailFormField\"\n             pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n      <mat-error>Invalid email</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input (ngModelChange)=\"checkPasswords()\"\n             [style.fontSize.px]=\"15\" type=\"password\"\n             matInput [formControl]=\"passwordFormField\">\n      <mat-error>Invalid password</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Confirm password</mat-label>\n      <input (ngModelChange)=\"checkPasswords()\"\n             [style.fontSize.px]=\"15\" type=\"password\"\n             matInput [formControl]=\"confirmPwdFormField\">\n      <mat-error>Invalid password</mat-error>\n    </mat-form-field>\n\n    <button [disabled]=\"!formGroup.valid || invalid\" (click)=\"register()\" mat-raised-button color=\"primary\">Register</button>\n\n    <br>\n    <mat-error style=\"margin-top: 10px\" *ngIf=\"$requestStatus | async as status\">\n      {{status.message}}\n    </mat-error>\n\n\n\n\n  <!--  <div class=\"icon\" >-->\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\n  <!--    -->\n  <!--  </div>-->\n  <!--<mat-grid-list gutterSize=\"10px\" cols=\"2\" rowHeight=\"290px\">\n    <mat-grid-tile>\n      <div  class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Firstname</mat-label>\n          <input [formControl]=\"firstNameFormField\" [style.fontSize.px]=\"15\"\n                 matInput>\n          <mat-error>Firstname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Lastname</mat-label>\n          <input [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"formGroup.get('lastName')\">\n          <mat-error>Lastname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Email</mat-label>\n          <input name=\"email\" type=\"email\" ngModel [email]=\"true\"\n                 [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"emailFormField\"\n                 pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n          <mat-error>Invalid email</mat-error>\n        </mat-form-field>\n        <mat-dialog-actions>\n          <button [disabled]=\"!formGroup.valid || invalid\" (click)=\"register()\" mat-raised-button color=\"primary\">Register</button>\n          <button (click)=\"closeDialog()\" mat-raised-button color=\"warn\">Close</button>\n          <br>\n          <mat-error style=\"margin-top: 10px\" *ngIf=\"$requestStatus | async as status\">\n            {{status.message}}\n          </mat-error>\n        </mat-dialog-actions>\n\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"passwordFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Confirm password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"confirmPwdFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <div class=\"container\">\n\n        </div>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>-->\n</div>\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <span style=\"color: white\">Powered by SpecShots</span>\n    <span fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"white-color\" style=\"font-family: 'agave Nerd Font', sans-serif\">\n      &#169;2020\n    </span>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {BaseUserDetails, UserRegistrationModel} from \"../domain/userModel/user-details.model\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {debounceTime, switchMap} from \"rxjs/operators\";\r\nimport {LoggedInUserModel, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport LoginAction = AuthenticationActions.LoginAction;\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {\r\n  GetZipCodesAndCitiesByRegion,\r\n  GetCountriesAction,\r\n  GetRegionsAction\r\n} from \"../app-state/actions/address-validation-action\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {AddressValidationState} from \"../app-state/states/address.validation.state\";\r\nimport {QueryTagAction} from \"../app-state/actions/query-tag-action\";\r\nimport {AddressValidationService} from \"../service/address-validation.service\";\r\nimport {Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\r\nimport {MatSelectChange} from \"@angular/material/select\";\r\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\r\nimport {ImageModel} from \"../domain/imageModel/image.model\";\r\nimport {SignupState} from \"../app-state/states/signup.state\";\r\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\r\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  public disabled: boolean = true;\r\n  public invalid: boolean = true;\r\n  public formGroup;\r\n  countries$ = new Subject<Country[]>();\r\n  regions$ = new Subject<Region[]>();\r\n  currentCounty;\r\n  color = new FormControl(\"Warn\")\r\n  zipCodeAndCities$ = new Subject<ZipCodeAndCity[]>();\r\n  zipAndCities: ZipCodeAndCity[];\r\n  errorMsg: string = \"Password required\";\r\n\r\n\r\n  @Select(AddressValidationState.countries)\r\n  fetchedCountries$: Observable<Country[]>;\r\n\r\n  @Select(AddressValidationState.regions)\r\n  fetchedRegions$: Observable<Region[]>;\r\n\r\n  @Select(AddressValidationState.zipCodesAndCities)\r\n  fetchedZipcodesAndCities$: Observable<ZipCodeAndCity[]>;\r\n\r\n  @Select(SignupState.registrationModel)\r\n  registrationModel$: Observable<BaseUserDetails>;\r\n\r\n\r\n  @Select(RequestStatusState.getStatus) $requestStatus;\r\n\r\n\r\n  // form fields\r\n  public countryFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public lastNameFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public firstNameFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public cityFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public emailFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public passwordFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public confirmPwdFormField =\r\n    new FormControl('', [Validators.required]);\r\n\r\n  public streetFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public regionFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public zipCodeFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n\r\n  searchTerm$ = new Subject<string>();\r\n\r\n  constructor(private authService: UserAuthenticationService,\r\n              private store: Store,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<SignupComponent>,\r\n              private addressService: AddressValidationService) {\r\n    this.formGroup = this.formBuilder.group({\r\n      firstName: this.firstNameFormField,\r\n      lastName: this.lastNameFormField,\r\n      /*street: this.streetFormField,\r\n      city: this.cityFormField,\r\n      country: this.countryFormField,\r\n      region: this.regionFormField,\r\n      zipcode: this.zipCodeFormField,*/\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField,\r\n      confirmPassword: this.confirmPwdFormField\r\n    })\r\n\r\n    /*this.formGroup.get('zipcode').disable();*/\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n\r\n    this.registrationModel$.subscribe(\r\n      value => {\r\n        if (value.email.length > 1) {\r\n          this.store.dispatch(new AuthenticationActions.LoginAction(\r\n            new UserLoginModel(value.email, value.password)\r\n          )).pipe(switchMap(resp =>\r\n            this.store.dispatch(\r\n              new AuthenticationActions.LoggedUserDetails(\r\n                resp.Authentication.user.userId))\r\n          )).subscribe(value1 => value1)\r\n        }\r\n      }\r\n    )\r\n    /*this.validateCityAndZipFormFields();*/\r\n    this.store.dispatch(new GetCountriesAction())\r\n    /*this.fetchedZipcodesAndCities$\r\n      .subscribe(value => this.zipAndCities = value)*/\r\n  }\r\n\r\n  /*private validateCityAndZipFormFields() {\r\n    this.validateZipCodeFormField();\r\n    this.validateStreetFormField();\r\n  }\r\n\r\n  private validateZipCodeFormField() {\r\n    this.formGroup\r\n      .controls['zipcode']\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (this.formGroup.controls['city'].disabled)\r\n          this.invalid = true;\r\n      })\r\n  }\r\n\r\n  private validateStreetFormField() {\r\n    this.formGroup\r\n      .controls['street']\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (this.formGroup.controls['street'].value.length > 0)\r\n          this.invalid = false;\r\n        else this.invalid = true;\r\n      })\r\n  }*/\r\n\r\n\r\n  closeDialog(): void {\r\n    // this.dialogRef.close(this.formGroup.value);\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectPostalAndSetCity(value: string) {\r\n    this.zipAndCities\r\n      .filter(value1 => value1.zipCode === value)\r\n      .forEach(value1 => this.cityFormField.setValue(value1.city))\r\n    this.streetFormField.enable();\r\n  }\r\n\r\n  register() {\r\n\r\n    const registrationModel = new UserRegistrationModel(\r\n      this.formGroup.controls['firstName'].value,\r\n      this.formGroup.controls['lastName'].value,\r\n      this.formGroup.controls['email'].value,\r\n      this.formGroup.controls['password'].value,\r\n      null, null, null, null\r\n    );\r\n\r\n\r\n\r\n    /*const registrationModel = new UserRegistrationModel(\r\n      this.formGroup.controls['firstName'].value,\r\n      this.formGroup.controls['lastName'].value,\r\n      this.formGroup.controls['email'].value,\r\n      this.formGroup.controls['password'].value,\r\n      this.formGroup.controls['street'].value,\r\n      this.formGroup.controls['region'].value,\r\n      this.formGroup.controls['zipcode'].value,\r\n      this.formGroup.controls['country'].value\r\n    );*/\r\n    this.store\r\n      .dispatch(new AuthenticationActions.SignUpAction(registrationModel))\r\n      .subscribe(value => this.authService.isLoggedIn())\r\n\r\n    /*this.closeDialog();*/\r\n  }\r\n\r\n  /*selectedCountry($event: MatSelectChange) {\r\n    console.log(this.disabled);\r\n    this.disabled = false;\r\n    console.log(this.disabled);\r\n    this.store.dispatch(new GetRegionsAction($event.value))\r\n      .subscribe(value => this.regionFormField.enable());\r\n  }*/\r\n\r\n  selectedRegion($event: MatSelectChange) {\r\n    this.formGroup.get('zipcode').enable();\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        this.store\r\n          .dispatch(\r\n            new GetZipCodesAndCitiesByRegion(\r\n              new BehaviorSubject(value),\r\n              $event.value\r\n            )\r\n          )\r\n      });\r\n  }\r\n\r\n  changeZipCode($event: MatSelectChange) {\r\n  }\r\n\r\n  hasError = (controlName: string, errorName: string) => {\r\n    return this.formGroup.controls['firstName'].hasError(errorName)\r\n  }\r\n\r\n  checkPasswords() {\r\n    const length = this.formGroup.get('password').value.length > 0;\r\n    const confirmPwd = this.formGroup.controls['confirmPassword'].value;\r\n    const pwd = this.formGroup.get('password').value;\r\n\r\n    if (confirmPwd !== pwd && confirmPwd.length > 0 && length)\r\n      this.formGroup.controls['password']\r\n        .setErrors({'incorrect': true});\r\n\r\n    else if (length && confirmPwd.length > 0 && confirmPwd === pwd) {\r\n      this.formGroup.controls['password']\r\n        .setErrors(null);\r\n      this.invalid = false;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\n<div class=\"container\">\n  <div class=\"filler_left\"></div>\n  <div class=\"left\">\n    <div class=\"profile_icon\">\n      <button *ngIf=\"!($profileImg | async)\" disabled mat-icon-button\n              aria-label=\"Example icon button with a home icon\">\n        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>\n      </button>\n      <img class=\"profile-img\" [src]=\"$profileImg | async\" alt=\"\">\n    </div>\n  </div>\n  <div class=\"right\">\n    <div class=\"title\">\n      <div class=\"user-name\">\n        <span *ngIf=\"$name | async\" style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px\">\n        <strong>\n          {{$name | async}}\n        </strong>\n      </span>\n      </div>\n      <br>\n      <div class=\"user-name\">\n        <!--        <p style=\"font-size: 17px\">-->\n        <!--          -->\n        <!--        </p>-->\n        <p style=\"font-size: 17px; line-height: 28px\">\n          Download free, beautiful high-quality photos curated by {{ $name | async }}.\n        </p>\n      </div>\n      <button *ngIf=\"$isOwner | async\" style=\"\" mat-icon-button>\n        <mat-icon>edit</mat-icon>\n        Edit profile\n      </button>\n    </div>\n  </div>\n</div>\n\n<mat-tab-group mat-stretch-tabs class=\"mat-tab-group\">\n  <mat-tab class=\"tab\" label=\"Gallery\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\n      Images\n    </ng-template>\n    <app-image-content [isProfile]=\"true\" [data]=\"$byUserIdData | async\"></app-image-content>\n<!--    <div class=\"container-2\">-->\n<!--      <div *ngFor=\"let item of $byUserIdData | async; index as i;\" class=\"tile\">-->\n<!--        <div class=\"tile-container\">-->\n<!--          <div class=\"img-tile\">-->\n<!--            <img class=\"img\" width=\"500px\" height=\"520px\" [src]=\"item.link\">-->\n<!--          </div>-->\n<!--          <div class=\"details\">-->\n<!--            <div class=\"content\">-->\n<!--              <button class=\"btn\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 70px\">account_circle</mat-icon>-->\n<!--              </button>-->\n<!--              <a mat-button href=\"#\">-->\n<!--                <h1>{{ 'User : @' + item.email.substr(0, item.email.indexOf('@')) }}</h1>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--            <div class=\"content-btn\">-->\n<!--              <a target=\"_self\" [href]=\"downloadLink\" (click)=\"download(item.name, item.userId)\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 60px\">save_alt</mat-icon>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n  </mat-tab>\n  <mat-tab label=\"Likes\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Likes\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"Third\"> Content 3</mat-tab>\n</mat-tab-group>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\nimport {ImagesByUserIDAction} from \"../app-state/actions/image.action\";\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\nimport {UserDetailsState} from \"../app-state/states/User-details.state\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\nimport {LoggedInUserModel} from \"../domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\n\n@Component({\n  selector: 'app-user-gallery',\n  templateUrl: './user-gallery.component.html',\n  styleUrls: ['./user-gallery.component.scss']\n})\nexport class UserGalleryComponent implements OnInit {\n  @Select(ImagesByUserIdState.getData) $byUserIdData;\n  @Select(UserDetailsState.firstLastName) $name;\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n  @Select(UserDetailsState.getState) $state;\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  downloadLink: any;\n  $isOwner = new BehaviorSubject<boolean>(false);\n\n  constructor(private route: ActivatedRoute,\n              private store: Store) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store.dispatch(\n          [\n            new UserDetailsActions.GetUserDetails(userId),\n            new ImagesByUserIDAction(userId)\n          ]\n        )\n        this.$loggedUser.subscribe(user => {\n          if (user !== undefined && user !== null)\n            if (user.userId === userId) {\n              this.$isOwner.next(true);\n            }\n        })\n      })\n\n    // this.$state.subscribe(state => {\n    //   if (userId === state.userId) {\n    //     console.log(\"Super!!!!!!!!!\")\n    //   }\n    // })\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .subscribe(value => {})\n    //\n    // this.$loggedUser.subscribe(user => {\n    //   if (user !== undefined && user !== null)\n    //     if (user.userId === userId) {\n    //       this.$isOwner.next(true);\n    //     }\n    //\n    //\n    // })\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n}\n","export class Base64ToBlobConverter {\r\n  public static dataURItoBlob(dataURI): Blob {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/png' });\r\n    return blob;\r\n  }\r\n}\r\n","import {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\n\r\nexport class ShowEmailWasSentDialog {\r\n  constructor(private dialog: MatDialog, private value: any) {\r\n    console.log(value);\r\n    if (value.status === 200 || value.status === true) {\r\n      this.dialog.open(VerificationDialogComponent, {\r\n        data: {text: 'Email was sent successfully!'}\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {CropAndDownload} from \"../app-state/actions/image.action\";\r\nimport {\r\n  CropAndDownloadStateModel,\r\n  GetBase64ForDownloadCropperState\r\n} from \"../app-state/states/get-base64-for-downloadCropper.state\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport {GetImageByIdState} from \"../app-state/states/get-image-by-id.state\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlobToBase64Pipe {\r\n  constructor(private store: Store) { }\r\n  public getBase64(source: Observable<ArrayBuffer>): Observable<string> {\r\n    return source.pipe(map(byteArray => {\r\n      let blob = new Blob([byteArray], {type: 'image/jpg'});\r\n      saveAs(blob, this.store.selectSnapshot(GetImageByIdState.getImageDetail).name);\r\n      return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel).base64;\r\n    }));\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {UserAuthenticationService} from \"./serviceV2/user-authentication.service\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {RenewExpiredAccountTokenComponent} from \"./public/renew-expired-account-token/renew-expired-account-token.component\";\r\nimport {VerificationDialogComponent} from \"./public/verification-dialog/verification-dialog.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VerifyGuardGuard implements CanActivate {\r\n\r\n  constructor(private authService: UserAuthenticationService,\r\n              private router: Router,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const tokenId = next.params.id;\r\n    if (tokenId !== undefined && tokenId.length > 0) {\r\n      console.log(\"HALLLOO???\");\r\n      return this.authService\r\n        .validateRequestTokenUrl({tokenId: tokenId})\r\n        .pipe(map(value => {\r\n          console.log(\"Ich wars\");\r\n          console.log(value);\r\n          console.log(value.status);\r\n          this.router.navigate(['/welcome']);\r\n          if (value.status === true && value.alreadyProcessed) {\r\n            this.dialog.open(VerificationDialogComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data: {text: 'Account has been verified!'}\r\n            })\r\n          } else {\r\n            console.log(\"FOOOOOOOOOOOOOO\");\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true}, hasBackdrop: true\r\n            })\r\n          }\r\n          /*this.router.navigate(['/welcome']);*/\r\n          return false;\r\n        }));\r\n    }\r\n    /*this.router.navigate(['/welcome']);*/\r\n    return false;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8880/image-app/',\r\n  google_id: '200318745451-u9viua8onpt25sdmknka7i89uhdrknsd.apps.googleusercontent.com',\r\n  galleryAspectRatio: 1.0869, downloadAspectRatio: 1.7910,\r\n  desktopGalleryWidth: 500, desktopGalleryHeight: 460,\r\n  tabletGalleryWidth: 300, tabletGalleryHeight: 300 / 1.0869,\r\n  mobileGalleryWidth: 135, mobileGalleryHeight: 135 / 1.0869,\r\n  desktopDownloadWidth: 1200, desktopDownloadHeight: 670,\r\n  tabletDownloadWidth: 450, tabletDownloadHeight: 450 / 1.0869,\r\n  mobileDownloadWidth: 250, mobileDownloadHeight: 250 / 1.0869\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}