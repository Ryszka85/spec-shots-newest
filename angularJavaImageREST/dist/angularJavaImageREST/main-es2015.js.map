{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/private/add-tags-dialog/add-tags-dialog.component.ts","./src/app/private/add-tags-dialog/add-tags-dialog.component.html","./src/app/private/change-image-details-dialog/change-image-details-dialog.component.ts","./src/app/private/change-image-details-dialog/change-image-details-dialog.component.html","./src/app/private/edit-profile/edit-profile.component.ts","./src/app/private/edit-profile/edit-profile.component.html","./src/app/private/file-upload-wrapper/file-upload-wrapper.component.ts","./src/app/private/file-upload-wrapper/file-upload-wrapper.component.html","./src/app/private/file-upload/file-upload.component.ts","./src/app/private/file-upload/file-upload.component.html","./src/app/private/image-cropper/image-cropper.component.ts","./src/app/private/image-cropper/image-cropper.component.html","./src/app/private/upload-image-dialog/upload-image-dialog.component.ts","./src/app/private/upload-image-dialog/upload-image-dialog.component.html","./src/app/public/bootstrap-playground/bootstrap-playground.component.ts","./src/app/public/bootstrap-playground/bootstrap-playground.component.html","./src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.ts","./src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.html","./src/app/public/download-cropper/download-cropper.component.ts","./src/app/public/download-cropper/download-cropper.component.html","./src/app/public/image-details/image-details.component.ts","./src/app/public/image-details/image-details.component.html","./src/app/public/not-found-page/not-found-page.component.ts","./src/app/public/not-found-page/not-found-page.component.html","./src/app/public/profile/profile.component.ts","./src/app/public/profile/profile.component.html","./src/app/public/search-toolbar/search.toolbar.component.ts","./src/app/public/search-toolbar/search.toolbar.component.html","./src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.ts","./src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.html","./src/app/public/startup/startup.component.ts","./src/app/public/startup/startup.component.html","./src/app/public/welcome/image-by-tag.component.ts","./src/app/public/welcome/image-by-tag.component.html","./src/app/security/auth-security.guard.ts","./src/app/security/cookie-auth-interceptor.service.ts","./src/app/serviceV2/crop-and-download-resolver.service.ts","./src/app/serviceV2/delete-image.service.ts","./src/app/serviceV2/image-details-resolver.service.ts","./src/app/serviceV2/image-download.service.ts","./src/app/serviceV2/image-request.service.ts","./src/app/serviceV2/image-upload.service.ts","./src/app/serviceV2/search-by-users.service.ts","./src/app/serviceV2/search.request.service.ts","./src/app/serviceV2/tag-request.service.ts","./src/app/serviceV2/update-image-details.service.ts","./src/app/serviceV2/update-user.service.ts","./src/app/serviceV2/user-authentication.service.ts","./src/app/shared/app-state/actions/address-validation-action.ts","./src/app/shared/app-state/actions/authentication-action.ts","./src/app/shared/app-state/actions/image.action.ts","./src/app/shared/app-state/actions/query-tag-action.ts","./src/app/shared/app-state/actions/request-message.action.ts","./src/app/shared/app-state/actions/update-user-profile.action.ts","./src/app/shared/app-state/actions/user-details.action.ts","./src/app/shared/app-state/states/User-details.state.ts","./src/app/shared/app-state/states/address.validation.state.ts","./src/app/shared/app-state/states/crop-image.state.ts","./src/app/shared/app-state/states/delete-image.state.ts","./src/app/shared/app-state/states/download-details.state.ts","./src/app/shared/app-state/states/get-base64-for-downloadCropper.state.ts","./src/app/shared/app-state/states/get-image-by-id.state.ts","./src/app/shared/app-state/states/images-by-tag-state.ts","./src/app/shared/app-state/states/images-by-user-id.state.ts","./src/app/shared/app-state/states/logged-user-details.state.ts","./src/app/shared/app-state/states/login.state.model.ts","./src/app/shared/app-state/states/prepare-cropped-for-download.state.ts","./src/app/shared/app-state/states/related-images.state.ts","./src/app/shared/app-state/states/request-status.state.ts","./src/app/shared/app-state/states/search-by-tag.state.ts","./src/app/shared/app-state/states/search-by-users.state.ts","./src/app/shared/app-state/states/select-image.state.ts","./src/app/shared/app-state/states/signup.state.ts","./src/app/shared/app-state/states/update-user-profile-image.state.ts","./src/app/shared/app-state/states/upload-image.state.ts","./src/app/shared/dialog-wrapper/login-dialog-wrapper.component.ts","./src/app/shared/dialog-wrapper/login-dialog-wrapper.component.html","./src/app/shared/domain/address-model/user-address-model.ts","./src/app/shared/domain/imageModel/ImagesByTagNameQuery.ts","./src/app/shared/domain/userModel/UserLoginModel.ts","./src/app/shared/domain/userModel/user-details.model.ts","./src/app/shared/image-content/image-content.component.ts","./src/app/shared/image-content/image-content.component.html","./src/app/shared/image-detail-view/image-detail-view.component.ts","./src/app/shared/image-detail-view/image-detail-view.component.html","./src/app/shared/image-row-mapper.ts","./src/app/shared/login/login.component.ts","./src/app/shared/login/login.component.html","./src/app/shared/service/address-validation.service.ts","./src/app/shared/signup/signup.component.ts","./src/app/shared/signup/signup.component.html","./src/app/shared/user-gallery/user-gallery.component.ts","./src/app/shared/user-gallery/user-gallery.component.html","./src/app/shared/util/Base64ToBlobConverter.ts","./src/app/shared/util/blob-to-base64-pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SignupComponent} from \"./shared/signup/signup.component\";\nimport {ProfileComponent} from \"./public/profile/profile.component\";\nimport {ImageByTagComponent} from \"./public/welcome/image-by-tag.component\";\nimport {AuthSecurityGuard} from \"./security/auth-security.guard\";\nimport {LoginDialogWrapperComponent} from \"./shared/dialog-wrapper/login-dialog-wrapper.component\";\nimport {FileUploadComponent} from \"./private/file-upload/file-upload.component\";\nimport {FileUploadWrapperComponent} from \"./private/file-upload-wrapper/file-upload-wrapper.component\";\nimport {UserGalleryComponent} from \"./shared/user-gallery/user-gallery.component\";\nimport {EditProfileComponent} from \"./private/edit-profile/edit-profile.component\";\nimport {ImageDetailsComponent} from \"./public/image-details/image-details.component\";\nimport {ImageDetailsResolverService} from \"./serviceV2/image-details-resolver.service\";\nimport {ProfileResolverService} from \"./public/profile/profile-resolver.service\";\nimport {DownloadCropperComponent} from \"./public/download-cropper/download-cropper.component\";\nimport {CropAndDownloadResolverService} from \"./serviceV2/crop-and-download-resolver.service\";\nimport {StartupComponent} from \"./public/startup/startup.component\";\nimport {NotFoundPageComponent} from \"./public/not-found-page/not-found-page.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'welcome',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginDialogWrapperComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n  {\n    path: 'upload',\n    component: FileUploadWrapperComponent,\n    canActivate: [AuthSecurityGuard]\n  },\n  {\n    path: 'welcome',\n    component: StartupComponent\n  },\n  {\n    path: 'image-by-tags',\n    component: ImageByTagComponent\n  },\n  {\n    path: 'gallery',\n    component: UserGalleryComponent\n  },\n  {\n    path: 'crop-download',\n    component: DownloadCropperComponent,\n    resolve : { image: CropAndDownloadResolverService }\n  },\n  {\n    path: 'image',\n    component: ImageDetailsComponent,\n    resolve : { image: ImageDetailsResolverService }\n  },\n  {\n    path: 'edit-profile',\n    component: EditProfileComponent,\n    canActivate: [AuthSecurityGuard]\n  },\n  {\n    path: 'not-found',\n    component: NotFoundPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'angularJavaImageREST';\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0)\n    });\n  }\n}\n","\n<!--<app-welcome></app-welcome>-->\n\n<!--<app-signup></app-signup>-->\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {CdkScrollableModule, ScrollingModule} from '@angular/cdk/scrolling';\nimport { SearchToolbarComponent } from './public/search-toolbar/search.toolbar.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { ImageByTagComponent } from './public/welcome/image-by-tag.component';\nimport {NgxsModule} from \"@ngxs/store\";\nimport {NgxsLoggerPluginModule} from \"@ngxs/logger-plugin\";\nimport {ImagesByTagState} from \"./shared/app-state/states/images-by-tag-state\";\nimport {SearchByTagState} from \"./shared/app-state/states/search-by-tag.state\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport { ImageContentComponent } from './shared/image-content/image-content.component';\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport {CookieAuthInterceptorService} from \"./security/cookie-auth-interceptor.service\";\nimport {LoginStateModel} from \"./shared/app-state/states/login.state.model\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport { LoginComponent } from './shared/login/login.component';\nimport {AddressValidationState} from \"./shared/app-state/states/address.validation.state\";\nimport {MatSelectModule} from '@angular/material/select';\nimport {SignupState} from \"./shared/app-state/states/signup.state\";\nimport { ProfileComponent } from './public/profile/profile.component';\nimport { LoginDialogWrapperComponent } from './shared/dialog-wrapper/login-dialog-wrapper.component';\nimport {NgxsRouterPluginModule} from \"@ngxs/router-plugin\";\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {UserDetailsState} from \"./shared/app-state/states/User-details.state\";\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ImagesByUserIdState} from \"./shared/app-state/states/images-by-user-id.state\";\nimport { FileUploadComponent } from './private/file-upload/file-upload.component';\nimport {NgxDropzoneModule} from \"ngx-dropzone\";\nimport { FileUploadWrapperComponent } from './private/file-upload-wrapper/file-upload-wrapper.component';\nimport {UploadImageState} from \"./shared/app-state/states/upload-image.state\";\nimport { UserGalleryComponent } from './shared/user-gallery/user-gallery.component';\nimport { ImageDetailViewComponent } from './shared/image-detail-view/image-detail-view.component';\nimport {SelectImageState} from \"./shared/app-state/states/select-image.state\";\nimport { EditProfileComponent } from './private/edit-profile/edit-profile.component';\nimport {AuthenticationActions} from \"./shared/app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {LoggedUserDetailsState} from \"./shared/app-state/states/logged-user-details.state\";\nimport { AddTagsDialogComponent } from './private/add-tags-dialog/add-tags-dialog.component';\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport {UpdateUserProfileImageState} from \"./shared/app-state/states/update-user-profile-image.state\";\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider,\n  AmazonLoginProvider,\n} from 'angularx-social-login';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\nimport {MatRadioModule} from '@angular/material/radio';\nimport {environment} from \"../environments/environment\";\nimport { ChangeImageDetailsDialogComponent } from './private/change-image-details-dialog/change-image-details-dialog.component';\nimport {FileSaverModule} from \"ngx-filesaver\";\nimport {DeleteImage, GetRelatedImagesByTagIDs} from \"./shared/app-state/actions/image.action\";\nimport {DeleteImageState} from \"./shared/app-state/states/delete-image.state\";\nimport { ImageCropperComponent } from './private/image-cropper/image-cropper.component';\nimport {CropImageState} from \"./shared/app-state/states/crop-image.state\";\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ImageDetailsComponent } from './public/image-details/image-details.component';\nimport {DownloadDetailsState} from \"./shared/app-state/states/download-details.state\";\nimport {GetImageByIdState} from \"./shared/app-state/states/get-image-by-id.state\";\nimport {RelatedImagesState} from \"./shared/app-state/states/related-images.state\";\nimport {SearchByUsersState} from \"./shared/app-state/states/search-by-users.state\";\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { UploadImageDialogComponent } from './private/upload-image-dialog/upload-image-dialog.component';\nimport { DownloadCropperComponent } from './public/download-cropper/download-cropper.component';\nimport {GetBase64ForDownloadCropperState} from \"./shared/app-state/states/get-base64-for-downloadCropper.state\";\nimport {PrepareCroppedForDownloadState} from \"./shared/app-state/states/prepare-cropped-for-download.state\";\nimport { DownloadCroppedImageDialogComponent } from './public/download-cropped-image-dialog/download-cropped-image-dialog.component';\nimport { StartupComponent } from './public/startup/startup.component';\nimport { SetResolutionDownloadDialogComponent } from './public/set-resolution-download-dialog/set-resolution-download-dialog.component';\nimport {RequestStatusState} from \"./shared/app-state/states/request-status.state\";\nimport { NotFoundPageComponent } from './public/not-found-page/not-found-page.component';\nimport { BootstrapPlaygroundComponent } from './public/bootstrap-playground/bootstrap-playground.component';\nimport {FlexModule} from \"@angular/flex-layout\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchToolbarComponent,\n    ImageByTagComponent,\n    ImageContentComponent,\n    SignupComponent,\n    LoginComponent,\n    ProfileComponent,\n    LoginDialogWrapperComponent,\n    FileUploadComponent,\n    FileUploadWrapperComponent,\n    UserGalleryComponent,\n    ImageDetailViewComponent,\n    EditProfileComponent,\n    AddTagsDialogComponent,\n    ChangeImageDetailsDialogComponent,\n    ImageCropperComponent,\n    ImageDetailsComponent,\n    UploadImageDialogComponent,\n    DownloadCropperComponent,\n    DownloadCroppedImageDialogComponent,\n    StartupComponent,\n    SetResolutionDownloadDialogComponent,\n    NotFoundPageComponent,\n    BootstrapPlaygroundComponent\n  ],\n    imports: [\n        BrowserModule,\n        FileSaverModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatExpansionModule,\n        HammerModule,\n        ImageCropperModule,\n        MatSlideToggleModule,\n        MatTooltipModule,\n        MatRadioModule,\n        MatChipsModule,\n        MatSnackBarModule,\n        ReactiveFormsModule,\n        MatStepperModule,\n        MatCardModule,\n        MatTabsModule,\n        VirtualScrollerModule,\n        MatMenuModule,\n        MatSelectModule,\n        MatNativeDateModule,\n        MatDialogModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        ScrollingModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatGridListModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDividerModule,\n        NgxDropzoneModule,\n        FormsModule,\n        HttpClientModule,\n        SocialLoginModule,\n        NgxsModule.forRoot([\n            ImagesByTagState,\n            SearchByTagState,\n            LoginStateModel,\n            AddressValidationState,\n            RelatedImagesState,\n            GetImageByIdState,\n            SignupState,\n            UserDetailsState,\n            DownloadDetailsState,\n            SearchByUsersState,\n            ImagesByUserIdState,\n            UploadImageState,\n            SelectImageState,\n            LoggedUserDetailsState,\n            UpdateUserProfileImageState,\n            DeleteImageState,\n            CropImageState,\n            GetBase64ForDownloadCropperState,\n            PrepareCroppedForDownloadState,\n            RequestStatusState\n        ]),\n        NgxsLoggerPluginModule.forRoot(),\n        NgxsReduxDevtoolsPluginModule.forRoot(),\n        NgxsRouterPluginModule.forRoot(),\n        MatDatepickerModule,\n        MatChipsModule,\n        FlexModule\n    ],\n  exports: [\n    MatAutocompleteModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CookieAuthInterceptorService,\n      multi: true\n    },\n    {\n      provide: LocationStrategy, useClass: HashLocationStrategy\n    },\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              environment.google_id\n            ),\n          },\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {debounceTime, filter, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport {FormControl} from \"@angular/forms\";\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\n\n@Component({\n  selector: 'app-add-tags-dialog',\n  templateUrl: './add-tags-dialog.component.html',\n  styleUrls: ['./add-tags-dialog.component.scss']\n})\nexport class AddTagsDialogComponent implements OnInit {\n  searchTerm$ = new Subject<string>();\n  tagList: TagModel[];\n  addChip: TagModel[] = [];\n\n  @Select(SearchByTagState) tags$: Observable<TagQueryList>;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  selectedImage: string;\n\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private store: Store,\n              private imageService: ImageRequestService,\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\n              private dialogRef: MatDialogRef<AddTagsDialogComponent>) {\n  }\n\n  ngOnInit(): void {\n\n    this.searchTerm$\n      .pipe(debounceTime(1000))\n      .subscribe(value => {\n        console.log(value)\n        this.store.dispatch(\n          new QueryTagAction(new BehaviorSubject(value))\n        )\n      });\n    this.tags$.subscribe(value => this.tagList = value.result)\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n  }\n\n  search(value: string) {\n\n  }\n\n  remove(tag: TagModel) {\n    const index = this.addChip\n      .findIndex(tagModel => tagModel.tag === tag.tag);\n    if (index >= 0)\n      this.addChip.splice(index, 1);\n\n  }\n\n  add($event: MatChipInputEvent) {\n    const input = $event.input;\n    const value = $event.value;\n    if ((value || '').trim()) {\n      const selectedTag = this.store\n        .selectSnapshot(SearchByTagState.getFetchedTagList)\n        .find(tag => tag.tag === value);\n      if (selectedTag) this.addChip.push(selectedTag)\n    }\n    if (input) {\n      input.value = '';\n    }\n    this.tagCtrl.setValue(null)\n    // this.tagList.push(value);\n  }\n\n  selected($event: MatAutocompleteSelectedEvent): void {\n    const selectedTag = this.store\n      .selectSnapshot(SearchByTagState.getFetchedTagList)\n      .find(tag => tag.tag === $event.option.viewValue);\n    if (selectedTag) this.addChip.push(selectedTag)\n    this.tagInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n    console.log(\"SEAS?\");\n  }\n\n  saveTags(): void {\n    const selectedImage: string = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n    const userId =\n      this.store.selectSnapshot(LoginStateModel.loggedUserId);\n    this.imageService.setTagToImage({\n        userId: userId,\n        imageId: selectedImage,\n        tags: this.addChip\n      }\n    ).subscribe(value => {\n      // this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(userId));\n      this.dialogRef.close();\n      // this.store\n      //   .dispatch(new ImagesByUserIDAction(userId))\n      //   .subscribe(value1 => {\n      //     this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      //     this.dialogRef.close();\n      //   })\n    })\n    this.addChip = [];\n    this.tagCtrl.setValue(null);\n  }\n}\n","<div class=\"container\">\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\n    Add tags\n  </h2>\n  <mat-divider></mat-divider>\n  <br>\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\n    Image : <strong>{{data.name}}</strong>\n  </h4>\n  <img width=\"380px\" height=\"400px\"\n       class=\"img-content\"\n       [src]=\"data.link\" alt=\"\">\n  <div class=\"tag-input\">\n    <mat-form-field style=\"width: 100%\">\n      <mat-chip-list #chipList aria-label=\"Tag selection\">\n        <mat-chip\n          *ngFor=\"let tag of addChip\"\n          [selectable]=\"selectable\"\n          [removable]=\"removable\"\n          (removed)=\"remove(tag)\">\n          {{tag.tag}}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip>\n        <input matInput\n               (keyup.enter)=\"search(element.value)\"\n               id=\"search-input\" type=\"text\" #element\n               (keyup)=\"searchTerm$.next($event.target.value)\"\n               #tagInput\n               placeholder=\"New tag\"\n               [formControl]=\"tagCtrl\"\n               [matAutocomplete]=\"auto\"\n               [matChipInputFor]=\"chipList\"\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n               (matChipInputTokenEnd)=\"add($event)\">\n      </mat-chip-list>\n      <mat-autocomplete #auto=\"matAutocomplete\"\n                        (optionSelected)=\"selected($event)\">\n        <mat-option *ngFor=\"let option of tagList\"\n                    [value]=\"option.tag\">\n          {{option.tag}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n<button (click)=\"saveTags()\" mat-raised-button>Save</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {MatRadioChange} from \"@angular/material/radio\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\nimport {DeleteImage, SelectImage} from \"../../shared/app-state/actions/image.action\";\nimport {FocusMonitor} from \"@angular/cdk/a11y\";\nimport {Subject} from \"rxjs\";\nimport {UpdateImageDetailsService} from \"../../serviceV2/update-image-details.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DeleteImageService} from \"../../serviceV2/delete-image.service\";\n\n@Component({\n  selector: 'app-change-image-details-dialog',\n  templateUrl: './change-image-details-dialog.component.html',\n  styleUrls: ['./change-image-details-dialog.component.scss']\n})\nexport class ChangeImageDetailsDialogComponent implements OnInit {\n  urlReference = new FormControl('');\n  isPublic = new FormControl(false);\n  @Select(SelectImageState.getSelectedImage) $selectedImage;\n  @Select(SelectImageState.getIsPublic) $isPublic;\n  public formGroup;\n  public selectedImage: ImageModel;\n  public $detailsChanged = new Subject<boolean>();\n  public tempPublic: boolean;\n\n\n  constructor(private store: Store,\n              private imageService: ImageRequestService,\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\n              private formBuilder: FormBuilder,\n              private snackBar: MatSnackBar,\n              private dialogRef: MatDialogRef<ChangeImageDetailsDialogComponent>,\n              private updateImgService: UpdateImageDetailsService,\n              private deleteImageService: DeleteImageService) {\n  }\n\n  ngOnInit(): void {\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImage);\n    this.urlReference = new FormControl(this.selectedImage.linkReference === 'null' ?\n      \"\" : this.selectedImage.linkReference);\n    this.$selectedImage.subscribe(val => console.log(val.public))\n    this.isPublic = new FormControl(this.selectedImage.isPublic);\n    this.formGroup = this.formBuilder\n      .group({urlReference: this.urlReference})\n    // this.urlReference.registerOnChange(foo => this.$detailsChanged.next(true));\n    // this.isPublic.registerOnChange(foo => this.$detailsChanged.next(true));\n    this.tempPublic = this.selectedImage.isPublic;\n  }\n\n  public urlReferenceValidator(): void {\n    const value = this.formGroup.get('urlReference').value;\n    console.log(value);\n    const regExp = new RegExp(\"[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}\");\n    if (regExp.test(value) || value.length === 0) {\n      this.$detailsChanged.next(this.selectedImage.linkReference !== value)\n      this.formGroup.controls['urlReference']\n        .setErrors(null)\n    } else {\n      this.formGroup.controls['urlReference']\n        .setErrors({'error': true})\n    }\n  }\n\n  public changeStuff(mrChange: MatRadioChange): void {\n    console.log();\n    console.log(this.selectedImage.isPublic);\n\n    console.log(this.tempPublic);\n    if (this.tempPublic !== this.store.selectSnapshot(SelectImageState.getSelectedImage).isPublic)\n      this.$detailsChanged.next(true);\n    else this.$detailsChanged.next(false);\n\n    // if ((mrChange.value === '1') !==\n    //   this.store.selectSnapshot(SelectImageState.getSelectedImage).isPublic) {\n    //   console.log(\" mr. change value  \" + mrChange.value === '1');\n    //   this.tempPublic = mrChange.value === '1';\n    //   this.$detailsChanged.next(true);\n    // } else this.$detailsChanged.next(false);\n    // this.isPublic = mrChange.value === '1';\n  }\n\n  changeDetails(img: ImageModel): void {\n    console.log(this.selectedImage);\n  }\n\n  saveChanges(): void {\n    this.selectedImage.isPublic = this.tempPublic;\n    this.selectedImage.linkReference =\n      this.urlReference.value.length == 0 ? null : this.urlReference.value;\n    console.log(this.tempPublic);\n    this.updateImgService\n      .changeImageDetails(this.selectedImage)\n      .subscribe(value => {\n        if (value.status === 200) {\n          this.snackBar.open(\n            \"Image details update was successful.\",\n            \"Details updated\",\n            {\n              duration: 3000,\n              horizontalPosition: \"center\",\n              verticalPosition: \"top\"\n            }\n          );\n          this.$detailsChanged.next(false);\n        }\n      })\n\n    console.log(this.selectedImage)\n  }\n\n  public deleteImage(img: ImageModel): void {\n    console.log(img);\n    this.store\n      .dispatch(new DeleteImage(img))\n      .subscribe(value => console.log(value));\n\n  }\n}\n","<div class=\"container\" *ngIf=\"$selectedImage | async as img\">\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\n    Change image details\n  </h2>\n  <mat-divider></mat-divider>\n  <br>\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\n    Image : <strong>{{data.name}}</strong>\n  </h4>\n\n  <div id=\"access-type\">\n<!--    <p><strong>Choose Access type :</strong></p>-->\n    <a matTooltip=\"When you change to private your images can not be viewed by the community\"\n       matTooltipPosition=\"below\"\n       style=\"color: black; margin-right: 15px; margin-bottom: 5px\"\n       disabled disableRipple mat-icon-button>\n      <mat-icon>lock</mat-icon>\n      <span>Private</span>\n    </a>\n    <mat-slide-toggle (change)=\"changeStuff($event)\"\n                      style=\"margin-left: 20px\" [(ngModel)]=\"tempPublic\"></mat-slide-toggle>\n    <a matTooltip=\"When you change to public your images can be viewed by the community\"\n       matTooltipPosition=\"below\"\n       style=\"color: black; margin-left: 10px; margin-bottom: 3px\"\n       disabled disableRipple mat-icon-button>\n      <mat-icon>public</mat-icon>\n      <span>Public</span>\n    </a>\n  </div>\n\n  <div *ngIf=\"$selectedImage | async as img\" class=\"image-details\">\n    <img width=\"380px\" height=\"400px\"\n         class=\"img-content\"\n         [src]=\"img.link\" alt=\"\">\n\n    <div class=\"image-detail\">\n      <a style=\"color: black\" disabled disableRipple mat-icon-button>\n        <mat-icon>cloud_download</mat-icon>\n        <span>Downloads</span>\n      </a>\n      <h2 id=\"downloaded\"><strong>{{img.downloaded}}</strong></h2>\n      <h5 id=\"testus\">+ {{img.downloaded}} downloads since last month</h5>\n      <mat-divider></mat-divider>\n\n      <div class=\"image-views\">\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\n          <mat-icon>visibility</mat-icon>\n          <span>Views</span>\n        </a>\n        <h2 id=\"views\"><strong>{{img.downloaded}}</strong></h2>\n        <h5>+ {{img.downloaded}} view since last month</h5>\n        <mat-divider></mat-divider>\n      </div>\n      <div class=\"image-likes\">\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\n          <mat-icon>thumb_up</mat-icon>\n          <span>Likes</span>\n        </a>\n        <h2 id=\"likes\"><strong>{{img.liked}}</strong></h2>\n        <h5>+ {{img.liked}} view since last month</h5>\n      </div>\n    </div>\n  </div>\n\n  <br>\n\n  <a style=\"color: black\" mat-icon-button disabled class=\"link_ref_label\">\n    <mat-icon>public</mat-icon>\n    URL link reference :\n  </a>\n  <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\n    <mat-label>URL to image</mat-label>\n    <input matInput (ngModelChange)=\"urlReferenceValidator()\"\n           [formControl]=\"urlReference\"\n           placeholder=\"http:\\\\www.xxx.com\">\n    <mat-error>Invalid url</mat-error>\n  </mat-form-field>\n\n  <button style=\"margin-right: 5px\" color=\"primary\" *ngIf=\"$detailsChanged | async\" mat-raised-button (click)=\"saveChanges()\">Save changes</button>\n  <button color=\"warn\" mat-raised-button (click)=\"deleteImage(img)\">Delete image</button>\n\n\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {share} from \"rxjs/operators\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {Form, FormBuilder, FormControl} from \"@angular/forms\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n  @Select(UserDetailsState.userDetails) $userDetails;\n  @Select(LoginStateModel.profileImg) $profile;\n  @Select(LoginStateModel.loggedUserId) $userId;\n  firstNameControl = new FormControl();\n  lastNameControl = new FormControl();\n  emailControl = new FormControl();\n  userNameControl = new FormControl();\n  formGroup;\n\n  constructor(private store: Store,\n              private service: UserAuthenticationService,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    const loggedUser : BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n\n    const userDetails: BaseUserDetails =\n       this.store.selectSnapshot(LoginStateModel.loggedInUser);\n\n    if (userDetails.userId === undefined) {\n      this.store.dispatch(\n        new AuthenticationActions.LoggedUserDetails(loggedUser.userId))\n        .subscribe(userDetailsResp => {\n          this.initFormGroup(userDetailsResp);\n        })\n    } else {\n      this.firstNameControl = new FormControl(userDetails.firstName);\n      this.lastNameControl = new FormControl(userDetails.lastName);\n      this.emailControl = new FormControl(userDetails.email);\n      this.userNameControl = new FormControl(userDetails.username);\n      this.formGroup = this.formBuilder.group({\n        firstName: this.firstNameControl,\n        lastName: this.lastNameControl,\n        email: this.emailControl,\n        userName: this.userNameControl\n      })\n    }\n\n\n\n\n    this.firstNameControl.valueChanges.subscribe(value => console.log(value))\n\n    // this.formGroup = this.formBuilder.group({\n    //   firstName: null\n    // })\n    // if (loggedUser !== undefined && loggedUser !== null) {\n    //   this.store.dispatch(\n    //     new UserDetailsActions\n    //       .GetUserDetails(loggedUser.userId)\n    //   )\n    // } else this.store.dispatch(new Navigate(['/login']))\n\n\n\n  }\n\n  private initFormGroup(userDetailsResp) {\n    console.log(userDetailsResp.LoggedDetails);\n    this.firstNameControl = new FormControl(userDetailsResp.LoggedDetails.firstName);\n    this.lastNameControl = new FormControl(userDetailsResp.LoggedDetails.lastName);\n    this.emailControl = new FormControl(userDetailsResp.LoggedDetails.email);\n    this.userNameControl = new FormControl(userDetailsResp.LoggedDetails.userName);\n    this.formGroup = this.formBuilder.group({\n      firstName: this.firstNameControl,\n      lastName: this.lastNameControl,\n      email: this.emailControl,\n      userName: this.userNameControl\n    })\n  }\n\n  navigateToUpload() {\n    this.store.dispatch(new Navigate(['upload']))\n  }\n\n  handleFileInput(files: FileList) {\n    const loggedUser: BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    const formData = new FormData();\n    formData.append('file', files[0]);\n    this.store.dispatch(new UserDetailsActions\n      .UploadUserProfile(loggedUser.userId, formData));\n  }\n}\n","<app-search-toolbar></app-search-toolbar>\n<div class=\"container\">\n  <div class=\"top\">\n    <div class=\"top_left_filler\"></div>\n    <div class=\"profile-icon\">\n      <mat-icon *ngIf=\"!($profile | async)\" id=\"icon\" style=\"font-size: 200px; color: grey\">account_circle</mat-icon>\n      <img *ngIf=\"$profile | async\" class=\"profile-img\" [src]=\"$profile | async\">\n      <label id=\"select-profile\">\n        <input (change)=\"handleFileInput($event.target.files)\" style=\"display: none\" type=\"file\">\n        <a>Change profile image</a>\n      </label>\n    </div>\n    <div class=\"form\">\n      <form [formGroup]=\"formGroup\" class=\"example-form\">\n        <mat-form-field appearance=\"fill\" id=\"first\" class=\"example-full-width\">\n          <mat-label>Firstname</mat-label>\n          <input [formControl]=\"firstNameControl\"\n                 matInput placeholder=\"John\">\n          <mat-icon matSuffix>edit</mat-icon>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n          <mat-label>Lastname</mat-label>\n          <input readonly [formControl]=\"lastNameControl\" matInput placeholder=\"Doe\">\n          <mat-icon matSuffix>edit</mat-icon>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n          <mat-label>Email</mat-label>\n          <input readonly [formControl]=\"emailControl\" matInput placeholder=\"doe@gmail.com\">\n          <mat-icon matSuffix>edit</mat-icon>\n        </mat-form-field>\n      </form>\n  </div>\n  </div>\n  <div class=\"bottom\">\n    <div class=\"form-2\">\n      <mat-form-field id=\"userName\" appearance=\"fill\" class=\"example-full-width\">\n        <mat-label>Username</mat-label>\n        <input readonly [formControl]=\"userNameControl\" matInput placeholder=\"johnDoe\">\n        <mat-icon matSuffix>edit</mat-icon>\n      </mat-form-field>\n    </div>\n    <div class=\"actions\">\n      <div class=\"change-pswd\">\n        <button mat-raised-button>Change password</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {LoginComponent} from \"../../shared/login/login.component\";\nimport {FileUploadComponent} from \"../file-upload/file-upload.component\";\nimport {Location} from \"@angular/common\";\nimport {Store} from \"@ngxs/store\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {UploadImageDialogComponent} from \"../upload-image-dialog/upload-image-dialog.component\";\n\n@Component({\n  selector: 'app-file-upload-wrapper',\n  templateUrl: './file-upload-wrapper.component.html',\n  styleUrls: ['./file-upload-wrapper.component.scss']\n})\nexport class FileUploadWrapperComponent implements OnInit {\n\n\n  constructor(private dialog: MatDialog,\n              private route: ActivatedRoute,\n              private store: Store) { }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store.dispatch(new LoggedUserDetails(userId))\n        const ref = new MatDialogConfig();\n        // this.dialog.open(UploadImageDialogComponent,\n        //   {\n        //     width: '900px',\n        //     height: '750px',\n        //     disableClose: true,\n        //     autoFocus: false,\n        //     data: userId\n        //   });\n        this.dialog.open(FileUploadComponent,\n          {\n            width: '1300px',\n            height: '950px',\n            disableClose: true,\n            autoFocus: false,\n            data: userId\n          });\n      });\n  }\n}\n","<app-search-toolbar></app-search-toolbar>\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\nimport {NgxDropzoneChangeEvent} from \"ngx-dropzone\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {CropDownloadViewImage, CropGalleryViewImage, UploadImage} from \"../../shared/app-state/actions/image.action\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {switchMap, tap} from \"rxjs/operators\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {Location} from '@angular/common';\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {FILE} from \"dns\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatRadioChange} from \"@angular/material/radio\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../../environments/environment\";\nimport {UploadImageModel} from \"../../shared/domain/imageModel/upload-image.model\";\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\nimport {ImageCropperComponent} from \"../image-cropper/image-cropper.component\";\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\nimport {Base64ToBlobConverter} from \"../../shared/util/Base64ToBlobConverter\";\nimport {Subject} from \"rxjs\";\nimport {ImageUploadService} from \"../../serviceV2/image-upload.service\";\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  isLinear = true;\n  uploadSuccess: boolean = false;\n  files: File[] = [];\n  spinner = new Subject<boolean>();\n  isValidating: boolean = false;\n  imageChangedEvent: any;\n  croppedGalleryImage: any;\n  croppedDownloadViewImage: any;\n  showCropper = false;\n  foo;\n  @Output()\n  change: EventEmitter<MatRadioChange>\n  public formGroup;\n  public isPublic: boolean = true;\n  fooControl = new FormControl(false);\n  public imageUrlReference = new FormControl('');\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  @Select(CropImageState.getData) $imageData;\n  @Select(CropImageState.getCroppedDownloadImage) $croppedDownloadViewImage;\n  isValidToUpload: boolean = false;\n  canvasRotation: any;\n  public displayCroppedImage: boolean = false;\n\n  constructor(private store: Store,\n              private dialogRef: MatDialogRef<FileUploadComponent>,\n              private router: Router,\n              private location: Location,\n              private snackBar: MatSnackBar,\n              private dialog: MatDialog,\n              @Inject(MAT_DIALOG_DATA) public userId: string,\n              private formBuilder: FormBuilder,\n              private http: HttpClient,\n              private dialogRef2: MatDialogRef<ImageCropperComponent>,\n              private  uploadService: ImageUploadService) {\n    this.formGroup = this.formBuilder\n      .group({url: this.imageUrlReference})\n    this.foo = this.formBuilder\n      .group({isPublic: this.fooControl})\n\n    this.firstFormGroup = this.formBuilder.group({\n      uploadCtr: ['', Validators.required]\n    })\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  public changeStuff(mrChange: MatRadioChange): void {\n    console.log(mrChange.value);\n    this.isPublic = mrChange.value === '1';\n  }\n\n  public validate(value: string): boolean {\n    const regExp = new RegExp(\"[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}\");\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n  }\n\n  public urlReferenceValidator(): void {\n    const value = this.formGroup.get('url').value;\n    const regExp = new RegExp(\"[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}\");\n    if (regExp.test(value)) {\n      this.formGroup.controls['url']\n        .setErrors(null)\n    } else {\n      this.formGroup.controls['url']\n        .setErrors({'error': true})\n    }\n  }\n\n  onSelect($event: NgxDropzoneChangeEvent): void {\n    this.isValidating = true;\n    const typeIndex = $event.addedFiles[0].name.lastIndexOf('.');\n    const type = $event.addedFiles[0].name.substr(typeIndex + 1);\n    if ((type === 'jpg' || type === 'png') && $event.addedFiles[0].size <= 5000000) {\n      let request = new FormData();\n      request.append('file', $event.addedFiles[0]);\n      this.uploadService.validateImage($event.addedFiles[0])\n        .subscribe(value => {\n          const message = value.message;\n          console.log(value.status);\n          if (value.status === 200) {\n            this.files.push(...$event.addedFiles);\n            this.isValidToUpload = true;\n            this.isLinear = true;\n            this.uploadSuccess = true;\n            this.isValidating = false;\n\n            // getting uploaded file and passing it to crop image\n            const reader = new FileReader();\n            reader.onload = (e: any) => {\n              const base64Temp = e.target.result;\n              this.croppedGalleryImage = base64Temp;\n              this.croppedDownloadViewImage = base64Temp;\n              this.store.dispatch(new CropDownloadViewImage(this.croppedGalleryImage))\n              this.store.dispatch(new CropGalleryViewImage(this.croppedDownloadViewImage))\n                .subscribe(value => {\n                  // open imageCropper dialog(component) to let user decide\n                  // which part of th uploaded image should be displayed\n                  // this.dialog.open(ImageCropperComponent,{\n                  //   data: e.target.result,\n                  //   height: '1200px',\n                  //   width: '1400px'\n                  // })\n                });\n            };\n            reader.readAsDataURL($event.addedFiles[0]);\n          } else {\n            this.onRemove($event.addedFiles[0]);\n            this.isValidToUpload = false;\n            console.log(this.isValidToUpload)\n            this.snackBar.open(\n              message,\n              \"Validation was unsuccessful\",\n              {\n                duration: 3000,\n                horizontalPosition: \"center\",\n                verticalPosition: \"top\"\n              }\n            );\n          }\n        })\n    }\n\n  }\n\n  public cropImageForDownloadView(): void {\n    this.dialog.open(ImageCropperComponent, {\n      data: {\n        img: this.store.selectSnapshot(CropImageState.getCroppedDownloadImage),\n        width: 1200,\n        height: 670, viewName: 'Download'\n      }, height: '1000px'\n    });\n  }\n\n  public cropImageForGallery(): void {\n    this.dialog.open(ImageCropperComponent, {\n      data: {\n        img: this.store.selectSnapshot(CropImageState.getData)\n        , width: 500, height: 460, viewName: 'Gallery'\n      }, height: '1000px'\n\n    });\n    this.displayCroppedImage = true;\n    // this.store.dispatch(new CropGalleryViewImage(this.croppedGalleryImage))\n    //   .subscribe(value => console.log(value));\n\n  }\n\n  onRemove(f: any): void {\n    this.files.splice(this.files.indexOf(f), 1);\n    this.isValidToUpload = false;\n    this.store.dispatch(new CropGalleryViewImage(null))\n  }\n\n  upload(): void {\n    this.spinner.next(true);\n    const loggedInUserModel: BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    let request = new FormData();\n    request.append('file', this.files[0]);\n    const isP = this.isPublic ? 'true' : 'false';\n\n\n    const galleryBase64 = this.store.selectSnapshot(CropImageState.getData);\n    //cropped image to file(base64 to file)\n    const imageBlob = Base64ToBlobConverter.dataURItoBlob(galleryBase64.substr(galleryBase64.lastIndexOf(',') + 1));\n\n    const imageFile = new File([imageBlob],\n      \"cropped-\" + this.files[0].name,\n      { type: 'image/jpeg' });\n\n\n    const downloadBase64 = this.store.selectSnapshot(CropImageState.getCroppedDownloadImage);\n    const downloadBlob = Base64ToBlobConverter.dataURItoBlob(downloadBase64.substr(downloadBase64.lastIndexOf(',') + 1));\n    const downloadImageFile = new File([downloadBlob],\n      \"cropped-\" + this.files[0].name,\n      { type: 'image/jpeg' });\n\n    // setting response object with needed values\n    const uploadModel: UploadImageModel = {\n      userId: loggedInUserModel.userId,\n      orgFile: this.files[0],\n      isPublic: isP,\n      urlReference: this.validate(this.imageUrlReference.value) === true ?\n        this.imageUrlReference.value : null,\n      file: request,\n      galleryFile: imageFile,\n      downloadFile: downloadImageFile\n    }\n\n    // sending request\n    this.store.dispatch(new UploadImage(uploadModel))\n      .subscribe(value1 => {\n        request = null;\n        this.files = [];\n        this.isValidToUpload = false;\n        if (value1.Upload.status) {\n          this.snackBar.open(\n            \"File uploaded successfully\",\n            \"File uploaded\",\n            {\n              duration: 3000,\n              horizontalPosition: \"center\",\n              verticalPosition: \"top\"\n            }\n          );\n          this.spinner.next(false);\n          this.store.dispatch(new CropGalleryViewImage(null))\n        }\n        // window.location.reload();\n      }, error => {\n        this.spinner.next(false);\n        this.snackBar.open(\n          error.error,\n          \"File uploaded error\",\n          {\n            duration: 3000,\n            horizontalPosition: \"center\",\n            verticalPosition: \"top\",\n            panelClass: ['uploadError']\n          }\n        );\n        request = null;\n        this.files = [];\n        this.isValidToUpload = false;\n        this.imageUrlReference = null;\n        this.store.dispatch(new CropGalleryViewImage(null))\n      });\n  }\n\n  close(): void {\n    const userId: string = this.store.selectSnapshot(LoginStateModel.loggedUserId);\n    // this.router.navigate(['profile'])\n    this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n    this.store.dispatch(new CropGalleryViewImage(null));\n    this.dialogRef.close();\n  }\n\n  imageCropped($event: ImageCroppedEvent) {\n    console.log(\"dfghdfjkgh\");\n    this.croppedGalleryImage = $event.base64;\n  }\n\n  imageLoaded() {\n    console.log(\"dfghdfjkgh666666666\");\n    this.showCropper = true;\n    console.log('Image loaded');\n  }\n\n  cropperReady($event: Dimensions) {\n    console.log(\"what\");\n  }\n\n  loadImageFailed() {\n\n  }\n\n  // fileChangeEvent($event: Event) {\n  //   this.imageChangedEvent = $event;\n  //   console.log(this.imageChangedEvent)\n  // }\n  cropped2: any;\n  fileChangeEvent($event: Event) {\n    this.imageChangedEvent = $event;\n  }\n}\n","<h2 id=\"header\">Publish to <strong>SpecShots</strong></h2>\n\n\n\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n  <mat-step [completed]=\"uploadSuccess\" [stepControl]=\"firstFormGroup\">\n    <ng-template matStepLabel>Select image</ng-template>\n    <div id=\"access-type\">\n      <p><strong>Choose Access type :</strong></p>\n      <mat-radio-group [formControl]=\"fooControl\"\n                       (change)=\"changeStuff($event)\"\n                       aria-label=\"Select an option\">\n        <mat-radio-button [checked]=\"true\" value=\"1\">\n          <div class=\"options\">\n            <mat-icon>public</mat-icon>\n            Public\n          </div>\n        </mat-radio-button>\n        <mat-radio-button value=\"0\">\n          <div class=\"options\">\n            <mat-icon>lock</mat-icon>\n            Private\n          </div>\n        </mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <ngx-dropzone class=\"drop-zone\" (change)=\"onSelect($event)\">\n      <ngx-dropzone-label class=\"drop-label\">\n        <div *ngIf=\"isValidating == false && uploadSuccess == false\" class=\"label-content\">\n          <button mat-icon-button>\n            <mat-icon style=\"font-size: 100px;\">add_photo_alternate</mat-icon>\n          </button>\n        </div>\n        <div style=\"display: flex; flex-direction: column; justify-content: center; align-items: center\" *ngIf=\"isValidating == true\">\n          <mat-spinner></mat-spinner>\n          <span style=\"margin-top: 20px\">Validating image... This can take a while..</span>\n        </div>\n      </ngx-dropzone-label>\n      <ngx-dropzone-label class=\"label-header\">\n        <h1 *ngIf=\"isValidating == false && uploadSuccess == false\">Drag and drop a file</h1>\n      </ngx-dropzone-label>\n      <ngx-dropzone-label class=\"label-description\">\n        <!--<div *ngIf=\"isValidating == false && uploadSuccess == false\">-->\n          <li class=\"list-item\"><strong>High quality photos</strong></li>\n          <li class=\"list-item\">Only upload photos you <strong>own the rights to</strong></li>\n          <li class=\"list-item\">Respect the intellectual property of others</li>\n          <li class=\"list-item\">Photos are <strong>clear and original</strong></li>\n          <li class=\"list-item\">Zero tolerance for nudity, violence or hate</li>\n          <li class=\"list-item\">Read the provider terms</li>\n        <!--</div>-->\n      </ngx-dropzone-label>\n      <ngx-dropzone-preview class=\"preview\"\n                            *ngFor=\"let f of files\"\n                            [removable]=\"true\"\n                            (removed)=\"onRemove(f)\"\n                            [file]=\"f\">\n        <ngx-dropzone-label style=\"color: black\" class=\"label-header\">{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\n      </ngx-dropzone-preview>\n    </ngx-dropzone>\n    <div class=\"link_ref_label\">\n      <mat-icon>public</mat-icon>\n      URL link reference :\n    </div>\n    <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>URL to image</mat-label>\n      <input matInput (ngModelChange)=\"urlReferenceValidator()\"\n             [formControl]=\"imageUrlReference\"\n             placeholder=\"http:\\\\www.xxx.com\">\n      <mat-error>Invalid url</mat-error>\n    </mat-form-field>\n  </mat-step>\n  <mat-step>\n      <ng-template  matStepLabel>Edit image for your gallery view</ng-template>\n      <div>\n        <button (click)=\"cropImageForGallery()\"\n                mat-button [disabled]=\"!(this.$imageData | async)\"\n                matTooltip=\"Select the part of your image which will be displayed as an thumbnail.\"\n                matTooltipPosition=\"below\"\n                mat-raised-button>Edit</button>\n<!--        <button mat-button matStepperNext>Next</button>-->\n      </div>\n    <div class=\"cropped-image\">\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\n             matTooltipPosition=\"below\"\n             [src]=\"this.$imageData | async\" />\n      </div>\n    </div>\n  </mat-step>\n  <mat-step>\n    <ng-template  matStepLabel>Edit image for the download view</ng-template>\n    <div>\n      <button (click)=\"cropImageForDownloadView()\"\n              mat-button [disabled]=\"!(this.$imageData | async)\"\n              matTooltip=\"Select the part of your image which will be displayed in the download view.\"\n              matTooltipPosition=\"below\"\n              mat-raised-button>Edit</button>\n      <!--        <button mat-button matStepperNext>Next</button>-->\n    </div>\n    <div class=\"cropped-image\">\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\n             matTooltipPosition=\"below\"\n             [src]=\"this.$croppedDownloadViewImage | async\" />\n      </div>\n    </div>\n  </mat-step>\n  <mat-step >\n    <form >\n      <ng-template matStepLabel>Upload file</ng-template>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n</mat-horizontal-stepper>\n<mat-divider></mat-divider>\n<div class=\"action\" style=\"margin-top: 100px\">\n  <button *ngIf=\"!(this.spinner | async)\" mat-raised-button (click)=\"close()\" style=\"margin-right: 5px\" color=\"primary\" mat-flat-button>Cancel</button>\n  <button mat-raised-button *ngIf=\"isValidToUpload && !(this.spinner | async)\" (click)=\"upload()\"  mat-flat-button>Upload</button>\n  <mat-spinner *ngIf=\"this.spinner | async\" ></mat-spinner>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByUserIdState} from \"../../shared/app-state/states/images-by-user-id.state\";\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\nimport {CropDownloadViewImage, CropGalleryViewImage} from \"../../shared/app-state/actions/image.action\";\n\n@Component({\n  selector: 'app-image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.scss']\n})\nexport class ImageCropperComponent implements OnInit {\n  public width: number;\n  public height: number;\n  public cropForView: string;\n  imageChangedEvent: any;\n  croppedImage: any;\n  showCropper: boolean = false;\n  cropped2: any;\n  @Select(CropImageState.getData) $imageData;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public $event: any,\n              private dialogRef: MatDialogRef<ImageCropperComponent>,\n              private store: Store) {\n  }\n\n  ngOnInit(): void {\n    this.croppedImage = this.$event.img;\n    this.width = this.$event.width;\n    console.log(this.width)\n    this.height = this.$event.height;\n    console.log(this.height)\n    this.cropForView = this.$event.viewName;\n  }\n\n  imageCropped($event: ImageCroppedEvent) {\n    if (this.cropForView === 'Gallery')\n      this.store.dispatch(new CropGalleryViewImage($event.base64));\n    else\n      this.store.dispatch(new CropDownloadViewImage($event.base64));\n  }\n\n  imageLoaded() {\n    console.log(\"dfghdfjkgh666666666\");\n    this.showCropper = true;\n    console.log('Image loaded');\n  }\n\n  cropperReady($event: Dimensions) {\n\n  }\n\n  loadImageFailed() {\n  }\n\n  public close(): void {\n    // this.store.dispatch(new CropGalleryViewImage(this.cropped2));\n    this.dialogRef.close(this.cropped2);\n  }\n}\n","<div style=\" margin-bottom: 10px;display: flex; flex-direction: row; align-content: center; align-items: center\">\n  <span>Select the part of the image which should be displayed as an thumbnail</span>\n  <button style=\"margin-left: 10px\" color=\"primary\" mat-raised-button (click)=\"close()\">Crop image</button>\n</div>\n<div  class=\"cropper\">\n  <image-cropper\n    [imageBase64]=\"croppedImage\"\n    [maintainAspectRatio]=\"true\"\n    [resizeToWidth]=\"width\"\n    [resizeToHeight]=\"height\"\n    [cropperStaticWidth]=\"width\"\n    [cropperStaticHeight]=\"height\"\n    (imageCropped)=\"imageCropped($event)\">\n  </image-cropper>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-image-dialog',\n  templateUrl: './upload-image-dialog.component.html',\n  styleUrls: ['./upload-image-dialog.component.scss']\n})\nexport class UploadImageDialogComponent implements OnInit {\n  secondFormGroup: any;\n  firstFormGroup: any;\n  isLinear: Boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button (click)=\"isLinear = !isLinear\" id=\"toggle-linear\">\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\n</button>\n<mat-vertical-stepper [linear]=\"isLinear\" #stepper>\n  <mat-step [completed]=\"isLinear\" [stepControl]=\"firstFormGroup\">\n    <form [formGroup]=\"firstFormGroup\">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"secondFormGroup\">\n    <form [formGroup]=\"secondFormGroup\">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\n               required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>\n\n<p>FOOO</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bootstrap-playground',\n  templateUrl: './bootstrap-playground.component.html',\n  styleUrls: ['./bootstrap-playground.component.scss']\n})\nexport class BootstrapPlaygroundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <div class=\"brand\">\n    <a id=\"android\">\n      <mat-icon style=\"margin-top: 5px\">android</mat-icon>\n    </a>\n    <a id=\"donut\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"text-align: center; margin-top: 5px\">donut_small</mat-icon>\n    </a>\n    <a id=\"widget\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"margin-top: 5px\">widgets</mat-icon>\n    </a>\n    <span id=\"api_name\"><strong>Welcome to SpecShots</strong></span>\n  </div>\n\n</header>\n\n\n<div class=\"form-ang\">\n  <input class=\"search\" type=\"text\" matInput>\n</div>\n\n\n<div class=\"profile_info\">\n  <mat-icon style=\"color: white\">\n    android\n  </mat-icon>\n</div>\n\n<!--Navbar-->\n<!--\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark indigo\">\n\n  &lt;!&ndash; Navbar brand &ndash;&gt;\n  <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">Navbar</a></mdb-navbar-brand>\n\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n  <links>\n\n    &lt;!&ndash; Links &ndash;&gt;\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Pricing</a>\n      </li>\n\n      &lt;!&ndash; Dropdown &ndash;&gt;\n      <li class=\"nav-item dropdown\" dropdown>\n        <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n          Basic dropdown<span class=\"caret\"></span></a>\n        <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Another action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Something else here</a>\n          <div class=\"divider dropdown-divider\"></div>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Separated link</a>\n        </div>\n      </li>\n\n    </ul>\n    &lt;!&ndash; Links &ndash;&gt;\n\n    &lt;!&ndash; Search form &ndash;&gt;\n    <form class=\"form-inline waves-light\" mdbWavesEffect>\n      <div class=\"md-form my-0\">\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n      </div>\n    </form>\n  </links>\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n\n</mdb-navbar>\n&lt;!&ndash;/.Navbar&ndash;&gt;\n-->\n","import { Component, OnInit } from '@angular/core';\nimport {Select} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Component({\n  selector: 'app-download-cropped-image-dialog',\n  templateUrl: './download-cropped-image-dialog.component.html',\n  styleUrls: ['./download-cropped-image-dialog.component.scss']\n})\nexport class DownloadCroppedImageDialogComponent implements OnInit {\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValueState;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"display: flex;\n flex-direction: column;\njustify-content: center;\n align-items: center;\n  justify-items: center;\n   align-content: center; gap: 15px\"\n     *ngIf=\"$croppedValueState | async as croppedValues\" class=\"cropped-values\">\n  <div style=\"display: flex; flex-direction: column;\n   justify-content: center; align-items: center; gap: 10px\"\n    *ngFor=\"let res of croppedValues.possibleResolutions\">\n    <button style=\"width: 150px; height: 80px\" mat-raised-button>\n      <mat-icon>download</mat-icon>\n      {{res}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImageCroppedEvent} from \"ngx-image-cropper\";\nimport {Subject} from \"rxjs\";\nimport {GetBase64ForDownloadCropperState} from \"../../shared/app-state/states/get-base64-for-downloadCropper.state\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {CropAndDownload, GetImageAsByse64, SetCroppedOffsetValues} from \"../../shared/app-state/actions/image.action\";\nimport {MatSlideToggleChange} from \"@angular/material/slide-toggle\";\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\nimport {tap} from \"rxjs/operators\";\nimport {state} from \"@angular/animations\";\nimport {DownloadCroppedImageDialogComponent} from \"../download-cropped-image-dialog/download-cropped-image-dialog.component\";\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\nimport {resolveProvidersRequiringFactory} from \"@angular/compiler-cli/src/ngtsc/annotations/src/util\";\n\n@Component({\n  selector: 'app-download-cropper',\n  templateUrl: './download-cropper.component.html',\n  styleUrls: ['./download-cropper.component.scss']\n})\nexport class DownloadCropperComponent implements OnInit {\n  public formGroup: FormGroup;\n  public widthInputField: FormControl;\n  public heightInputField: FormControl;\n  public origWidthInputField: FormControl;\n  public wTest: number;\n  public hTest: number;\n  private wasCropped: boolean;\n  public croppedImage: any;\n  public width: number;\n  public height: number;\n  public diffRatio: number;\n  public showDimensions: boolean = false;\n  public widthChanged: number;\n  public croppedWidth: boolean = false;\n  public croppedHeight: boolean = false;\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValues;\n  @Select(GetBase64ForDownloadCropperState.getBase64) $base64;\n  @Select(GetImageByIdState.getRatioAsString) $ratio;\n  @Select(GetImageByIdState.getFileDetails) $details;\n  public loaded: number = 0;\n  cropper = {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0\n  };\n  enableUserInput: any;\n\n  constructor(private store: Store,\n              private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private dialog: MatDialog,\n              private service: ImageRequestService,\n              private downloadService: ImageDownloadService) {\n  }\n\n  ngOnInit(): void {\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\n    this.extractImageIdFromRequest(imageFileDetails);\n    /*this.subscribeToWidthInput(imageFileDetails);\n    this.subscribeToHeightInput(imageFileDetails);*/\n  }\n\n\n  private extractImageIdFromRequest(imageFileDetails: ImageFileDetails) {\n    this.route\n      .paramMap\n      .subscribe(param => {\n        const imageId = param.get(\"imageId\");\n        this.store.dispatch(new GetImageAsByse64(imageId));\n        this.initFormFields(imageFileDetails);\n      })\n  }\n\n  private initFormFields(imageFileDetails: ImageFileDetails) {\n    this.widthInputField = new FormControl(imageFileDetails.width);\n    this.heightInputField = new FormControl(imageFileDetails.height);\n    this.formGroup = this.fb.group({\n      width: this.widthInputField,\n      height: this.heightInputField,\n    })\n  }\n\n\n\n  public imageCropped($event: ImageCroppedEvent): void {\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\n    console.log(\"Starting Cropper method.....................................................\");\n    const ratio = imageFileDetails.width / imageFileDetails.height;\n    const width = $event.cropperPosition.x2 - $event.cropperPosition.x1;\n    console.log($event.cropperPosition.x1);\n    console.log($event.cropperPosition.x2);\n    if (!this.croppedWidth || !this.croppedHeight) {\n      console.log(\"Cropper width : \" + width);\n      this.wasCropped = true;\n      this.widthInputField.setValue(width.toFixed(2));\n      const height = $event.cropperPosition.y2 - $event.cropperPosition.y1;\n      console.log(\"Cropper height : \" + height);\n      this.heightInputField.setValue(height.toFixed(2));\n      this.wasCropped = false;\n    }\n    if (this.loaded == 0) {\n      this.diffRatio = imageFileDetails.width / width;\n      this.diffRatio.toFixed(2);\n    }\n    // this.croppedWidth.next($event.cropperPosition.x2 - $event.cropperPosition.x1);\n    // this.croppedHeight.next($event.cropperPosition.y2 - $event.cropperPosition.y1)\n    this.loaded++;\n    console.log(\"Method cropper finished............................................\");\n  }\n\n  close() {\n\n  }\n\n  public imageLoaded(): void {\n    setTimeout(() => {\n      const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\n      const width = imageFileDetails.width;\n      this.cropper = {\n        x1: 0,\n        y1: 0,\n        x2: width,\n        y2: imageFileDetails.height\n      };\n      this.showDimensions = true;\n    });\n  }\n\n  changeStuff($event: MatSlideToggleChange) {\n\n  }\n\n  changedWidthFunc(value: string) {\n    console.log(value);\n  }\n\n  public cropAndDownload(width: string, height: string): void {\n    const parsedWidth: number = Number.parseFloat(width);\n    const parsedHeight: number = Number.parseFloat(height);\n    this.store.dispatch(\n      new SetCroppedOffsetValues(\n        this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\n        this.cropper.x1 * this.diffRatio,\n        this.cropper.y1 * this.diffRatio,\n        parsedWidth * this.diffRatio,\n        parsedHeight * this.diffRatio\n      )\n    )\n  }\n\n\n  download(detail: string): void {\n    let croppedDownloadRequest = this.store.selectSnapshot(PrepareCroppedForDownloadState.getCroppedValues);\n    croppedDownloadRequest.imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\n    croppedDownloadRequest.selectedWidth = Number.parseFloat(detail.split(' x ')[0]);\n    croppedDownloadRequest.selectedHeight = Number.parseFloat(detail.split(' x ')[1])\n    console.log(croppedDownloadRequest.selectedWidth);\n    this.downloadService\n      .downloadIndividualImage(croppedDownloadRequest, true)\n      .subscribe(res => res)\n  }\n}\n","<app-search-toolbar></app-search-toolbar>\n\n<div\n  style=\"margin-top: 30px; margin-bottom: 10px;display: flex;flex-direction: column ;justify-content: center; align-items: center\">\n  <!--  <span>Select the part of the image which should be displayed as an thumbnail</span>-->\n  <!--  <button style=\"margin-left: 10px\" color=\"primary\" mat-raised-button (click)=\"close()\">Crop image</button>-->\n  <!--  <button style=\"font-size: 20px\" *ngIf=\"croppedWidth | async as width\" mat-icon-button>-->\n  <!--    <mat-icon>photo_size_select_large</mat-icon>-->\n  <!--    {{\"New width : \" + width + \"px\"}}-->\n  <!--  </button>-->\n  <!--  <button style=\"font-size: 20px\" *ngIf=\"croppedHeight | async as height\" mat-icon-button>-->\n  <!--    <mat-icon>photo_size_select_large</mat-icon>-->\n  <!--    {{\"New height : \" + height + \"px\"}}-->\n  <!--  </button>-->\n\n  <div *ngIf=\"!showDimensions\" class=\"load-image\" style=\"margin: 0 auto;\n  display: flex; flex-direction: column; justify-content: center; align-items: center; gap: 10px\">\n    <mat-spinner diameter='100' ></mat-spinner>\n    <span style=\"font-size: 20px; margin-top: 20px\"><strong>Loading image please wait</strong></span>\n  </div>\n  <div *ngIf=\"showDimensions\" class=\"dimensions\"\n       style=\"width: 700px; padding: 20px; margin-top: 10px; display: flex; flex-direction: row\">\n    <!--    <div class=\"enable-user-input\" style=\"border: 1px solid black;display: flex; flex-direction: row ;justify-content: center;align-items: center\">-->\n    <!--      <mat-icon>create</mat-icon>-->\n    <!--      <mat-slide-toggle (change)=\"changeStuff($event)\"-->\n    <!--                        style=\"margin-left: 20px\" [(ngModel)]=\"enableUserInput\"></mat-slide-toggle>-->\n    <!--    </div>-->\n    <!--    <div class=\"user-input\">-->\n    <div class=\"input-flex-wrapper\" style=\"width: 500px; margin-bottom: 15px\">\n      <div class=\"width\" style=\"\">\n        <mat-form-field disabled=\"true\" style=\"font-size: 20px; width: 100%\">\n          <mat-label>Width</mat-label>\n          <input readonly type=\"number\" (change)=\"changedWidthFunc(input.value)\" [formControl]=\"widthInputField\" matInput #input>\n          <mat-hint *ngIf=\"$details | async as imgDetail\">\n            Original width : {{(input.value * diffRatio).toFixed(2)}}\n          </mat-hint>\n          <!--<button mat-button matSuffix mat-icon-button aria-label=\"Clear\">\n            <mat-icon matSuffix>mode_edit</mat-icon>\n          </button>-->\n        </mat-form-field>\n<!--        <span *ngIf=\"$details | async as imgDetail\">{{(input.value * (imgDetail.width / input.value))}}</span >-->\n      </div>\n      <div class=\"height\">\n\n        <mat-form-field disabled=\"true\" style=\"font-size: 20px; width: 100%;; margin-top: 20px\">\n          <mat-label>Height</mat-label>\n          <input readonly type=\"number\" [formControl]=\"heightInputField\" matInput #input2>\n          <mat-hint *ngIf=\"$details | async as imgDetail\">Original height :\n            {{(input2.value * diffRatio).toFixed(2)}}\n          </mat-hint >\n          <!--<button mat-button matSuffix mat-icon-button aria-label=\"Clear\">\n            <mat-icon matSuffix>mode_edit</mat-icon>\n          </button>-->\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"crop-download-wrapper\" style=\"margin-left: 30px; display: flex;\n    flex-direction: column; justify-content: center; align-items: center\">\n      <button [matMenuTriggerFor]=\"menu\" (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\"  mat-raised-button color=\"primary\">Download</button>\n      <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\n        <div *ngIf=\"$croppedValues | async as croppedDetails\">\n          <div class=\"hoverable\" *ngFor=\"let detail of croppedDetails.possibleResolutions\">\n            <button (click)=\"download(detail)\" style=\"width: 100%; border-radius: 50%\" mat-menu-item>\n              <mat-icon>download</mat-icon>\n              <span>{{detail}}</span>\n            </button>\n            <mat-divider></mat-divider>\n          </div>\n        </div>\n      </mat-menu>\n    </div>\n    <!--    </div>-->\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <!--  <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">-->\n  <!--    <mat-chip style=\"font-size: 18px;max-width: 200px\" selected *ngIf=\"croppedWidth | async as width\">-->\n  <!--      {{\"Width : \" + width + \"px\"}}-->\n  <!--    </mat-chip>-->\n  <!--    <mat-chip style=\"font-size: 18px; max-width: 200px\" selected *ngIf=\"croppedHeight | async as height\">-->\n  <!--      {{\"Height : \" + height + \"px\"}}-->\n  <!--    </mat-chip>-->\n  <!--  </mat-chip-list>-->\n</div>\n<div *ngIf=\"$base64 | async as img\" class=\"cropper\">\n  <div>\n    <image-cropper #event [imageBase64]=\"img\"\n                   [maintainAspectRatio]=\"true\"\n                   [cropper]=\"cropper\"\n                   (imageLoaded)=\"imageLoaded()\"\n                   [aspectRatio]=\"$ratio | async\"\n                   (imageCropped)=\"imageCropped($event)\">\n    </image-cropper>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\nimport {\n  CropAndDownload,\n  GetDownloadDetails, GetImageAsByse64,\n  GetImageByImageId,\n  GetRelatedImagesByTagIDs,\n  ImagesByTagsAction\n} from \"../../shared/app-state/actions/image.action\";\nimport {DownloadDetailsState} from \"../../shared/app-state/states/download-details.state\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {Subject} from \"rxjs\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {ImagesByTagNameQueryImpl} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\nimport {RelatedImagesState} from \"../../shared/app-state/states/related-images.state\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ImageCropperComponent} from \"../../private/image-cropper/image-cropper.component\";\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {DownloadCropperComponent} from \"../download-cropper/download-cropper.component\";\nimport {SetResolutionDownloadDialogComponent} from \"../set-resolution-download-dialog/set-resolution-download-dialog.component\";\n\n@Component({\n  selector: 'app-image-details',\n  templateUrl: './image-details.component.html',\n  styleUrls: ['./image-details.component.scss']\n})\nexport class ImageDetailsComponent implements OnInit {\n\n  // @Select(DownloadDetailsState.getFile) $selectedImage;\n  @Select(RelatedImagesState.getRelatedImages) $relatedImages;\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n  @Select(DownloadDetailsState.getDetails) $downloadDetails;\n  @Select(GetImageByIdState.getImageDetail) $selectedImage;\n  formattedDetails = new Subject<string[]>();\n  private imageId: string;\n\n\n  constructor(private store: Store,\n              private route: ActivatedRoute,\n              private downloadService: ImageDownloadService,\n              private dialog: MatDialog,\n              private service: ImageRequestService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.route\n      .paramMap\n      .subscribe(param => {\n        const imageId = param.get('imageId');\n        this.imageId = imageId;\n        console.log(this.imageId);\n      });\n  }\n\n  download(detail: any) {\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\n    console.log(detail);\n    this.store\n      .dispatch(new GetDownloadDetails(imageId, detail))\n      .subscribe(value1 => {\n        console.log(value1.downloadDetails);\n        window.location.href = value1.downloadDetails.downloadLink;\n        this.store\n          .dispatch(new GetImageByImageId(this.imageId));\n      });\n    // window.location.href = detail.downloadLink;\n  }\n\n  clickedTag(tag: string) {\n    this.store.dispatch(\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\n    );\n  }\n\n  cropImageForDownload(imageDetail: any) {\n    console.log(imageDetail);\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\n    this.store.dispatch(new GetImageByImageId(imageId));\n    this.store.dispatch(new GetImageAsByse64(imageId));\n    this.router\n      .navigate(['crop-download', {imageId: imageId}]);\n    console.log(imageDetail);\n    // this.service\n    //   .getImageBytes(imageId)\n    //   .subscribe(byteArray => {\n    //     let blob = new Blob([byteArray],{type:'application/octet-binary'});\n    //     let reader = new FileReader();\n    //     reader.onload = (evt: any) => {\n    //       this.store\n    //         .dispatch(new CropAndDownload(evt.target.result))\n    //       this.router\n    //         .navigate(['crop-download', {imageId: imageId}])\n    //     };\n    //     // this.dialog.open(DownloadCropperComponent,{\n    //     //   data: { img: evt.target.result,\n    //     //     width: imageDetail.width,\n    //     //     height: imageDetail.height, viewName: 'Download' }\n    //     // })\n    //     reader.readAsDataURL(blob);\n    //   })\n  }\n\n  getIndividualResolutionDownloadDialog(imageDetail: any) {\n    console.log(imageDetail);\n    this.dialog.open(SetResolutionDownloadDialogComponent, {\n      width: '450px',\n      height: '460px',\n      panelClass: 'setIndividualResDialog'\n    });\n  }\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\n\n<div class=\"container\">\n  <div *ngIf=\"$selectedImage | async as data\" class=\"content\">\n    <div class=\"img\">\n      <img class=\"img-content\"  [src]=\"data.link\" alt=\"\">\n    </div>\n    <div class=\"content-details\">\n      <span class=\"data-name\">{{data.name}}</span>\n    </div>\n  </div>\n  <div class=\"download\" *ngIf=\"$selectedImage | async as data\">\n    <div class=\"spacer\" style=\"margin-bottom: 20px\">\n      <div class=\"profile-detail\">\n        <button mat-icon-button>\n          <!--        <mat-icon>account_circle</mat-icon>-->\n          <img class=\"shadow\" width=\"60px\" height=\"60px\" style=\"border-radius: 100%;\"\n               src=\"{{data.user.profileImgPath}}\" alt=\"\">\n        </button>\n        <span style=\"margin-left: 30px; font-size: 18px\">{{data.user.username}}</span>\n      </div>\n      <mat-divider style=\"margin-top: 40px; margin-bottom: 20px\"></mat-divider>\n\n      <div class=\"img-detail\">\n        <div class=\"img-name\" style=\"display: flex; flex-direction: row; align-items: baseline; flex-wrap: wrap; max-width: 220px\">\n          <!--<mat-icon  color=\"primary\" style=\"font-size: 40px; margin-right: 5px\">image</mat-icon>-->\n          <button style=\" height: 50px; font-size: 18px; word-break: break-all;\" mat-icon-button>\n            <mat-icon style=\"font-size: 40px;\" color=\"primary\">image</mat-icon>\n          </button>\n          <span style=\"margin-left: 30px; font-size: 18px; max-width: 130px\">{{data.name}}</span>\n        </div>\n\n        <div class=\"img-stats\">\n          <mat-chip-list style=\"margin-top: 20px; margin-bottom: 10px\" aria-label=\"Fish selection\">\n            <div class=\"chips\" style=\"display: flex; flex-direction: row; margin-top: 20px\">\n              <mat-chip class=\"shadow\" style=\"\" color=\"primary\" selected>\n                <mat-icon style=\"margin-right: 3px; margin-left: 3px\">thumb_up</mat-icon>\n                <span style=\"margin-left: 3px; margin-right: 3px\">{{data.liked}}</span>\n              </mat-chip>\n              <mat-chip class=\"shadow\" style=\"\" color=\"primary\" selected>\n                <mat-icon style=\"\">save_alt</mat-icon>\n                <span style=\"margin-left: 3px; margin-right: 3px\">{{data.downloaded}}</span>\n              </mat-chip>\n            </div>\n          </mat-chip-list>\n        </div>\n      </div>\n\n\n      <mat-divider style=\"margin-top: 20px; margin-bottom: 10px\"></mat-divider>\n\n\n      <div class=\"download-image\">\n        <button class=\"shadow\" mat-raised-button color=\"primary\" matTooltip=\"Click to open menu\"\n                style=\"color: white; width: 300px; height: 50px\"\n                [matMenuTriggerFor]=\"menu\"\n                aria-label=\"Example icon-button with a menu\">\n          <!--    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>-->\n          Download\n        </button>\n\n        <mat-menu backdropClass=\"img-download-detail\" #menu=\"matMenu\" >\n          <div *ngFor=\"let detail of data.imageDetails\">\n            <button (click)=\"download(detail)\" style=\"width: 700px; height: 100%\" mat-menu-item>\n              <mat-icon>aspect_ratio</mat-icon>\n              <span style=\"display: inline-block; width: 15px\"></span>\n              <span>{{detail.width + \" x \" + detail.height}}</span>\n              <!--          <span style=\"display: inline-block; width: 25px\"></span>-->\n              <!--          <span>{{detail.contentType}}</span>-->\n              <span style=\"display: inline-block; width: 25px\"></span>\n              <span>{{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\n            </button>\n          </div>\n          <mat-divider></mat-divider>\n          <button mat-menu-item [mat-menu-trigger-for]=\"cropImage\">\n            <mat-icon>settings_applications</mat-icon>\n            Download options\n          </button>\n\n          <mat-menu #cropImage=\"matMenu\" xPosition=\"before\">\n            <button (click)=\"cropImageForDownload(data.imageDetails[0])\" mat-menu-item>\n              <mat-icon>photo_size_select_large</mat-icon>\n              Crop image\n            </button>\n            <mat-divider></mat-divider>\n            <button (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\" mat-menu-item>\n              <mat-icon>transform</mat-icon>\n              Set individual dimensions</button>\n          </mat-menu>\n        </mat-menu>\n      </div>\n    </div>\n\n\n\n\n    <div class=\"related-tags\">\n      <h3>Related tags : </h3>\n      <div *ngIf=\"$selectedImage | async as data\" class=\"tags\">\n        <a class=\"shadow\" (click)=\"clickedTag(i.tag)\" style=\"background-color: #fcefee;\n        color: black;\n        text-decoration: none;\n        padding: 5px 20px;\n        border-radius: 20px;\n        margin-top: 2%; margin-right: 1%\" *ngFor=\"let i of data.tags\">{{'# ' + i.tag }}\n        </a>\n      </div>\n    </div>\n    <span style=\"margin-top: 20px\"></span>\n  </div>\n</div>\n\n<div class=\"related-images-container\">\n  <div class=\"header\">\n    <h2>Related images : </h2>\n  </div>\n  <app-image-content [isProfile]=\"false\"\n                     [data]=\"$relatedImages\"></app-image-content>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    /*this.store.dispatch(new RequestMessageAction(null));*/\n  }\n\n}\n","<div style=\"display: flex; justify-content: center; align-items: center\">\n\n  <mat-error *ngIf=\"$requestStatus | async as status\" style=\";margin: 0 auto; font-size: 30px\">\n    The requested Page could not be found\n    Reason : {{status.message}}\n  </mat-error>\n\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {ImagesByUserIdState} from \"../../shared/app-state/states/images-by-user-id.state\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {map, share, switchMap, tap} from \"rxjs/operators\";\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\nimport {UserAuthStateModel} from \"../../shared/domain/UserAuthStateModel\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {MatTabChangeEvent} from \"@angular/material/tabs\";\nimport {ProfileViewModel} from \"./profile-view-model\";\nimport {ModelFilter} from \"../../shared/util/model-filter\";\nimport {ImageModelFilter} from \"../../shared/util/image-model-filter\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n\n  weekFilter: boolean = false;\n\n\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n\n  @Select(LoginStateModel.loggedInUser) $logged;\n  userDetails: ProfileViewModel;\n  @Select(UserDetailsState.firstLastName) $firstLast;\n  @Select(UserDetailsState.getUserImages) $userImages;\n  @Select(UserDetailsState.getUserLikes) $userLikes;\n  @Select(UserDetailsState.userDetails) $userDetails;\n\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  $imgs = new Observable<ImageModel[]>();\n  $likeds = new Observable<ImageModel[]>();\n  requestError: boolean = false;\n  errorMessage: string;\n  downloadLink: any;\n  editableProfile = new BehaviorSubject<boolean>(false);\n\n  constructor(private store: Store,\n              private route: ActivatedRoute,\n              private service: ImageRequestService,\n              private router: Router) {\n    // this.route.data.subscribe((value: { userDetails: ProfileViewModel }) => {\n    //   this.userDetails = value.userDetails;\n    //   this.$imgs = of(value.userDetails.userProfile.images);\n    //   this.$likeds = of(value.userDetails.userProfile.likes)\n    // })\n  }\n\n  ngOnInit(): void {\n\n\n    this.$userImages\n      .subscribe(model =>  {\n        if (model !== undefined) {\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 7)\n          //   .forEach(image => console.log(\"Week : \" + image.uploadDate));\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 30)\n          //   .forEach(image => console.log(\"Month : \" + image.uploadDate))\n          //\n          // ImageModelFilter\n          //   .apply(model, 3600000 * 24 * 365)\n          //   .forEach(image => console.log(\"Year : \" + image.uploadDate))\n\n        }\n      })\n\n\n    console.log(this.userDetails);\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store\n          .dispatch(new UserDetailsActions.GetUserDetails(userId))\n          .subscribe(value => {\n            console.log(value.UserDetails);\n            this.requestError = false;\n          }, error => {\n            this.requestError = true;\n            this.errorMessage = 'Unable to find requested user';\n            this.router.navigate(['profile', {error: error.error.message}])\n          })\n        this.$logged.subscribe(loggedUser => {\n          if (loggedUser) {\n            this.editableProfile.next(loggedUser.userId === param.get('userId'));\n          }\n        })\n      })\n\n    const loggedUser : BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    if (loggedUser !== undefined && loggedUser !== null) {\n\n      // this.store.dispatch([\n      //     new AuthenticationActions.IsLoggedIn(),\n      //     new ImagesByUserIDAction(loggedUser.userId)\n      //   ]\n      // )\n    }\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  imageWasLiked($event: MatTabChangeEvent): void {\n    const label = $event.tab.textLabel;\n    console.log(label);\n    if (label === 'Likes') {\n      console.log(\"da schau her\");\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(\n        this.store.selectSnapshot(UserDetailsState.userDetails).userId\n      ))\n    }\n  }\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\n\n\n<div  class=\"container\">\n  <!--  <div class=\"filler_left\"></div>-->\n\n  <mat-error *ngIf=\"requestError\" style=\"font-size: 40px\">\n    {{errorMessage}}\n  </mat-error>\n\n  <div *ngIf=\"requestError === false\" class=\"center\">\n\n\n    <div class=\"profile_icon\">\n<!--      <button *ngIf=\"!($logged | async)\" disabled mat-icon-button-->\n<!--              aria-label=\"Example icon button with a home icon\">-->\n<!--        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>-->\n<!--      </button>-->\n\n      <mat-icon class=\"profile-img\" *ngIf=\"!($profileImg | async)\"\n                style=\"font-size: 165px; color: lightgray; margin-right: 5px\">\n        account_circle\n      </mat-icon>\n      <!--      <img *ngIf=\"($logged | async) as loggedUser\" class=\"profile-img\" [src]=\"loggedUser.profileImgPath\">-->\n      <img *ngIf=\"($profileImg | async) as src\" class=\"profile-img\" [src]=\"src\">\n<!--      <img class=\"profile-img\" [src]=\"userDetails.userProfile.profileImgPath\">-->\n    </div>\n    <div class=\"title\">\n      <div class=\"user-name\">\n<!--        <span *ngIf=\"userDetails\"-->\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\n<!--          <strong>-->\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName}}-->\n<!--          </strong>-->\n<!--        </span>-->\n<!--        <span *ngIf=\"$userDetails | async as loggedUser\"-->\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\n<!--          <strong>-->\n<!--            {{loggedUser.firstName + \" \" + loggedUser.lastName}}-->\n<!--          </strong>-->\n<!--        </span>-->\n          <span *ngIf=\"$firstLast | async as name\"\n                style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">\n          <strong>\n            {{name}}\n          </strong>\n        </span>\n      </div>\n      <br>\n      <div class=\"user-name\">\n        <p style=\"font-size: 17px; line-height: 28px\">\n          Download free, beautiful high-quality photos curated <br> by\n<!--          <span *ngIf=\"userDetails\">-->\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName }}-->\n<!--         </span>.-->\n<!--          <span *ngIf=\"$userDetails | async as userDetails\">-->\n<!--            {{userDetails.firstName + \" \" + userDetails.lastName }}-->\n<!--         </span>.-->\n          <span *ngIf=\"$firstLast | async as name\">\n            {{name}}\n         </span>.\n        </p>\n      </div>\n<!--      <div *ngIf=\"userDetails.isOwner\" class=\"edit\">-->\n<!--        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>-->\n<!--          <mat-icon>edit</mat-icon>-->\n<!--          Edit profile-->\n<!--        </button>-->\n<!--      </div>-->\n      <div *ngIf=\"editableProfile | async\" class=\"edit\">\n        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>\n          <mat-icon>edit</mat-icon>\n          Edit profile\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<mat-tab-group (selectedTabChange)=\"imageWasLiked($event)\" class=\"mat-tab-group\">\n  <mat-tab class=\"tab\" label=\"Gallery\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\n      Images\n    </ng-template>\n<!--    <app-image-content [isProfile]=\"true\"-->\n<!--                       [data]=\"$imgs\"></app-image-content>-->\n    <app-image-content [isProfile]=\"true\"\n                       [data]=\"$userImages\"></app-image-content>\n  </mat-tab>\n  <mat-tab label=\"Likes\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Likes\n    </ng-template>\n<!--    <app-image-content [isProfile]=\"false\"-->\n<!--                       [data]=\"$likeds\"></app-image-content>-->\n    <app-image-content [isProfile]=\"false\"\n                       [data]=\"$userLikes\"></app-image-content>\n  </mat-tab>\n<!--  <mat-tab *ngIf=\"(editableProfile | async) || (userDetails.isOwner)\" label=\"Third\">-->\n<!--    <ng-template mat-tab-label>-->\n<!--      <mat-icon class=\"example-tab-icon\">lock</mat-icon>-->\n<!--      Private-->\n<!--    </ng-template>-->\n<!--  </mat-tab>-->\n  <mat-tab *ngIf=\"editableProfile | async\" label=\"Third\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">lock</mat-icon>\n      Private\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>\n","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\nimport {debounceTime, filter, map, switchMap, tap, throttleTime} from \"rxjs/operators\";\nimport {TagRequestService} from \"../../serviceV2/tag-request.service\";\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByTagsAction} from \"../../shared/app-state/actions/image.action\";\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {\n  FilterName,\n  ImagesByTagNameQueryImpl,\n  ImagesByTagNameWithFilterArgs, ImagesByTagNameWithFilterOpt\n} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {SignupComponent} from \"../../shared/signup/signup.component\";\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {LoginComponent} from \"../../shared/login/login.component\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {error} from \"@angular/compiler/src/util\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {IUserAuthState} from \"../../shared/domain/UserAuthStateModel\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport SearchUsers = UserDetailsActions.SearchUsers;\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\nimport {SearchViewModel} from \"./search-view.model\";\nimport {MatCheckboxChange} from \"@angular/material/checkbox\";\n\n\n@Component({\n  selector: 'app-search-toolbar',\n  templateUrl: './search.toolbar.component.html',\n  styleUrls: ['./search.toolbar.component.scss']\n})\nexport class SearchToolbarComponent implements OnInit, OnDestroy {\n  // if variable filterable is set to true then\n  // autocomplete image-request will be filtered with the applied values\n  @Input('filterable') filterable: boolean;\n\n  openCloseDetails: boolean = false;\n  // searchOption can be set either to tags or to users\n  // if one of both is set then individual filter-options can be applied\n  searchOption = \"Tags\";\n  // observable-searchTerm changes when the value in the\n  // autocomplete input changes\n  searchTerm$ = new Subject<string>();\n  // observable $tagOptions is directly fetched from the rest api\n  // to be displayed in the options-dialog as a clickable tagList\n  @Select(SearchByTagState.getFetchedTagListAsOption) $tagOptions: Observable<SearchViewModel[]>;\n  // observable $userOptions is directly fetched from the rest api\n  // to be displayed in the options-dialog as a clickable userList\n  // which has an existing profile\n  @Select(SearchByUsersState.getFetchedUsers) $users: Observable<BaseUserDetails[]>;\n  // observable $isLoggedIn validates with a\n  // server request if the user is logged in\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\n  // $profileImage is to display the clickable\n  // logged users profile image int the toolbar\n  // when icon is clicked then a options menu opens\n  @Select(LoginStateModel.profileImg) $profileImage;\n  // $loggedUser is fetched from the server\n  // and displays the logged user details\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  // $userName -> formatted logged userName\n  @Select(LoggedUserDetailsState.loggedUsername) $userName;\n\n  filterOptions: FilterCheckBox = {\n    timeFilterOptions: [\n      {name: 'Last 7 Days', checked: false,  value: 7},\n      {name: 'Last 30 Days', checked: false,  value: 30},\n      {name: 'Last 365 Days', checked: false, value: 365},\n      {name: 'All', checked: true, disabled: false, value: -1}\n    ],\n    mostDownloads: { name: 'Most downloaded', checked: false },\n    mostLiked: { name: 'Most liked', checked: false }\n  };\n\n  weekFilter: boolean = false;\n  monthFilter: boolean = false;\n  yearFilter: boolean = false;\n\n  // ng until destroy\n\n  constructor(private service: TagRequestService,\n              public store: Store,\n              public imageService: ImageRequestService,\n              private dialog: MatDialog,\n              private authService: UserAuthenticationService,\n              private router: Router,\n              private route: ActivatedRoute) {\n\n    this.searchTerm$\n      .pipe(debounceTime(1000))\n      .subscribe(value => {\n        switch (this.searchOption) {\n          case 'Tags':\n            this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\n            break;\n          case 'Users':\n            this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\n            break;\n        }\n\n      });\n  }\n\n  foo(evt) {\n    console.log(evt.target.value)\n  }\n\n  ngOnInit(): void {\n    let val: BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    if (val === undefined || val === null)\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n        .subscribe(value => {\n          this.store.dispatch(new LoggedUserDetails(value.Authentication.user.userId))\n            .subscribe(value1 => console.log(value1));\n        });\n  }\n\n  search(selected: string): void {\n    /*const filter: ImagesByTagNameWithFilterOpt;*/\n\n    let filters = new Map();\n    filters.set(FilterName.FILTER_BY_DATE_WEEK, this.weekFilter);\n    filters.set(FilterName.FILTER_BY_DATE_MONTH, this.monthFilter);\n    filters.set(FilterName.FILTER_BY_DATE_YEAR, this.yearFilter);\n    switch (this.searchOption) {\n      case 'Tags' :\n        this.store.dispatch(new ImagesByTagsAction(\n          new ImagesByTagNameWithFilterOpt(this.filterOptions, selected)))\n          .subscribe(value => {\n            console.log(value);\n            console.log(\"Search pressed..\");\n            this.store.dispatch(new Navigate(['/image-by-tags']))\n          });\n        break;\n      case 'Users':\n        const userId = this.store\n          .selectSnapshot(SearchByUsersState.getFetchedUsers)\n          .filter(user => user.username === selected)\n          .map(filteredUser => filteredUser.userId);\n        this.store.dispatch(\n          new Navigate(['profile', {userId: userId}]));\n    }\n\n  }\n\n  signup(): void {\n    const ref = new MatDialogConfig();\n    this.dialog.open(SignupComponent,\n      {\n        width: '660px',\n        disableClose: true,\n        autoFocus: false\n      });\n  }\n\n  login(): void {\n    const ref = new MatDialogConfig();\n    ref.disableClose = true;\n    this.dialog.open(LoginComponent, {width: '380px'});\n  }\n\n  logout(): void {\n    this.store.dispatch(new AuthenticationActions.Logout())\n      .subscribe(value =>\n        this.store.dispatch(new Navigate(['welcome'])))\n  }\n\n  navigateUploadImage(): void {\n    let loggedUser: BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    this.router.navigate(['upload', {userId: loggedUser.userId}]);\n  }\n\n\n  navigateToSettings(): void {\n    this.store.dispatch(new Navigate(['edit-profile']))\n  }\n\n  navigateToUser(): void {\n    let loggedUser: BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    this.store.dispatch(\n      new Navigate(['profile', {userId: loggedUser.userId}])\n    )\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  testing(el: any) {\n    console.log(el);\n    console.log(\"AHAHAHAHAH\");\n  }\n\n  closeFilterDetails(): void {\n    this.openCloseDetails = !this.openCloseDetails;\n  }\n\n  public updateAll(checked: MatCheckboxChange, timeFilter: CheckBoxModel<number>): void {\n    this.filterOptions\n      .timeFilterOptions\n      .filter(value => value.name != timeFilter.name)\n      .forEach(value => value.checked = false);\n  }\n}\n\n\nexport interface CheckBoxModel<T> {\n  name: string;\n  checked: boolean;\n  disabled?: boolean;\n  value?: T;\n}\n\nexport interface FilterCheckBox {\n  timeFilterOptions: Array<CheckBoxModel<number>>;\n  mostDownloads: CheckBoxModel<boolean>;\n  mostLiked: CheckBoxModel<boolean>;\n}\n\n\n","<div class=\"container\">\n  <div class=\"left\">\n    <a>\n      <mat-icon style=\"margin-top: 5px\">android</mat-icon>\n    </a>\n    <a style=\"margin-left: 10px;\">\n      <mat-icon style=\"text-align: center; margin-top: 5px\">donut_small</mat-icon>\n    </a>\n    <a style=\"margin-left: 10px;\">\n      <mat-icon style=\"margin-top: 5px\">widgets</mat-icon>\n    </a>\n    <a style=\"margin-left: 10px; font-family: Epilogue,serif\">\n      <strong>Welcome to SpecShots</strong>\n    </a>\n  </div>\n  <div class=\"center-wrapper\" style=\"display: flex; flex-direction: column\">\n    <div class=\"center\">\n      <div style=\"display: flex; flex-direction: row;\" id=\"srh\">\n        <input class=\"shadow\" style=\" margin-bottom: 50px\" (keyup.enter)=\"search(element.value)\" id=\"search-input\"\n               type=\"text\" #element\n               (keyup)=\"searchTerm$.next($event.target.value)\"\n               matInput [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <div class=\"user-search\" *ngIf=\"searchOption === 'Users'\">\n            <mat-option #matOption (click)=\"search(matOption.value)\"\n                        *ngFor=\"let option of $users | async\"\n                        [value]=\"option.username\">\n              {{option.username}}\n            </mat-option>\n          </div>\n          <div class=\"tag-search\" *ngIf=\"searchOption === 'Tags'\">\n            <mat-option #matOption (click)=\"search(matOption.value)\"\n                        *ngFor=\"let option of $tagOptions | async\"\n                        [value]=\"option.value\">\n              {{option.value}}\n            </mat-option>\n          </div>\n        </mat-autocomplete>\n        <div id=\"btn\" style=\"margin-left: 20px; display: flex; flex-direction: row; align-items: center;\">\n          <button (click)=\"search(element.value)\" class=\"search-btn shadow\" mat-button\n                  style=\"background: white;margin-bottom: 2px\">\n            <mat-icon style=\"font-size: 20px;\" matPrefix>search</mat-icon>\n          </button>\n        </div>\n        <div class=\"btn\" style=\" display: flex; flex-direction: row; align-items: center;\">\n          <label>\n            <select class=\"shadow\" name=\"search-by\" [(ngModel)]=\"searchOption\" style=\"margin-left: 20px;margin-top: 1px;\n          height: 37px;\n          background: white;\n           border-radius: 10%; outline: none\">\n              <option class=\"q_options\" value=\"Tags\">Tags</option>\n              <option class=\"q_options\" value=\"Users\">Users</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <!--<div *ngIf=\"($isLoggedIn | async) == false\" class=\"auth-container\">\n    <button (click)=\"login()\" mat-raised-button id=\"login\" class=\"\">Login</button>\n\n  </div>\n  <div *ngIf=\"($isLoggedIn | async) == false\" class=\"signUp\">\n    <button (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\n  </div>-->\n\n\n  <div class=\"unregistered_actions\">\n    <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"login()\" mat-raised-button id=\"login\" class=\"\">Login</button>\n    <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\n    <button *ngIf=\"($isLoggedIn | async) == true\" class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>\n  </div>\n\n  <!--<div *ngIf=\"($isLoggedIn | async) == true\" class=\"submit_image\">\n    <button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>\n  </div>-->\n\n\n  <div class=\"account_icon_container\" *ngIf=\"($isLoggedIn | async) == true\">\n    <!--<button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>-->\n    <div class=\"msg\">\n      <span class=\"welcome_msg\"\n            style=\"color: white; margin-left: 10%; font-size: 15px\"\n            *ngIf=\"($isLoggedIn | async) == true\">\n      <strong>{{ \"Hi, \" + ($userName | async) || \"User\" }}</strong>\n    </span>\n    </div>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon *ngIf=\"!($profileImage | async)\"\n                style=\"color: white;font-size: 50px\">account_circle\n      </mat-icon>\n\n      <img *ngIf=\"($profileImage | async)\"\n           class=\"img shadow\"\n           [src]=\"$profileImage | async\">\n      <mat-menu #menu=\"matMenu\">\n        <button (click)=\"navigateToUser()\" mat-menu-item>\n          <mat-icon>person</mat-icon>\n          <span>View profile</span>\n        </button>\n        <button (click)=\"navigateToSettings()\" mat-menu-item>\n          <mat-icon>settings</mat-icon>\n          <span>Account settings</span>\n        </button>\n        <mat-divider></mat-divider>\n        <button (click)=\"logout()\" mat-menu-item>\n          <mat-icon>exit_to_app</mat-icon>\n          <span>Logout</span>\n        </button>\n      </mat-menu>\n    </button>\n  </div>\n\n\n  <!--<div style=\"width: 33%\"></div>-->\n  <div *ngIf=\"filterable && searchOption !== 'Users'\" class=\"open-filter-details\">\n\n\n    <button class=\"expand_btn\" style=\"color: white;\" (click)=\"closeFilterDetails()\" mat-icon-button>\n      <mat-icon style=\"color: white\">expand_more</mat-icon>\n      <span style=\"color: white;\">Search details </span>\n    </button>\n  </div>\n</div>\n<div class=\"container filterDetails\" *ngIf=\"filterable && openCloseDetails\">\n  <div *ngIf=\"searchOption === 'Tags'\" class=\"center2\" style=\"padding: 10px; display: flex; justify-content: center\">\n    <section id=\"id_Section\">\n      <ul class=\"align_ul\" style=\"list-style-type: none;\">\n        <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Filter : </strong></li>\n        <li *ngFor=\"let timeFilter of filterOptions.timeFilterOptions \"\n            style=\"color: white;\">\n          <mat-checkbox [(ngModel)]=\"timeFilter.checked\"\n                        (change)=\"updateAll($event, timeFilter)\">\n            {{timeFilter.name}}\n          </mat-checkbox>\n        </li>\n      </ul>\n\n      <section style=\"display: flex; flex-direction: column\">\n        <ul class=\"align_ul\" style=\"list-style-type: none\">\n          <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Sort : </strong></li>\n          <li style=\"color: white\">\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostDownloads.checked\">\n              {{filterOptions.mostDownloads.name}}\n            </mat-checkbox>\n          </li>\n          <li style=\"color: white\">\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostLiked.checked\">\n              {{filterOptions.mostLiked.name}}\n            </mat-checkbox>\n          </li>\n        </ul>\n      </section>\n    </section>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn} from \"@angular/forms\";\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {tap} from \"rxjs/operators\";\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\n\n@Component({\n  selector: 'app-set-resolution-download-dialog',\n  templateUrl: './set-resolution-download-dialog.component.html',\n  styleUrls: ['./set-resolution-download-dialog.component.scss']\n})\nexport class SetResolutionDownloadDialogComponent implements OnInit {\n  public formGroup: FormGroup;\n  public widthInputField: FormControl;\n  public heightInputField: FormControl;\n  public widthFocus: boolean = false;\n  public heightFocus: boolean = false;\n  @Select(GetImageByIdState.getFileDetails) $selectedImage;\n\n  constructor(private dialogRef: MatDialogRef<SetResolutionDownloadDialogComponent>,\n              private fb: FormBuilder,\n              private store: Store,\n              private downloadService: ImageDownloadService) {\n  }\n\n  ngOnInit(): void {\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\n    this.initFormFields(imageFileDetails);\n    const ratio = imageFileDetails.width / imageFileDetails.height;\n\n    this.widthInputField\n      .valueChanges\n      .subscribe(val => {\n        if (!this.heightFocus && this.widthFocus)\n          this.heightInputField.setValue((val / ratio).toFixed(2));\n\n      });\n    this.heightInputField\n      .valueChanges\n      .subscribe(val => {\n        if (!this.widthFocus && this.heightFocus)\n          this.widthInputField.setValue((val * ratio).toFixed(2));\n      })\n  }\n\n  get width() {\n    return this.formGroup.get('width');\n  }\n\n  get height() {\n    return this.formGroup.get('height');\n  }\n\n  private initFormFields(imageFileDetails: ImageFileDetails) {\n    this.widthInputField = new FormControl(imageFileDetails.width, [\n      imgSizeValidator(imageFileDetails.width)\n    ]);\n    this.heightInputField = new FormControl(imageFileDetails.height, [\n      imgSizeValidator(imageFileDetails.height)\n    ]);\n    this.formGroup = this.fb.group({\n      width: this.widthInputField,\n      height: this.heightInputField,\n    })\n  }\n\n  focusedInWidth($event: FocusEvent): void {\n    console.log($event);\n    this.widthFocus = true;\n    this.heightFocus = false;\n  }\n\n  focusInHeight($event: FocusEvent): void {\n    console.log($event);\n    this.heightFocus = true;\n    this.widthFocus = false;\n  }\n\n  public downloadImage(width: any, height: any): void {\n    this.downloadService\n      .downloadIndividualImage(\n        {\n          imageId: this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\n          width: width,\n          height: height\n        },\n        false)\n      .subscribe(value => console.log(value))\n  }\n}\n\n\nexport function imgSizeValidator(value: number): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const forbidden = value < Number.parseFloat(control.value) || control.value < 100;\n    return forbidden ? {forbiddenValue: {value: control.value}} : null;\n  };\n}\n","<div style=\"display: flex; flex-direction: column; font-size: 23px\" class=\"container\">\n\n  <!--<mat-divider style=\"margin-top: 40px\"></mat-divider>-->\n  <mat-form-field style=\"margin-top: 40px\">\n    <mat-label>Width</mat-label>\n    <input style=\"width: 250px\" (focusin)=\"focusedInWidth($event)\" type=\"text\" matInput [formControl]=\"widthInputField\">\n    <mat-error *ngIf=\"width.errors\">\n      <div *ngIf=\"width.errors.forbiddenValue\">\n        {{\"Invalid width : \"  + width.errors.forbiddenValue.value}}\n      </div>\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field style=\"margin-top: 40px\">\n    <mat-label>Height</mat-label>\n    <input (focusin)=\"focusInHeight($event)\" style=\"width: 250px\" type=\"text\" matInput [formControl]=\"heightInputField\">\n    <mat-error *ngIf=\"height.errors\">\n      <div *ngIf=\"height.errors.forbiddenValue\">\n        {{\"Invalid height : \"  + height.errors.forbiddenValue.value}}\n      </div>\n    </mat-error>\n  </mat-form-field>\n  <div *ngIf=\"(width.errors || height.errors) && $selectedImage | async as selectedImg\">\n    <div *ngIf=\"width.value > 100 || height.value > 100\">\n      <mat-error>{{\"Selected size is invalid.\"}}</mat-error>\n      <mat-error>{{\"Size cannot be bigger than : \" }}</mat-error>\n      <mat-error>{{selectedImg.width + \" X \" + selectedImg.height}}</mat-error>\n    </div>\n    <mat-error *ngIf=\"width.value < 100 || height.value < 100\">{{\"Image is to small\"}}</mat-error>\n  </div>\n  <button (click)=\"downloadImage(width.value, height.value)\" *ngIf=\"!width.errors || !height.errors\" style=\"margin: 40px auto;font-size: 30px\" mat-fab color=\"primary\">\n        <mat-icon>download</mat-icon>\n  </button>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-startup',\n  templateUrl: './startup.component.html',\n  styleUrls: ['./startup.component.scss']\n})\nexport class StartupComponent implements OnInit {\n\n  public foo: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-search-toolbar [filterable]=\"false\"></app-search-toolbar>\n\n<!--<app-bootstrap-playground></app-bootstrap-playground>-->\n\n<main>\n  <section class=\"banner\" id=\"top\">\n    <div class=\"container-banner\">\n      <div class=\"row\">\n\n        <div class=\"banner-caption\">\n          <div class=\"line-dec\"></div>\n          <h1>The most Spectacle Photography for You</h1>\n          <p>Here is some filler text to work with.</p>\n        </div>\n\n      </div>\n    </div>\n  </section>\n\n  <div class=\"container-1\">\n    <div class=\"box-1\">\n      <h3>High quality</h3>\n      <p>Internationalized and accessible components for everyone. Well tested to ensure performance and reliability.</p>\n      <p>Straightforward APIs with consistent cross platform behaviour.</p>\n    </div>\n    <div class=\"box-2\">\n      <h3>Versatile</h3>\n      <p>Provide tools that help developers build their own custom components with common interaction patterns.</p>\n      <p>Customizable within the bounds of the Material Design specification.</p>\n    </div>\n    <div class=\"box-3\">\n      <h3>Box Three</h3>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  </div>\n</main>\n\n<!--<footer>\n\n</footer>-->\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\nimport {Observable} from \"rxjs\";\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {environment} from \"../../../environments/environment\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './image-by-tag.component.html',\n  styleUrls: ['./image-by-tag.component.scss']\n})\nexport class ImageByTagComponent implements OnInit {\n  foo: string = \"IHUTiYJ6Wdk.jpg\";\n  @Select(ImagesByTagState.getData) $imagesByTags: Observable<ImageModel[]>;\n  constructor(private store: Store, private service: ImageRequestService,\n              private deviceService: DeviceDetectorService) { }\n\n  ngOnInit(): void {\n\n    console.log(this.deviceService.isMobile());\n\n  }\n\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\n<app-image-content [isProfile]=\"false\" [data]=\"$imagesByTags\"></app-image-content>\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {BehaviorSubject, EMPTY, Observable, of, Subject, throwError} from 'rxjs';\nimport {Select, Selector, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../shared/app-state/states/login.state.model\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\nimport {async} from \"rxjs/internal/scheduler/async\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {catchError, map, retry, switchMap} from \"rxjs/operators\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthSecurityGuard implements CanActivate {\n  $test = new Subject<boolean>();\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\n\n  constructor(private store: Store,\n              private router: Router,\n              private authService: UserAuthenticationService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> |\n    Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return this.$isLoggedIn;\n\n    let isLoggedIn: boolean =\n      this.store.selectSnapshot(LoginStateModel.isLoggedIn);\n    if (!isLoggedIn) {\n      console.log(\"could not login\");\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n        .pipe(map(loggedUser => {\n          if (loggedUser) return loggedUser.Authentication.status;\n        })).subscribe(status => {\n          if (!status) this.store.dispatch(new Navigate(['login']))\n        this.$test.next(status);\n      })\n    } else return isLoggedIn;\n    return this.$test;\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .pipe(\n    //     map(value => {\n    //       return !!value.Authentication.status;\n    //     })\n    //   ).subscribe(value => this.$diffRatio.next(value),\n    //   error => {\n    //     console.log(error)\n    //   });\n    // return this.$diffRatio;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {EMPTY, Observable, throwError} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\nimport {catchError} from \"rxjs/operators\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {ResponseBody} from \"../shared/domain/responseBody\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {RequestMessageAction} from \"../shared/app-state/actions/request-message.action\";\nimport {Router} from \"@angular/router\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieAuthInterceptorService implements HttpInterceptor{\n\n  constructor(private store: Store, private router: Router,\n              private deviceService: DeviceDetectorService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const isMobile = this.deviceService.isMobile() ? 1 : 0;\n    const clonedReq = req.clone({withCredentials: true,\n      headers: req.headers.set('isMobile', isMobile + \"\"  )});\n    return next.handle(clonedReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.error instanceof Error) {\n          // A client-side or network error occurred. Handle it accordingly.\n          console.log('An error occurred:', error.error.message);\n        } else {\n          // this.store.dispatch(new Navigate(['/login']))\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong,\n          console.log(error);\n          console.log(error.message);\n          console.log();\n          if (error.url === 'http://localhost:8880/image-app/images/insert/') {\n            console.log(error.error);\n            return throwError(error);\n          } else if (error.url === 'http://localhost:8880/image-app/users/signUp') {\n            console.log(error.error);\n            return throwError(error);\n          } else if (error.url === UserAuthenticationService.USER_LOGIN ||\n            error.url === UserAuthenticationService.GOOGLE_LOGIN) {\n            this.store.dispatch(new RequestMessageAction({ message: error.error }))\n          } else if (error.url.indexOf(UserAuthenticationService.USER_DETAILS) !== -1) {\n            this.store.dispatch(new RequestMessageAction({ message: error.error }))\n            /*this.router.navigate(['not-found']);*/\n            return throwError(error);\n          }\n          console.log(error.statusText);\n          if (error.error !== null && error.error.message !== null) {\n\n            console.log(`Backend returned code ${error.status}, body was: ${error.error.message}`);\n          }\n        }\n\n        // If you want to return a new response:\n        //return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\n\n        // If you want to return the error on the upper level:\n        //return throwError(error);\n\n        // or just return nothing:\n        return EMPTY;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {GetBase64ForDownloadCropperState, CropAndDownloadStateModel} from \"../shared/app-state/states/get-base64-for-downloadCropper.state\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {ImageRequestService} from \"./image-request.service\";\nimport {CropAndDownload, GetImageByImageId} from \"../shared/app-state/actions/image.action\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CropAndDownloadResolverService implements Resolve<CropAndDownloadStateModel> {\n\n  constructor(private store: Store,\n              private service: ImageRequestService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CropAndDownloadStateModel> | Promise<CropAndDownloadStateModel> | CropAndDownloadStateModel {\n    this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n    return this.service\n      .getImageBytes(route.params.imageId)\n      .pipe(map(byteArray => {\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\n        let reader = new FileReader();\n        reader.onload = (evt: any) => {\n           this.store\n            .dispatch(new CropAndDownload(evt.target.result))\n        };\n        // this.dialog.open(DownloadCropperComponent,{\n        //   data: { img: evt.target.result,\n        //     width: imageDetail.width,\n        //     height: imageDetail.height, viewName: 'Download' }\n        // })\n        reader.readAsDataURL(blob);\n        return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel)\n      }))\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteImageService {\r\n  private static readonly DELETE_IMAGE_URL = environment.apiUrl + \"image/delete\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public deleteImage(image: ImageModel): Observable<any> {\r\n    return this.http.post(\r\n      DeleteImageService.DELETE_IMAGE_URL,\r\n      image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../shared/app-state/states/get-image-by-id.state\";\nimport {GetImageByImageId, GetRelatedImagesByTagIDs} from \"../shared/app-state/actions/image.action\";\nimport {switchMap, tap} from \"rxjs/operators\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageDetailsResolverService implements Resolve<ImageModel> {\n\n  constructor(private store: Store) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ImageModel> | ImageModel {\n    return this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n      .pipe(switchMap(state =>\n          this.store.dispatch(new GetRelatedImagesByTagIDs(state.modelDetails.tags)))\n      )\n      .pipe(tap(val => {\n        this.store.dispatch(new AuthenticationActions.IsLoggedIn());\n        console.log(\"ImageDetailResolver was called with value : \" + val);\n      }));\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {DownloadImageByIndividualResolution, ImageModel} from \"../shared/domain/imageModel/image.model\";\r\nimport {finalize, map, tap} from \"rxjs/operators\";\r\nimport {ImageFileDetails, ImageDownloadResponse} from \"../shared/domain/imageModel/image-file-details\";\r\nimport {CroppedDownloadRequest} from \"../shared/domain/http/req/CroppedDownloadRequest\";\r\nimport {conditionallyCreateMapObjectLiteral} from \"@angular/compiler/src/render3/view/util\";\r\nimport {BlobToBase64Pipe} from \"../shared/util/blob-to-base64-pipe\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageDownloadService {\r\n  constructor(private http: HttpClient,\r\n              private base64Pipe: BlobToBase64Pipe) { }\r\n\r\n  public static readonly DOWNLOAD_BY_API_RESOLUTION_URL = environment.apiUrl + \"library/download/file/\";\r\n  public static readonly DOWNLOAD_BY_CROPPED_RESOLUTION_URL = environment.apiUrl + \"library/download/cropped/file/\";\r\n  public static readonly DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL = environment.apiUrl + \"library/download/resized/file\";\r\n\r\n\r\n  public downloadImage(imageId: string, imageFileDetail: ImageFileDetails): Observable<ImageFileDetails> {\r\n    return this.http\r\n      .post<ImageFileDetails>(\r\n        ImageDownloadService.DOWNLOAD_BY_API_RESOLUTION_URL + imageId,\r\n        imageFileDetail);\r\n  }\r\n\r\n\r\n  public downloadIndividualImage(croppedDetails: CroppedDownloadRequest |\r\n    DownloadImageByIndividualResolution, wasCropped: boolean): Observable<string> {\r\n    console.log(\"seas\");\r\n    const url = wasCropped ? ImageDownloadService.DOWNLOAD_BY_CROPPED_RESOLUTION_URL :\r\n      ImageDownloadService.DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL;\r\n    console.log(url);\r\n    return this.base64Pipe.getBase64(this.http\r\n       .post(\r\n         url,\r\n         croppedDetails, { responseType: 'arraybuffer' })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {BehaviorSubject, EMPTY, Observable, Subject} from \"rxjs\";\nimport {GetImagesByTagNameRequest, ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\nimport {ResponseBody} from \"../shared/domain/responseBody\";\nimport {environment} from \"../../environments/environment\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ResolutionsResponse} from \"../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRequestService {\n  // 178.112.217.30\n  public $bSubject = new BehaviorSubject<ImageModel[]>(null);\n  // private readonly SEARCH_URL: string = \"http://localhost:8880/image-app/images/search/by/tag/\";\n  private readonly SEARCH_URL: string = environment.apiUrl + \"library/search-by/tag/\";\n\n  public static readonly ALL_IMAGES_BY_USERID = environment.apiUrl + \"library/search-by/user/\";\n  public static readonly ALL_IMAGES_BY_IMG_ID = environment.apiUrl + \"library/search-by/image/\";\n  public static readonly RELATED_IMAGES_BY_TAG_IDS = environment.apiUrl + \"library/search-by/tags/\";\n  public static readonly GET_IMAGE_BYTES_BY_ID_URL = environment.apiUrl + \"library/search-by/image/raw/\";\n  public static readonly GET_API_RESOLTIONS = environment.apiUrl + \"api/resolutions/\";\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\n  private readonly UPLOAD_TAG = environment.apiUrl + \"image/update/tags/\";\n\n  constructor(private http: HttpClient,\n              private sanitizer: DomSanitizer) {\n  }\n\n\n  public getRelatedImagesByTagList(tags: TagModel[]): Observable<ImageModel[]> {\n    console.log(tags)\n    return this.http\n      .post<ImageModel[]>(\n        ImageRequestService.RELATED_IMAGES_BY_TAG_IDS,\n        {tags: tags},\n        {responseType: \"json\"});\n  }\n\n\n  public setTagToImage(data: SetImageWithTags): Observable<any> {\n    console.log(data)\n    return this.http.post(\n      this.UPLOAD_TAG,\n      data,\n      {observe: 'response'});\n  }\n\n\n  public getResolutions(): Observable<ResolutionsResponse> {\n    return this.http\n      .get<ResolutionsResponse>(\n        ImageRequestService.GET_API_RESOLTIONS,\n        {responseType: \"json\"} );\n  }\n\n  public getImageBytes(imgId: string) {\n    return this.http\n      .get(\n        ImageRequestService.GET_IMAGE_BYTES_BY_ID_URL + imgId,\n        {responseType: \"arraybuffer\"}\n        );\n  }\n\n\n\n\n  public getImagesByImgId(imgId: string): Observable<ImageModel> {\n    return this.http.get<ImageModel>(\n      ImageRequestService.ALL_IMAGES_BY_IMG_ID + imgId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n\n  public getImagesByUserId(userId: string): Observable<ImageModel[]> {\n    return this.http.get<ImageModel[]>(\n      ImageRequestService.ALL_IMAGES_BY_USERID + userId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n  public getImagesByTag(req: GetImagesByTagNameRequest, page: number): Observable<ImageModel[]> {\n    return this.http.post<ImageModel[]>(\n      this.SEARCH_URL,\n      req, { observe: \"response\" })\n      .pipe(\n        map(resp => {\n          console.log(resp.status)\n          return resp.body;\n        }),\n        catchError((err) => {\n          console.log(err.error.message);\n          return EMPTY;\n        }));\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {UploadImageModel} from \"../shared/domain/imageModel/upload-image.model\";\r\nimport {SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageUploadService {\r\n  private readonly UPLOAD_IMAGE = environment.apiUrl + \"images/insert/\";\r\n  private readonly VALIDATE_IMAGE = environment.apiUrl + \"library/validate-image/\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public addToUserLibrary(uploadModel: UploadImageModel): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", uploadModel.orgFile);\r\n    request.append(\"userId\", uploadModel.userId);\r\n    request.append(\"urlReference\", uploadModel.urlReference);\r\n    request.append(\"isPublic\", uploadModel.isPublic);\r\n    request.append('galleryFile', uploadModel.galleryFile);\r\n    request.append(\"downloadFile\", uploadModel.downloadFile)\r\n    console.log(uploadModel.urlReference);\r\n    return this.http.post(\r\n      this.UPLOAD_IMAGE, request,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public validateImage(data: File): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", data);\r\n    return this.http.post(\r\n      this.VALIDATE_IMAGE,\r\n      request,\r\n      {responseType: 'json'});\r\n  }\r\n}\r\n","import {State} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../shared/domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {SearchRequestService} from \"./search.request.service\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchByUsersService {\r\n  private readonly SEARCH_URL = environment.apiUrl + \"query/searchUsers/\";\r\n  constructor(private http: HttpClient,\r\n              private searchReqService: SearchRequestService<BaseUserDetails>) { }\r\n\r\n  public searchByTagName(searchTerm$: Observable<string>): Observable<BaseUserDetails[]> {\r\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL);\r\n  }\r\n}\r\n","import {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {distinctUntilChanged, switchMap, throttleTime} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchRequestService<T> {\r\n  private readonly SEARCH_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public search(searchTerm$: Observable<string>, url: string): Observable<T[]> {\r\n    return searchTerm$.pipe(\r\n      distinctUntilChanged(),\r\n      throttleTime(2000),\r\n      switchMap(searchTerm => this.getSearchResult(searchTerm, url))\r\n    );\r\n  }\r\n\r\n  private getSearchResult(term: string, url: string): Observable<T[]> {\r\n    return SearchRequestService.validateTerm(term) ?\r\n      this.sendSearchRequest(term, url) :\r\n      new BehaviorSubject([]);\r\n  }\r\n\r\n  private sendSearchRequest(terms: string, url: string): Observable<T[]> {\r\n    return this.http.get<T[]>(url + terms);\r\n  }\r\n\r\n  private static validateTerm(term: string): boolean {\r\n    return term.length > 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\"\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {DistinctSubscriber} from \"rxjs/internal/operators/distinct\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {SearchRequestService} from \"./search.request.service\";\nimport {environment} from \"../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagRequestService {\n  private readonly secr = \"user/HJeDHE2XBFwgJ81pzuLNj3MshJqXbU/images/all\";\n  constructor(private http: HttpClient,\n              private searchReqService: SearchRequestService<TagModel>) { }\n  //178.112.217.30\n  private readonly SEARCH_URL: string = environment.apiUrl + \"query/searchByTag/\";\n  private static readonly REQUEST_DELAY: number = 2000;\n\n  public searchByTagName(searchTerm$: Observable<string>): Observable<TagModel[]> {\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateImageDetailsService {\n  private readonly UPDATE_IMAGE_DETAILS_URL = environment.apiUrl + \"image/update/details\";\n  constructor(private http: HttpClient) { }\n\n  public changeImageDetails(imageToUpdate: ImageModel): Observable<any> {\n    console.log(imageToUpdate);\n    return this.http.post(\n      this.UPDATE_IMAGE_DETAILS_URL,\n      imageToUpdate,\n      {observe: 'response'});\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdateUserService {\r\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\r\n  private readonly ADD_USER_LIKE = environment.apiUrl + \"user/set/likes/\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public setUserProfile(userId: string, image: FormData): Observable<any> {\r\n    return this.http.post(\r\n      this.UPLOAD_PROFILE_IMAGE + userId, image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public addUserLike(imageId: string, userId: string): Observable<any> {\r\n    return this.http.post(\r\n      this.ADD_USER_LIKE + imageId + \"/\" + userId,\r\n      {observe: 'response'});\r\n  }\r\n}\r\n","import {Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BaseUserDetails, UserDetailsImpl, UserRegistrationModel} from \"../shared/domain/userModel/user-details.model\";\nimport {BehaviorSubject, Observable, throwError} from \"rxjs\";\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\nimport {IUserLoginModel, LoggedInUserModel, UserLoginModel} from \"../shared/domain/userModel/UserLoginModel\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {SignupState} from \"../shared/app-state/states/signup.state\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthenticationService {\n  private readonly USER_SIGNUP = \"http://localhost:8880/image-app/users/signUp\";\n  public static readonly USER_LOGIN = environment.apiUrl + \"users/login\";\n  private readonly USER_LOGOUT = environment.apiUrl + \"logout\";\n  private readonly AUTH_STATUS = environment.apiUrl + \"auth/identify/user\";\n  public static readonly USER_DETAILS = environment.apiUrl + \"user/details/\";\n  public static readonly GOOGLE_LOGIN = environment.apiUrl + \"users/oauth/login\";\n\n  constructor(private http: HttpClient) {\n\n  }\n\n\n  public getUserDetails(userId: string): Observable<BaseUserDetails> {\n    return this.http.get<BaseUserDetails>\n    (UserAuthenticationService.USER_DETAILS + userId, {responseType: \"json\"});\n  }\n\n\n  public createNewUser(userSignupModel: UserRegistrationModel): Observable<LoggedInUserModel> {\n    return this.http\n      .post<LoggedInUserModel>(this.USER_SIGNUP, userSignupModel, {observe: \"body\" , responseType: \"json\"});\n  }\n\n  public login(userLoginModel: IUserLoginModel, loginMethod: string): Observable<any> {\n    const URL = loginMethod === \"GOOGLE\" ? UserAuthenticationService.GOOGLE_LOGIN : UserAuthenticationService.USER_LOGIN;\n    console.log(userLoginModel);\n    return this.http.post<any>(URL, userLoginModel, {observe: 'response'});\n  }\n\n  public isLoggedIn(): Observable<any> {\n    return this.http.get(this.AUTH_STATUS, {responseType: \"json\", observe: 'response'})\n      .pipe(\n        map(value => {\n          console.log(value)\n          return value;\n        })\n      );\n  }\n\n  public logout(): Observable<any> {\n    return this.http.post(this.USER_LOGOUT, {responseType: \"json\"});\n  }\n\n}\n","import {Observable} from \"rxjs\";\r\n\r\nexport class GetZipCodesAndCitiesByRegion {\r\n  static readonly type = '[AddressValidation] Get Zipcodes and Cities'\r\n  constructor(public zipcode: Observable<string>,\r\n              public region: string) { }\r\n}\r\n\r\nexport class GetCountriesAction {\r\n  static readonly type = '[AddressValidation] Get Countries'\r\n  constructor() { }\r\n}\r\n\r\nexport class GetRegionsAction {\r\n  static readonly type = '[AddressValidation] Get Regions'\r\n  constructor(public countryName: string) { }\r\n}\r\n\r\n\r\n","import {IUserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\n\r\nexport namespace AuthenticationActions {\r\n  export class LoginAction {\r\n    static readonly type = '[Authentication] Login';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class LogoutAction {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class SignUpAction {\r\n    static readonly type = '[Authentication] Signup';\r\n    constructor(public userRegistration: UserRegistrationModel) { }\r\n  }\r\n\r\n  export class IsLoggedIn {\r\n    static readonly type = '[Authentication] Is logged in';\r\n    constructor() { }\r\n  }\r\n\r\n  export class Logout {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor() { }\r\n  }\r\n\r\n  export class LoggedUserDetails {\r\n    static readonly type = '[Authentication] Logged userDetails';\r\n    constructor(public userId: string) { }\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {ImagesByTagName, ImagesByTagNameQueryImpl} from \"../../domain/imageModel/ImagesByTagNameQuery\";\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\nimport {ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\n\nexport class ImagesByUserIDAction {\n  static readonly type = '[ImageAPI] Images by userId';\n  constructor(public userId: string) { }\n}\n\nexport class ImagesByTagsAction {\n  static readonly type = '[ImageAPI] ImagesByTagsAction';\n  constructor(public imagesByTag: ImagesByTagName) { }\n}\n\nexport class ImagesNextPageAction {\n  static readonly type = '[ImageAPI] NextImagePage';\n  constructor(public imageResponseModel: ImageModel[]) { }\n}\n\nexport class UploadImage {\n  static readonly type = '[ImageAPI] Upload image';\n  constructor(public uploadModel: UploadImageModel) { }\n}\n\nexport class FilterByDate {\n  static readonly type = '[ImageAPI] Filter image'\n  constructor(public limit: number) { }\n}\n\nexport class DeleteImage {\n  static readonly type = '[ImageAPI] Delete image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class SelectImage {\n  static readonly type = '[ImageAPI] Select image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class GetDownloadDetails {\n  static readonly type = '[ImageAPI] Get download details';\n  constructor(public imageId: string, public imageFileDetail: ImageFileDetails) { }\n}\n\nexport class GetImageByImageId {\n  static readonly type = '[ImageAPI] Get image by imageId';\n  constructor(public imageId: string) { }\n}\n\nexport class GetRelatedImagesByTagIDs {\n  static readonly type = '[ImageAPI] Related images';\n  constructor(public tagIds: TagModel[]) { }\n}\n\n\nexport class GetImageAsByse64 {\n  static readonly type = '[ImageAPI] Get image bytes';\n  constructor(public imageId: string) { }\n}\n\nexport class CropAndDownload {\n  static readonly type = '[ImageAPI] Crop and download';\n  constructor(public base64: string) { }\n}\n\nexport class CropDownloadViewImage {\n  static readonly type = '[ImageAPI] Crop download view image';\n  constructor(public data: string) { }\n}\n\nexport class CropGalleryViewImage {\n  static readonly type = '[ImageAPI] Crop gallery view image';\n  constructor(public data: string) { }\n}\n\nexport class SetCroppedOffsetValues {\n  static readonly type = '[ImageAPI] Set cropped image values';\n  constructor(public imgId: string,\n              public offsetX: number, public offsetY: number,\n              public subImageWidth: number,public subImageHeight: number) { }\n}\n\n\n","import {Observable} from \"rxjs\";\n\nexport class QueryTagAction {\n  static readonly type = '[Tag] Query tags';\n  constructor(public searchTerm: Observable<string>) {}\n}\n","import {Observable} from \"rxjs\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\n\r\nexport class RequestMessageAction {\r\n  static readonly type = '[Request] Check request status';\r\n  constructor(public requestStatus: RequestStatus) {}\r\n}\r\n\r\n","export namespace UpdateUserProfileActions {\r\n  export class UploadUserProfileImg {\r\n    static readonly type = '[Update profile] Set user profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n}\r\n","import {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\nexport namespace UserDetailsActions {\r\n  export class UploadUserProfile {\r\n    static readonly type = '[User Action] Upload user-profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n\r\n  export class GetUserDetails {\r\n    static readonly type = '[User Action] Get user details';\r\n    constructor(public userId: string) { }\r\n  }\r\n\r\n  export class SearchUsers {\r\n    static readonly type = '[User Action] Get user profiles';\r\n    constructor(public searchTerm: Observable<string>) {}\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'UserDetails',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class UserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static profileImgPath(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static firstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static getState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserImages(state: BaseUserDetails): ImageModel[] {\r\n    return state.images;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserLikes(state: BaseUserDetails): ImageModel[] {\r\n    return state.likes;\r\n  }\r\n\r\n  @Action(UserDetailsActions.GetUserDetails)\r\n  userDetails(ctx: StateContext<BaseUserDetails>,\r\n              action: UserDetailsActions.GetUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log(response)\r\n          const state = ctx.getState();\r\n          console.log(response)\r\n          console.log(response.images);\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username,\r\n            likes: response.likes,\r\n            images: response.images\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {Country, Region, ZipCodeAndCity} from \"../../domain/address-model/addres.view.model\";\r\nimport {AddCommand} from \"@angular/cli/commands/add-impl\";\r\nimport {AddressValidationService} from \"../../service/address-validation.service\";\r\nimport {ImagesByTagsAction} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {GetZipCodesAndCitiesByRegion, GetCountriesAction, GetRegionsAction} from \"../actions/address-validation-action\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<AddressViewListState>({\r\n  name: 'AddressValidation'\r\n})\r\n@Injectable()\r\nexport class AddressValidationState {\r\n  constructor(private addressService: AddressValidationService) { }\r\n\r\n  @Selector()\r\n  static zipCodesAndCities(state: AddressViewListState): ZipCodeAndCity[] {\r\n    return state.zipCodesAndCity;\r\n  }\r\n\r\n  @Selector()\r\n  static regions(state: AddressViewListState): Region[] {\r\n    return state.regions;\r\n  }\r\n\r\n  @Selector()\r\n  static countries(state: AddressViewListState): Country[] {\r\n    return state.name;\r\n  }\r\n\r\n  @Action(GetCountriesAction)\r\n  getCountries(ctx: StateContext<AddressViewListState>,\r\n               action: GetCountriesAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getCountries()\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              name: res\r\n            }\r\n          )\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  @Action(GetRegionsAction)\r\n  getRegionsByCountry(ctx: StateContext<AddressViewListState>,\r\n                      action: GetRegionsAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getRegionsByCountry(action.countryName)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(\"Du Hund du\")\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              regions: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(GetZipCodesAndCitiesByRegion)\r\n  getZipCodesAndCitiesByRegion(ctx: StateContext<AddressViewListState>,\r\n                      action: GetZipCodesAndCitiesByRegion) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getZipCodesAndCitiesByRegion2(action.zipcode, action.region)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              zipCodesAndCity: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {CropDownloadViewImage, CropGalleryViewImage} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\n\r\n@State<CropImageModel>({\r\n  name: 'cropImage',\r\n  defaults: {\r\n    data: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class CropImageState {\r\n  constructor() {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getCroppedDownloadImage(state: CropImageModel): string {\r\n    return state.downloadViewFile;\r\n  }\r\n\r\n  @Selector()\r\n  static getData(state: CropImageModel): string {\r\n    return state.data;\r\n  }\r\n\r\n  @Action(CropGalleryViewImage)\r\n  cropImage(ctx: StateContext<CropImageModel>, action: CropGalleryViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      data: action.data\r\n    })\r\n  }\r\n\r\n  @Action(CropDownloadViewImage)\r\n  cropDownloadViewImage(ctx: StateContext<CropImageModel>, action: CropDownloadViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      downloadViewFile: action.data\r\n    })\r\n  }\r\n}\r\n","import {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {DeleteImageService} from \"../../../serviceV2/delete-image.service\";\r\nimport {DeleteImage} from \"../actions/image.action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'Delete'\r\n})\r\n@Injectable()\r\nexport class DeleteImageState {\r\n    constructor(private deleteService: DeleteImageService) { }\r\n\r\n    @Action(DeleteImage)\r\n    public deleteUserImage(ctx: StateContext<ImageModel>, action: DeleteImage): Observable<any> {\r\n      return this.deleteService\r\n        .deleteImage(action.image)\r\n        .pipe(map(response => {\r\n          return response;\r\n        }))\r\n    }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {\r\n  ImageFileDetails,\r\n  ImageDownloadResponse,\r\n  ImageDetailsViewModel\r\n} from \"../../domain/imageModel/image-file-details\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {CropGalleryViewImage, GetDownloadDetails} from \"../actions/image.action\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@State<ImageDetailsViewModel>({\r\n  name: 'downloadDetails',\r\n})\r\n@Injectable()\r\nexport class DownloadDetailsState {\r\n  constructor(private downloadService: ImageDownloadService) { }\r\n\r\n  @Selector()\r\n  static getFile(state: ImageDetailsViewModel): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getDetails(state: ImageDetailsViewModel): ImageFileDetails {\r\n    return state.fileDetails;\r\n  }\r\n\r\n  @Action(GetDownloadDetails)\r\n  public getDownloadDetails(ctx: StateContext<ImageFileDetails>, action: GetDownloadDetails): Observable<ImageFileDetails> {\r\n    const state = ctx.getState();\r\n    return this.downloadService\r\n      .downloadImage(action.imageId, action.imageFileDetail)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        ctx.setState({\r\n          ...state,\r\n          downloadLink: res.downloadLink,\r\n          width: res.width,\r\n          height: res.height,\r\n          size: res.size,\r\n          contentType: res.contentType\r\n        })\r\n        return res;\r\n      }))\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {CropAndDownload, CropGalleryViewImage, GetImageAsByse64} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\nexport interface CropAndDownloadStateModel {\r\n  base64: string;\r\n}\r\n\r\n@State<CropAndDownloadStateModel>({\r\n  name: 'CropAndDownload',\r\n  defaults: {\r\n    base64: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class GetBase64ForDownloadCropperState {\r\n\r\n  constructor(private service: ImageRequestService) {\r\n\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getBase64(state: CropAndDownloadStateModel): string {\r\n    return state.base64;\r\n  }\r\n\r\n  @Selector()\r\n  public static getModel(state: CropAndDownloadStateModel): CropAndDownloadStateModel {\r\n    return state;\r\n  }\r\n\r\n  @Action(GetImageAsByse64)\r\n  getDataAsBytes(ctx: StateContext<CropAndDownloadStateModel>, action: GetImageAsByse64): Observable<CropAndDownloadStateModel> {\r\n    return this.service\r\n      .getImageBytes(action.imageId)\r\n      .pipe(map(byteArray => {\r\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n        let reader = new FileReader();\r\n        let state = ctx.getState();\r\n        reader.onload = (evt: any) => {\r\n          ctx.patchState({\r\n            ...state,\r\n            base64: evt.target.result\r\n          })\r\n        };\r\n        reader.readAsDataURL(blob);\r\n        return GetBase64ForDownloadCropperState.getModel(state);\r\n      }))\r\n  }\r\n\r\n  @Action(CropAndDownload)\r\n  getData(ctx: StateContext<CropAndDownloadStateModel>, action: CropAndDownload): Observable<CropAndDownloadStateModel> {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      base64: action.base64\r\n    })\r\n    return of(ctx.getState());\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDetailsViewModel, ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {GetImageByImageId} from \"../actions/image.action\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'modelDetails',\r\n})\r\n@Injectable()\r\nexport class GetImageByIdState {\r\n  constructor(private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getImageDetail(state: ImageModel): ImageModel {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getFileDetails(state: ImageModel): ImageFileDetails {\r\n    return state.imageDetails[0];\r\n  }\r\n\r\n  @Selector()\r\n  public static getRatioAsString(state: ImageModel): number {\r\n    return state.imageDetails[0].width /state.imageDetails[0].height;\r\n  }\r\n\r\n  @Action(GetImageByImageId)\r\n  getImageById(ctx: StateContext<ImageModel>, action: GetImageByImageId): Observable<ImageModel> {\r\n    return this.imgReqService\r\n      .getImagesByImgId(action.imageId)\r\n      .pipe(map(req => {\r\n          let state = ctx.getState();\r\n        const newState = {\r\n          imageId: req.imageId,\r\n          link: req.link,\r\n          name: req.name,\r\n          profileImg: req.profileImg,\r\n          linkReference: req.linkReference,\r\n          isPublic: req.isPublic,\r\n          tags: req.tags,\r\n          user: req.user,\r\n          downloaded: req.downloaded,\r\n          liked: req.liked,\r\n          imageDetails: req.imageDetails\r\n        };\r\n        ctx.setState(newState)\r\n        return newState;\r\n        })\r\n      )\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {Injectable} from \"@angular/core\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {ImagesByTagsAction, ImagesNextPageAction} from \"../actions/image.action\";\nimport {map, switchMap, tap} from \"rxjs/operators\";\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\n\n\n@State<ImagesByTagNameStateModel>({\n  name: 'image',\n  defaults: {\n    page: 0,\n    searchTerm: \"\",\n    imagResponseList: null\n  }\n\n})\n@Injectable()\nexport class ImagesByTagState {\n  constructor(private imageRequestService: ImageRequestService) {\n  }\n\n\n  @Selector()\n  static getData(state: ImagesByTagNameStateModel): ImageModel[] {\n    return state.imagResponseList;\n  }\n\n\n\n  @Action(ImagesByTagsAction)\n  searchByTags(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesByTagsAction): Observable<ImageModel[]> {\n    const state = ctx.getState();\n    const term = action.imagesByTag.searchTerm;\n    console.log(action.imagesByTag.filterOpt);\n\n    let dayFilterVal;\n\n    if (action.imagesByTag\n      .filterOpt && action.imagesByTag\n      .filterOpt.timeFilterOptions) {\n      dayFilterVal = action.imagesByTag\n        .filterOpt\n        .timeFilterOptions\n        .filter(value => value.checked)\n        .map(filterByDays => filterByDays.value);\n    }\n\n\n    console.log(dayFilterVal);\n    let page = state.page;\n    page = term !== state.searchTerm ? 0 : page;\n    return this.imageRequestService\n      .getImagesByTag(\n        {\n          tagName: term,\n          filterByDays: dayFilterVal !== undefined ? dayFilterVal[0] : null,\n          mostDownloaded: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostDownloads.checked : null,\n          mostLiked: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostLiked.checked : null\n        },\n        page)\n      .pipe(\n        map(res => {\n          ctx.patchState(\n            {\n              ...state,\n              page: page,\n              searchTerm: term,\n              imagResponseList: res\n            }\n          )\n          return state.imagResponseList;\n        })\n      )\n  }\n\n  // @Selector()\n  // static getImageData(state: ImagesByTagNameQuery): ImageModelList {\n  //   return state.imagResponseList;\n  // }\n\n  /*@Action(ImagesNextPageAction)\n  getNextPage(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesNextPageAction) {\n    const state = ctx.getState();\n    const nextPage = state.page + 1;\n\n    return this.imageRequestService\n      .getImagesByTag(state.searchTerm, nextPage)\n      .pipe(\n        tap(res => {\n          console.log(res.length);\n          ctx.setState(\n            {\n              ...state,\n              page: nextPage,\n              searchTerm: state.searchTerm,\n              imagResponseList: res.length === 0 ? state.imagResponseList :\n                state.imagResponseList.concat(res)\n            }\n          )\n        })\n      )\n  }*/\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {ImagesByTagsAction, ImagesByUserIDAction, ImagesNextPageAction} from \"../actions/image.action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\n\r\n@State<ImageModelList>({\r\n  name: 'ImagesByUserId'\r\n})\r\n@Injectable()\r\nexport class ImagesByUserIdState {\r\n  constructor(private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getData(state: ImageModelList): ImageModel[] {\r\n    return state.models;\r\n  }\r\n\r\n  @Action(ImagesByUserIDAction)\r\n  searchByTags(ctx: StateContext<ImageModelList>, action: ImagesByUserIDAction) {\r\n    const state = ctx.getState();\r\n    return this.imageRequestService\r\n      .getImagesByUserId(action.userId)\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              models: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext, Store} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'LoggedDetails'\r\n})\r\n@Injectable()\r\nexport class LoggedUserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: UpdateUserService,\r\n              private store: Store) {\r\n  }\r\n\r\n  @Selector()\r\n  static getProfile(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserId(state: BaseUserDetails): string {\r\n    return state.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUsername(state: BaseUserDetails): string {\r\n    return state.username;\r\n  }\r\n\r\n  @Selector()\r\n  static getLoggedState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoggedUserDetails)\r\n  getUserDetails(ctx: StateContext<BaseUserDetails>,\r\n                 action: AuthenticationActions.LoggedUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(UserDetailsActions.UploadUserProfile)\r\n  uploadProfileImage(ctx: StateContext<BaseUserDetails>,\r\n                     action: UserDetailsActions.UploadUserProfile): Observable<any> {\r\n    return this.imageRequestService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(map(res => {\r\n        if (res.status === 200) {\r\n          console.log(res.body);\r\n          const state = ctx.getState();\r\n          return this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n        }\r\n      }))\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {IUserAuthState, UserAuthStateModel} from \"../../domain/UserAuthStateModel\";\r\nimport {IUserLoginModel, LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {catchError, map, retry, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {BehaviorSubject, Observable, Subject, throwError} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {BaseUserDetails, UserDetailsImpl} from \"../../domain/userModel/user-details.model\";\r\n\r\n@State<IUserAuthState>({\r\n  name: 'Authentication',\r\n  defaults: {\r\n    user: undefined,\r\n    status: false\r\n  }\r\n})\r\n@Injectable()\r\nexport class LoginStateModel {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static loggedUserId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static isLoggedIn(state: IUserAuthState): boolean {\r\n    return state.status;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedInUser(state: IUserAuthState): BaseUserDetails {\r\n    return state.user;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstName(state: IUserAuthState): string {\r\n    return state.user.firstName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedLastName(state: IUserAuthState): string {\r\n    return state.user.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static userName(state: IUserAuthState): string {\r\n    return state.user.username;\r\n  }\r\n\r\n  @Selector()\r\n  static userId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static profileImg(state: IUserAuthState): string {\r\n    return state.user.profileImgPath;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoginAction)\r\n  login(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.LoginAction) {\r\n    const loginType = action.userLoginModel.password === undefined ? \"GOOGLE\" : \"DEFAULT\";\r\n    return this.authService.login(action.userLoginModel, loginType)\r\n      .pipe(\r\n        tap(response => {\r\n          const status = response.status === 200;\r\n          const userId = response.headers.get(\"UserId\");\r\n          const state = ctx.getState();\r\n          console.log(response);\r\n          const body = response.body;\r\n          console.log(body)\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email,\r\n            },\r\n            status: status\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.IsLoggedIn)\r\n  isLoggedIn(ctx: StateContext<IUserAuthState>,\r\n             action: AuthenticationActions.IsLoggedIn): Observable<boolean> {\r\n    return this.authService.isLoggedIn()\r\n      .pipe(\r\n        map(response => {\r\n          const status = response.status === 200;\r\n          const state = ctx.getState();\r\n          const body = response.body;\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email\r\n            },\r\n            status: status\r\n          })\r\n          return status;\r\n        }), retry(1), catchError(err => {\r\n          console.log(\"Error in isLoggedin\");\r\n          return throwError(err);\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.Logout)\r\n  logout(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.Logout) {\r\n    return this.authService.logout()\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            user: null,\r\n            status: false\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CroppedDownloadRequest} from \"../../domain/http/req/CroppedDownloadRequest\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {SetCroppedOffsetValues} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {flatMap, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\r\n\r\n@State<CroppedDownloadRequest>({\r\n  name: 'prepareForCroppedDownloadRequest'\r\n})\r\n@Injectable()\r\nexport class PrepareCroppedForDownloadState {\r\n  constructor(private downloadService: ImageDownloadService,\r\n              private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getCroppedValues(state: CroppedDownloadRequest): CroppedDownloadRequest {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(SetCroppedOffsetValues)\r\n  public setCroppedOffsetValues(ctx: StateContext<CroppedDownloadRequest>,\r\n                                action: SetCroppedOffsetValues): Observable<CroppedDownloadRequest> {\r\n    const subImageWidth = action.subImageWidth;\r\n    const subImageHeight = action.subImageHeight;\r\n\r\n    let possibleResolutions: Array<string> = [];\r\n\r\n\r\n    // put cropped image resolution into the resolutionList\r\n    possibleResolutions.push(subImageWidth.toFixed(0) + \" x \" + subImageHeight.toFixed(0))\r\n\r\n    // get possible app resolution array from endpoint\r\n    return this.imgReqService\r\n      .getResolutions()\r\n      .pipe(switchMap(response => {\r\n        let state = ctx.getState();\r\n        const ratio = subImageWidth / subImageHeight;\r\n\r\n        // check if querformat or hochformat\r\n        if (subImageWidth > subImageHeight) {\r\n          response.widthList\r\n            .forEach(widthResolution => {\r\n              if (subImageWidth > widthResolution) {\r\n                const height = widthResolution / ratio;\r\n                possibleResolutions.push(widthResolution + \" x \" + height.toFixed(0));\r\n              }\r\n            })\r\n\r\n          // only take lower resolutions from response array\r\n        } else if (subImageHeight > subImageWidth) {\r\n          response.heightList\r\n            .forEach(heightResolution => {\r\n              if (subImageHeight > heightResolution) {\r\n                const width = heightResolution * ratio;\r\n                possibleResolutions.push(width.toFixed(0) + \" x \" + heightResolution.toFixed(0));\r\n              }\r\n            })\r\n\r\n        }\r\n        ctx.patchState({\r\n          ...state,\r\n          offsetX: action.offsetX,\r\n          offsetY: action.offsetY,\r\n          subImageWidth: subImageWidth,\r\n          subImageHeight: subImageHeight,\r\n          possibleResolutions: possibleResolutions\r\n        })\r\n        return of(ctx.getState());\r\n      }));\r\n  }\r\n}\r\n\r\n\r\nexport interface ResolutionsResponse {\r\n  widthList: Array<number>;\r\n  heightList: Array<number>;\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\nimport {GetRelatedImagesByTagIDs} from \"../actions/image.action\";\r\n\r\n@State<RelatedImagesModel>({\r\n  name: 'RelatedImages'\r\n})\r\n@Injectable()\r\nexport class RelatedImagesState {\r\n  constructor(private imageReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getRelatedImages(state: RelatedImagesModel): ImageModel[] {\r\n    return state.data;\r\n  }\r\n\r\n  @Action(GetRelatedImagesByTagIDs)\r\n  userDetails(ctx: StateContext<RelatedImagesModel>,\r\n              action: GetRelatedImagesByTagIDs): Observable<ImageModel[]> {\r\n    return this.imageReqService.getRelatedImagesByTagList(action.tagIds)\r\n      .pipe(\r\n        map(response => {\r\n          console.log(response)\r\n          let state = ctx.getState();\r\n          state.data = response;\r\n          ctx.setState({\r\n            data: response\r\n          })\r\n          return response;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport interface RelatedImagesModel {\r\n  data: ImageModel[]\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<RequestStatus>({\r\n  name: 'RequestStatus'\r\n})\r\n@Injectable()\r\nexport class RequestStatusState {\r\n\r\n  @Selector()\r\n  static getStatus(state: RequestStatus): RequestStatus {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(RequestMessageAction)\r\n  getRequestStatus(ctx: StateContext<RequestStatus>, action: RequestMessageAction) {\r\n    let state = ctx.getState();\r\n    state.message = '';\r\n    if (action.requestStatus !== null) {\r\n      ctx.setState({\r\n        message: action.requestStatus.message,\r\n        status: action.requestStatus.status !== null ?\r\n          action.requestStatus.status : null\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {Injectable} from \"@angular/core\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {tap} from \"rxjs/operators\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\n\n@State<TagQueryList>({\n  name: 'tag'\n})\n@Injectable()\nexport class SearchByTagState {\n  constructor(public tagService: TagRequestService) {\n  }\n\n  @Selector()\n  static tags(state: TagQueryList): TagQueryList {\n    return state;\n  }\n\n  @Selector()\n  static getFetchedTagListAsOption(state: TagQueryList): SearchViewModel[] {\n    return state.result\n      .map(val => {\n        return {\n          value: val.tag\n        }\n      });\n  }\n\n  @Selector()\n  static getFetchedTagList(state: TagQueryList): TagModel[] {\n    return state.result;\n  }\n\n  @Action(QueryTagAction)\n  queryTags(ctx: StateContext<TagQueryList>, action: QueryTagAction) {\n    return this.tagService\n      .searchByTagName(action.searchTerm)\n      .pipe(\n        tap(res => {\n          const state = ctx.getState();\n          //ctx.patchState({result: res})\n          ctx.setState({\n            ...state,\n            result: res\n          })\n        })\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SearchByUsersService} from \"../../../serviceV2/search-by-users.service\";\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {map, tap} from \"rxjs/operators\";\nimport {UserDetailsActions} from \"../actions/user-details.action\";\nimport SearchUsers = UserDetailsActions.SearchUsers;\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\n\n@State<UserSearchModel>({\n  name: 'users'\n})\n@Injectable()\nexport class SearchByUsersState {\n\n  constructor(public userSearchService: SearchByUsersService) { }\n\n  @Selector()\n  static getFetchedUsersAsOptions(state: UserSearchModel): SearchViewModel[] {\n    console.log(state.data);\n    return state.data.map(val => {\n      return {\n        value: val.username\n      }\n    });\n  }\n\n\n  @Selector()\n  static getFetchedUsers(state: UserSearchModel): BaseUserDetails[] {\n    console.log(state.data);\n    return state.data;\n  }\n\n  @Action(SearchUsers)\n  queryTags(ctx: StateContext<UserSearchModel>, action: SearchUsers) {\n    return this.userSearchService\n      .searchByTagName(action.searchTerm)\n      .pipe(map(response => {\n        console.log(response)\n        const users = {data: response};\n        const state = ctx.getState();\n        ctx.patchState({\n          ...state,\n          data: response\n        })\n        return ctx.getState();\n      }))\n  }\n}\n\nexport interface UserSearchModel {\n  data: BaseUserDetails[];\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {GetImageByImageId, SelectImage} from \"../actions/image.action\";\r\n\r\n\r\n\r\n\r\n@State<SelectedImage> ( {\r\n  name: 'SelectImage'\r\n} )\r\n@Injectable()\r\nexport class SelectImageState {\r\n  constructor() { }\r\n\r\n  @Selector()\r\n  static getSelectedImage(state: SelectImage): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageUrlReference(state: SelectImage): string {\r\n    return state.image.linkReference;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageId(state: SelectImage): string {\r\n    return state.image.imageId;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedLink(state: ImageModel): string {\r\n    return state.link;\r\n  }\r\n\r\n  @Selector()\r\n  static getIsPublic(state: SelectImage): boolean {\r\n    return state.image.isPublic;\r\n  }\r\n\r\n  @Action(SelectImage)\r\n  selectImage(ctx: StateContext<SelectedImage>, action: SelectImage) {\r\n    const state = ctx.getState();\r\n    ctx.setState( {\r\n      ...state,\r\n      image: action.image\r\n    } )\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\r\nimport {LoggedInUserModel, UserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {EMPTY, Observable} from \"rxjs\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {Country} from \"../../domain/address-model/addres.view.model\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\n\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'Signup',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class SignupState {\r\n  constructor(private authService: UserAuthenticationService) {\r\n  }\r\n\r\n  @Selector()\r\n  static registrationModel(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n\r\n\r\n  @Action(AuthenticationActions.SignUpAction)\r\n  createNewUser(ctx: StateContext<BaseUserDetails>,\r\n                action: AuthenticationActions.SignUpAction): Observable<LoggedInUserModel> {\r\n    return this.authService.createNewUser(action.userRegistration)\r\n      .pipe(\r\n        map(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: action.userRegistration.firstName,\r\n            lastName: action.userRegistration.lastName,\r\n            email: action.userRegistration.email,\r\n            password: action.userRegistration.password,\r\n            address: action.userRegistration.address\r\n          })\r\n\r\n          return response;\r\n        }), catchError(err => {\r\n          ctx.dispatch(new RequestMessageAction({ status: err.status, message: err.error.message}))\r\n          return EMPTY;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\nimport {UpdateUserProfileActions} from \"../actions/update-user-profile.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'foo'\r\n})\r\n@Injectable()\r\nexport class UpdateUserProfileImageState {\r\n  constructor(private updateProfileService: UpdateUserService) { }\r\n\r\n  @Action(UpdateUserProfileActions.UploadUserProfileImg)\r\n  setProfile(ctx: StateContext<UploadImageModel>,\r\n             action: UpdateUserProfileActions.UploadUserProfileImg) {\r\n    return this.updateProfileService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(tap(response => {\r\n        const state = ctx.getState();\r\n        state.file = action.file;\r\n        state.userId = action.userId;\r\n        ctx.patchState({...state})\r\n      }))\r\n\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UploadImage} from \"../actions/image.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {ImageUploadService} from \"../../../serviceV2/image-upload.service\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'Upload'\r\n\r\n})\r\n@Injectable()\r\nexport class UploadImageState {\r\n  constructor(private uploadService: ImageUploadService) {\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(UploadImage)\r\n  uploadImage(ctx: StateContext<UploadImageModel>,\r\n              action: UploadImage): Observable<any> {\r\n\r\n    // const userId = action.uploadModel.userId;\r\n    // const image = action.uploadModel.file;\r\n    return this.uploadService\r\n      .addToUserLibrary(action.uploadModel)\r\n      .pipe(\r\n        tap(response => {\r\n          // console.log(response.status)\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            userId: action.uploadModel.userId,\r\n            orgFile: action.uploadModel.orgFile,\r\n            downloadFile: action.uploadModel.downloadFile,\r\n            status: response.status === 200\r\n          })\r\n        })\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {Store} from \"@ngxs/store\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\n\n@Component({\n  selector: 'app-dialog-wrapper',\n  templateUrl: './login-dialog-wrapper.component.html',\n  styleUrls: ['./login-dialog-wrapper.component.scss']\n})\nexport class LoginDialogWrapperComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private store: Store) { }\n\n  ngOnInit(): void {\n    const ref = new MatDialogConfig();\n    this.dialog.open(LoginComponent,\n      {\n        width: '750px',\n        height: '400px',\n        disableClose: true,\n        autoFocus: false\n      });\n  }\n\n}\n","<app-search-toolbar></app-search-toolbar>\n\n","export class UserAddressModel {\r\n  street: string;\r\n  region: string;\r\n  zipcode: string;\r\n  country: string;\r\n\r\n\r\n  constructor(street: string,\r\n              region: string,\r\n              zipcode: string,\r\n              country: string) {\r\n    this.street = street;\r\n    this.region = region;\r\n    this.zipcode = zipcode;\r\n    this.country = country;\r\n  }\r\n}\r\n","import {ImageModel} from \"./image.model\";\r\nimport {FilterCheckBox} from \"../../../public/search-toolbar/search.toolbar.component\";\r\n\r\nexport interface ImagesByTagName {\r\n  page?: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n  filterOpt?: FilterCheckBox;\r\n}\r\n\r\nexport class FilterName {\r\n  public static readonly FILTER_BY_DATE_WEEK = \"WEEK\";\r\n  public static readonly FILTER_BY_DATE_MONTH = \"MONTH\";\r\n  public static readonly FILTER_BY_DATE_YEAR = \"YEAR\";\r\n  public static readonly FILTER_BY_MOST_DOWNLOADS = \"DOWNLOADS\";\r\n  public static readonly FILTER_BY_MOST_LIKES = \"LIKES\";\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterArgs implements ImagesByTagName{\r\n  searchTerm: string;\r\n  filters: Map<string, boolean>;\r\n\r\n  constructor(searchTerm: string, filters: Map<string, boolean>) {\r\n    this.searchTerm = searchTerm;\r\n    this.filters = filters;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterOpt implements ImagesByTagName{\r\n  filterOpt: FilterCheckBox;\r\n  searchTerm: string;\r\n\r\n\r\n  constructor(filterOpt: FilterCheckBox, searchTerm: string) {\r\n    this.filterOpt = filterOpt;\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\n\r\nexport class ImagesByTagNameQueryImpl implements ImagesByTagName{\r\n  searchTerm: string;\r\n\r\n  constructor(searchTerm: string) {\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameStateModel implements ImagesByTagName{\r\n  page: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n\r\n  constructor(page: number,\r\n              searchTerm: string,\r\n              imagResponseList: ImageModel[]) {\r\n    this.page = page;\r\n    this.searchTerm = searchTerm;\r\n    this.imagResponseList = imagResponseList;\r\n  }\r\n}\r\n","export interface IUserLoginModel {\n  userId?: string;\n  email: string;\n  password?: string;\n  firstName?: string;\n  lastName?: string;\n  profileImg?: string;\n  tokenId?: string;\n}\n\nexport class UserLoginModel implements IUserLoginModel{\n  email: string;\n  password: string;\n\n  constructor(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n  }\n}\n\nexport class LoggedInUserModel implements IUserLoginModel {\n  email: string;\n  userId: string;\n\n  constructor(userId: string, email: string) {\n    this.email = email;\n    this.userId = userId;\n  }\n}\n\nexport class GoogleUserLogin implements IUserLoginModel {\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileImg: string;\n  tokenId: string;\n\n\n  constructor(email: string, firstName: string, lastName: string, profileImg: string, tokenId: string) {\n    this.email = email;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.profileImg = profileImg;\n    this.tokenId = tokenId;\n  }\n}\n","import {UserAddressModel} from \"../address-model/user-address-model\";\r\nimport {ImageModel} from \"../imageModel/image.model\";\r\n\r\nexport interface BaseUserDetails {\r\n  userId?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  username?: string;\r\n  likes?: ImageModel[];\r\n  images?: ImageModel[];\r\n  profileImgPath?: string;\r\n  password?: string;\r\n  address?: UserAddressModel;\r\n}\r\n\r\nexport class UserRegistrationModel implements BaseUserDetails{\r\n  address?: UserAddressModel;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: string;\r\n\r\n  constructor(firstName: string, lastName: string,\r\n              email: string, password: string,\r\n              street: string, region: string,\r\n              zipcode: string, country:string) {\r\n    this.address = new UserAddressModel(street, region, zipcode, country);\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n\r\nexport class UserDetailsImpl implements BaseUserDetails{\r\n  userId: string\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImgPath: string;\r\n  username: string;\r\n\r\n\r\n  constructor(userId: string, email: string,\r\n              firstName: string, lastName: string,\r\n              profileImgPath: string, username: string) {\r\n    this.userId = userId;\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.profileImgPath = profileImgPath;\r\n    this.username = username;\r\n  }\r\n}\r\n\r\n\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\nimport {ImageModelList} from \"../domain/imageModel/image-model-list\";\nimport {ImageModel, ImageViewModel} from \"../domain/imageModel/image.model\";\nimport {map, switchMap, tap, throttleTime} from \"rxjs/operators\";\nimport {ImageTile} from \"./image-tile\";\nimport {TileRandomizer} from \"./tile-randomizer\";\nimport {Tile} from \"./tile\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {\n  GetDownloadDetails,\n  GetImageByImageId, GetRelatedImagesByTagIDs,\n  ImagesByTagsAction,\n  ImagesByUserIDAction,\n  ImagesNextPageAction,\n  SelectImage\n} from \"../app-state/actions/image.action\";\nimport {ImagesByTagNameQueryImpl, ImagesByTagNameWithFilterOpt} from \"../domain/imageModel/ImagesByTagNameQuery\";\nimport {Router} from \"@angular/router\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {ImageDetailViewComponent} from \"../image-detail-view/image-detail-view.component\";\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\n\n@Component({\n  selector: 'app-image-content',\n  templateUrl: './image-content.component.html',\n  styleUrls: ['./image-content.component.scss']\n})\nexport class ImageContentComponent implements OnInit {\n\n  @Input('data') models: Observable<ImageModel[]>;\n  @Input('isProfile') isProfile: boolean;\n\n  panelOpenState = false;\n  //fetched data\n  public data: ImageModel[];\n  @Select(ImagesByTagState.getData) fData$: Observable<ImageModel[]>;\n  @Select(LoginStateModel.loggedUserId) $loggedUserId;\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  @Select(ImagesByUserIdState.getData) $imageData;\n  loggedUserState: BaseUserDetails;\n  hover: boolean = false;\n  editable: boolean = false;\n\n\n  //AutoScroll\n  @ViewChild(CdkVirtualScrollViewport)\n  viewport: CdkVirtualScrollViewport;\n  test = new Array<string>();\n  end = false;\n  offset = new Subject();\n  evenRowLimit = new Subject<boolean>();\n  infinite: Observable<any[]>;\n  showLoadBtn: boolean;\n  dataEvenRowSize: number;\n  breakpoint: any;\n  downloadLink: any;\n  rows = new Subject<ImageRowView[]>();\n  imageViewModel: ImageViewModel[];\n\n  constructor(private store: Store,\n              public imgReqService: ImageRequestService,\n              private router: Router,\n              private updateUserService: UpdateUserService,\n              private dialog: MatDialog,\n              private downloadService: ImageDownloadService) {\n  }\n\n\n  ngOnInit(): void {\n\n    this.models.subscribe(value => {\n      const imageRowViews: ImageRowView[] = ImageRowMapper.mapToImageRow(value);\n      // if (imageRowViews) console.log(imageRowViews.length);\n      this.rows.next(imageRowViews);\n      // let countRow: number = 0;\n      // let countItem: number = 0;\n      // let rowModels: ImageRowView[] = [];\n      // let temp: ImageModel[] = [];\n      // let diffRatio: ImageRowView = {row: null, content: []};\n      // if (value !== undefined && value !== null) {\n      //   value.forEach((value1, index) => {\n      //     countItem++;\n      //     if (countItem <= 3) temp.push(value1);\n      //     if (countItem == 3) {\n      //       countItem = 0;\n      //       rowModels.push({row: countRow, content: temp});\n      //       temp = [];\n      //       countRow++;\n      //     }\n      //     if (index == value.length - 1) {\n      //       rowModels.push({row: countRow, content: temp});\n      //     }\n      //   })\n      //   console.log(rowModels);\n      // }\n    })\n\n    this.$loggedUserId.subscribe(id => {\n      console.log(id);\n      this.models.subscribe(data => {\n        if (data) {\n          for (let i = 0; i < data.length; i++) {\n            if (data[i].user.userId !== id) {\n              // console.log(data[i]);\n              // console.log(id);\n              this.editable = false;\n              break;\n            } else {\n              this.editable = true;\n            }\n          }\n        }\n      })\n    })\n\n    console.log(this.editable);\n\n    // const batchMap = this.offset.pipe(\n    //   throttleTime(500),\n    //   tap(x => console.log(x))\n    // );\n    //\n    //\n    // batchMap.subscribe(value => console.log(value))\n\n    // this.fData$.subscribe(value => {\n    //   if (value !== undefined && value != null) {\n    //     this.dataEvenRowSize = Math.floor(value.length / 3);\n    //     this.data = value;\n    //     this.evenRowLimit.next(true)\n    //   }\n    // })\n\n  }\n\n  public nextBatch(e, offset) {\n    if (this.end) { return; }\n    const end = this.viewport.getRenderedRange().end;\n    var total = this.viewport.getDataLength();\n    console.log(total);\n    console.log(end);\n    this.offset.subscribe(value => console.log(value));\n    if (end == total) this.offset.next(offset);\n  }\n\n  public getBatch(lastSeen: string) {\n\n  }\n\n  onResize($event: any) {\n\n  }\n\n  enter() {\n    this.hover = true;\n    console.log(this.hover);\n  }\n\n  leave() {\n    this.hover = false;\n    console.log(this.hover);\n  }\n\n  download(img: ImageModel): void {\n    console.log(img)\n    this.store.dispatch(new GetImageByImageId(img.imageId))\n    this.router.navigate(['image', { imageId: img.imageId }]);\n  }\n\n  clickedTag(tag: string) {\n    this.store.dispatch(new ImagesByTagsAction(\n      new ImagesByTagNameWithFilterOpt(null, tag)))\n      .subscribe(value => {\n        console.log(value);\n        console.log(\"Search pressed..\");\n        this.router.navigate(['/image-by-tags']);\n      });\n    /*this.store.dispatch(\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\n    ).subscribe(value => {\n      /!*this.store.dispatch(new Navigate(['/image-by-tags']))*!/\n      this.router.navigate(['image-by-tags'])\n    });*/\n\n  }\n\n  reachedLastEvenElement(val) {\n    console.log(val)\n  }\n\n  track(index: number, el: any): number {\n    return index;\n  }\n\n  loadNextPage() {\n    this.store.dispatch(new ImagesNextPageAction(this.data))\n  }\n\n  navigateToUser(item: ImageModel): void {\n    console.log(item.user.userId);\n    this.store.dispatch(\n      new Navigate(['profile', {userId: item.user.userId}])\n    )\n  }\n\n  showImageDetailDialog(item: ImageModel): void {\n    this.store.dispatch(new SelectImage(item))\n      .subscribe(value => {\n        const ref = new MatDialogConfig();\n        this.dialog.open(ImageDetailViewComponent,\n          {\n            width: '1150px',\n            height: '600px',\n            data: item\n            // disableClose: true,\n            // autoFocus: false\n          });\n      })\n\n  }\n\n  changeImageDetails(item: ImageModel): void {\n    if (this.isProfile && this.editable) {\n      this.store.dispatch(new SelectImage(item))\n      this.dialog.open(ChangeImageDetailsDialogComponent,\n        {\n          width: '780px',\n          height: '780px',\n          data: item\n        }\n      );\n    }\n  }\n\n\n  showAddTagsDialog(item: ImageModel): void {\n    const ref = new MatDialogConfig();\n    // ref.disableClose = true;\n    this.store.dispatch(new SelectImage(item))\n    this.dialog.open(AddTagsDialogComponent,\n      {\n        width: '435px',\n        height: '600px',\n        data: item,\n        panelClass: 'add-tag-dialog'\n      }\n    );\n\n    this.dialog.afterAllClosed\n      .subscribe(value => {\n        console.log(\"FOO\")\n        this.store.dispatch(new Navigate(['profile', {userId: item.user.userId}]))\n      })\n  }\n\n  // when not logged user likes image then redirect to login page\n\n  likeImage(item: ImageModel, userId: string): void {\n    console.log(this.store.selectSnapshot(LoginStateModel.loggedUserId));\n    this.store.dispatch(new IsLoggedIn())\n      .subscribe(value1 => {\n        this.updateUserService.addUserLike(item.imageId, value1.Authentication.user.userId)\n          .subscribe(value => console.log(value));\n        this.store.dispatch(new UserDetailsActions.GetUserDetails(userId))\n      });\n  }\n}\n\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {AddTagsDialogComponent} from \"../../private/add-tags-dialog/add-tags-dialog.component\";\n\n\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\nimport {ImageRowView} from \"../domain/ImageRowView\";\nimport {ImageRowMapper} from \"../image-row-mapper\";\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport IsLoggedIn = AuthenticationActions.IsLoggedIn;\nimport {HttpClient} from \"@angular/common/http\";\nimport * as FileSaver from \"file-saver\";\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\nimport {ChangeImageDetailsDialogComponent} from \"../../private/change-image-details-dialog/change-image-details-dialog.component\";\nimport {FileSaverService} from \"ngx-filesaver\";\n","<!--<div class=\"testing\">-->\n<!--  <cdk-virtual-scroll-viewport itemSize=\"2\" class=\"example-viewport\">-->\n<!--    <div *cdkVirtualFor=\"let item of rows | async\" class=\"example-item\">-->\n<!--&lt;!&ndash;      <div style=\"width: 1450px; height: 450px;&ndash;&gt;-->\n<!--&lt;!&ndash;                color: #3f51b5;&ndash;&gt;-->\n<!--&lt;!&ndash;                display: grid; grid-column-gap: 10px; grid-template-columns: 33%33%33%;\">&ndash;&gt;-->\n<!--&lt;!&ndash;        <div style=\"margin: 10px; width: 100%\" *ngFor=\"let item2 of item.content\">&ndash;&gt;-->\n<!--&lt;!&ndash;          <img class=\"img\" width=\"330px\" height=\"200px\" [src]=\"item2.link\">&ndash;&gt;-->\n<!--&lt;!&ndash;        </div>&ndash;&gt;-->\n<!--&lt;!&ndash;      </div>&ndash;&gt;-->\n\n<!--    </div>-->\n<!--  </cdk-virtual-scroll-viewport>-->\n<!--</div>-->\n\n\n<div class=\"container\">\n  <div *ngFor=\"let item of (models | async); index as i; trackBy: track\" class=\"tile\">\n\n    <div class=\"tile-container\">\n      <div class=\"img-tile\">\n        <img class=\"img\"  [src]=\"item.link\">\n      </div>\n      <div class=\"details\">\n\n        <div *ngIf=\"!item.user.profileImgPath\" class=\"profile-icon\">\n          <button class=\"btn\" mat-icon-button>\n            <mat-icon style=\"font-size: 70px; color: white\">account_circle</mat-icon>\n          </button>\n          <a mat-button style=\"font-size: 20px\" *ngIf=\"!item.user.profileImgPath\" class=\"header\"\n             (click)=\"navigateToUser(item)\">\n            {{ item.user.email.substr(0, item.user.email.indexOf('@')) }}\n          </a>\n        </div>\n\n        <div *ngIf=\"item.user.profileImgPath\" class=\"profile-img\">\n          <a mat-button *ngIf=\"item.user.profileImgPath\" class=\"account-btn\" (click)=\"navigateToUser(item)\">\n            <img class=\"shadow3\" id=\"img-profile\" [src]=\"item.user.profileImgPath\" alt=\"\">\n            <span id=\"user-txt\">{{ item.user.email.substr(0, item.user.email.indexOf('@')) }}</span>\n          </a>\n          <!--          <a mat-button *ngIf=\"item.user.profileImgPath\" class=\"header2\" (click)=\"navigateToUser(item)\">-->\n          <!--            {{ item.user.email.substr(0, item.user.email.indexOf('@')) }}-->\n          <!--          </a>-->\n        </div>\n\n\n        <div class=\"link\">\n          <a mat-button>\n            <mat-icon matTooltip=\"This image is public\" (click)=\"changeImageDetails(item)\"\n                      *ngIf=\"item.isPublic\">public\n            </mat-icon>\n            <mat-icon matTooltip=\"This image is private\" (click)=\"changeImageDetails(item)\"\n                      *ngIf=\"!item.isPublic\">lock\n            </mat-icon>\n          </a>\n        </div>\n\n        <div class=\"content-btn\">\n          <button matTooltip=\"Click to open menu\"\n                  style=\"color: white; font-size: 50px\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"menu\"\n                  aria-label=\"Example icon-button with a menu\">\n            <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button *ngIf=\"editable && isProfile\"\n                    (click)=\"showAddTagsDialog(item)\"\n                    mat-menu-item>\n              <mat-icon>edit</mat-icon>\n              <span>Add tags</span>\n            </button>\n            <button (click)=\"showImageDetailDialog(item)\" mat-menu-item>\n              <mat-icon>fullscreen</mat-icon>\n              <span>Fullscreen</span>\n            </button>\n            <a mat-menu-item (click)=\"download(item)\">\n              <mat-icon>save_alt</mat-icon>\n              <span>Download image</span>\n            </a>\n            <a matTooltip=\"Go to {{item.linkReference}}\"\n               mat-menu-item\n               [href]=\"item.linkReference\">\n              <mat-icon>public</mat-icon>\n              <span>Go to source</span>\n            </a>\n          </mat-menu>\n        </div>\n        <div class=\"likes\">\n          <a class=\"thumbUp\" (click)=\"likeImage(item, item.userId)\"\n             mat-icon-button>\n            <mat-icon style=\"font-size: 30px; color: white\">thumb_up</mat-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"tags\">\n      <a class=\"shadow\" (click)=\"clickedTag(i.tag)\" href=\"#\" style=\"background-color: #fcefee;\n        color: black;\n        text-decoration: none;\n        padding: 5px 20px;\n        border-radius: 20px;\n        margin-top: 2%; margin-right: 1%\" *ngFor=\"let i of item.tags\">{{'# ' + i.tag }}\n      </a>\n    </div>\n  </div>\n  <br>\n  <div class=\"load-btn\" *ngIf=\"evenRowLimit | async\">\n    <button (click)=\"loadNextPage()\" color=\"primary\" style=\"margin-bottom: 2%;\n         width: 100%; height: 60px ;\n         font-size: 30px;\" mat-raised-button>\n      Load more\n      <mat-icon>more_horiz</mat-icon>\n    </button>\n  </div>\n</div>\n\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Select} from \"@ngxs/store\";\nimport {SelectImageState} from \"../app-state/states/select-image.state\";\nimport {ImageModel} from \"../domain/imageModel/image.model\";\nimport {Observable} from \"rxjs\";\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-image-detail-view',\n  templateUrl: './image-detail-view.component.html',\n  styleUrls: ['./image-detail-view.component.scss']\n})\nexport class ImageDetailViewComponent implements OnInit {\n\n  @Select(SelectImageState.getSelectedLink) selectedImage: Observable<string>;\n  link: string = '';\n  panelOpenState: boolean;\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ImageModel) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<p>image-detail-view works!</p>\n\n\n<div class=\"container\">\n  <div class=\"content\">\n    <img class=\"img-content\" [src]=\"data.link\" alt=\"\">\n  </div>\n  <div class=\"download\">\n    <button mat-raised-button color=\"primary\" matTooltip=\"Click to open menu\"\n            style=\"color: white; width: 300px; height: 50px\"\n\n            [matMenuTriggerFor]=\"menu\"\n            aria-label=\"Example icon-button with a menu\">\n      <!--    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>-->\n      Download image\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button style=\"width: 500px; height: 100%\" mat-menu-item>\n        <mat-icon>aspect_ratio</mat-icon>\n        <span style=\"display: inline-block; width: 15px\"></span>\n        <span>1920 x 1080</span>\n        <span style=\"display: inline-block; width: 25px\"></span>\n        <span>jpg</span>\n        <span style=\"display: inline-block; width: 25px\"></span>\n        <span>620kB</span>\n      </button>\n      <button style=\"width: 500px; height: 100%\" mat-menu-item>\n        <mat-icon>aspect_ratio</mat-icon>\n        <span style=\"display: inline-block; width: 15px\"></span>\n        <span>1280 x 780</span>\n        <span style=\"display: inline-block; width: 25px\"></span>\n        <span>jpg</span>\n        <span style=\"display: inline-block; width: 25px\"></span>\n        <span>120kB</span>\n      </button>\n    </mat-menu>\n  </div>\n</div>\n\n","import {ImageModel} from \"./domain/imageModel/image.model\";\r\nimport {ImageRowView} from \"./domain/ImageRowView\";\r\n\r\nexport class ImageRowMapper {\r\n  public static mapToImageRow(imageModels: ImageModel[]): ImageRowView[] {\r\n    let countRow: number = 0;\r\n    let countItem: number = 0;\r\n    let rowModels: ImageRowView[] = [];\r\n    let temp: ImageModel[] = [];\r\n    let test: ImageRowView = {row: null, content: []};\r\n    if (imageModels !== undefined && imageModels !== null) {\r\n      imageModels.forEach((value1, index) => {\r\n        countItem++;\r\n        if (countItem <= 3) temp.push(value1);\r\n        if (countItem == 3) {\r\n          countItem = 0;\r\n          rowModels.push({row: countRow, content: temp});\r\n          temp = [];\r\n          countRow++;\r\n        }\r\n        if (index == imageModels.length - 1) {\r\n          rowModels.push({row: countRow, content: temp});\r\n        }\r\n      })\r\n      return rowModels;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport {GoogleUserLogin, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {Location} from \"@angular/common\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {log} from \"util\";\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public formGroup;\n  public emailFormField = new FormControl('');\n  public passwordFormField = new FormControl('');\n\n  @Select(RequestStatusState.getStatus) $requestStatus;\n\n  constructor(private formBuilder: FormBuilder,\n              private store: Store,\n              private dialogRef: MatDialogRef<LoginComponent>,\n              private authService: UserAuthenticationService,\n              private location: Location,\n              private googleAuthService: SocialAuthService) {\n\n    this.formGroup = this.formBuilder.group({\n      email: this.emailFormField,\n      password: this.passwordFormField\n    })\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new RequestMessageAction(null))\n  }\n\n  public login(): void {\n    const email = this.formGroup.get('email').value\n    const password = this.formGroup.get('password').value;\n    this.store\n      .dispatch(\n        new AuthenticationActions.LoginAction(\n          new UserLoginModel(\n            email,\n            password\n          )\n        )).subscribe(value =>\n      this.authService.isLoggedIn()\n        .subscribe(value1 => {\n          console.log(value1);\n          this.store.dispatch(new LoggedUserDetails(value1.body.userId));\n          this.close();\n        }));\n  }\n\n  googleLogin(): void {\n    this.googleAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\n      .then(value => {\n        this.store.dispatch(new AuthenticationActions.LoginAction(\n          new GoogleUserLogin(value.email,\n            value.firstName, value.lastName,\n            value.photoUrl, value.idToken)\n        )).subscribe(value1 => {\n          this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n            .subscribe(value2 =>\n              this.store.dispatch(\n                new LoggedUserDetails(value2.Authentication.user.userId))\n            )\n\n        });\n      });\n    this.close();\n  }\n\n  public close(): void {\n    // this.store.dispatch(new Navigate(['welcome']))\n    this.dialogRef.close();\n  }\n\n}\n","<mat-dialog-content class=\"content\" [formGroup]=\"formGroup\">\n  <h1 style=\"font-family: 'agave Nerd Font',cursive\">\n    <strong>Login</strong>\n  </h1>\n  <!--  <div class=\"icon\" >-->\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\n  <!--    -->\n  <!--  </div>-->\n  <p>\n    <mat-form-field [style.width.px]=330>\n      <mat-label>Email</mat-label>\n      <input [style.fontSize.px]=\"15\"\n             matInput [formControl]=\"emailFormField\">\n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field [style.width.px]=330>\n      <mat-label>Password</mat-label>\n      <input [style.fontSize.px]=\"15\" type=\"password\"\n             matInput [formControl]=\"passwordFormField\">\n    </mat-form-field>\n  </p>\n<!--  <mat-grid-list gutterSize=\"10px\" cols=\"1\" rowHeight=\"220px\">-->\n<!--    <mat-grid-tile>-->\n<!--      <div class=\"container2\">-->\n<!--        -->\n<!--        -->\n<!--      </div>-->\n<!--    </mat-grid-tile>-->\n<!--  </mat-grid-list>-->\n</mat-dialog-content>\n<div class=\"container\">\n  <mat-dialog-actions>\n    <div style=\"display: flex; flex-direction: row; align-content: space-evenly\">\n      <button id=\"loginBtn\" (click)=\"login()\" mat-raised-button color=\"primary\">Login</button>\n      <button (click)=\"close()\" mat-raised-button color=\"warn\">Close</button>\n      <button (click)=\"googleLogin()\" mat-icon-button>\n        <img src=\"../../../assets/btn_google_signin_dark_normal_web.png\" alt=\"FOO\">\n      </button>\n    </div>\n    <mat-error style=\"margin-top: 10px; display: flex; justify-content: flex-start\" *ngIf=\"$requestStatus | async as status\">\n      {{ status.message }}\n    </mat-error>\n  </mat-dialog-actions>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {TagModel} from \"../domain/tagModel/tag-model\";\nimport {distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\";\nimport { Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\nimport {GetZipCodesAndCitiesByRegion} from \"../app-state/actions/address-validation-action\";\nimport {SearchRequestService} from \"../../serviceV2/search.request.service\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressValidationService {\n  private readonly SEARCH_URL: string = environment.apiUrl + \"addresses/validate/\";\n  private readonly COUNTRIES: string = environment.apiUrl + \"addresses/get/all/countries\";\n  private readonly REGIONS: string = environment.apiUrl + \"addresses/regions/\";\n  private readonly ZIPCODES: string =  environment.apiUrl + \"query/searchByZipAndRegion/\";\n  constructor(private  http: HttpClient,\n              private searchReqService: SearchRequestService<ZipCodeAndCity>) { }\n\n  public getCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(this.COUNTRIES);\n  }\n\n  public getRegionsByCountry(countryName: string): Observable<Region[]> {\n    return this.http.get<Region[]>(this.REGIONS + countryName);\n  }\n\n  public getZipCodesAndCitiesByRegion(region: string): Observable<ZipCodeAndCity[]> {\n    return this.http.get<ZipCodeAndCity[]>(this.ZIPCODES + region);\n  }\n\n  public getZipCodesAndCitiesByRegion2(zipcode: Observable<string>, region: string): Observable<ZipCodeAndCity[]> {\n    return this.searchReqService.search(zipcode, this.ZIPCODES + region + \", \");\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BaseUserDetails, UserRegistrationModel} from \"../domain/userModel/user-details.model\";\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {debounceTime, switchMap} from \"rxjs/operators\";\nimport {LoggedInUserModel, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport LoginAction = AuthenticationActions.LoginAction;\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {\n  GetZipCodesAndCitiesByRegion,\n  GetCountriesAction,\n  GetRegionsAction\n} from \"../app-state/actions/address-validation-action\";\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\nimport {AddressValidationState} from \"../app-state/states/address.validation.state\";\nimport {QueryTagAction} from \"../app-state/actions/query-tag-action\";\nimport {AddressValidationService} from \"../service/address-validation.service\";\nimport {Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\nimport {MatSelectChange} from \"@angular/material/select\";\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\nimport {ImageModel} from \"../domain/imageModel/image.model\";\nimport {SignupState} from \"../app-state/states/signup.state\";\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  public disabled: boolean = true;\n  public invalid: boolean = true;\n  public formGroup;\n  countries$ = new Subject<Country[]>();\n  regions$ = new Subject<Region[]>();\n  currentCounty;\n  color = new FormControl(\"Warn\")\n  zipCodeAndCities$ = new Subject<ZipCodeAndCity[]>();\n  zipAndCities: ZipCodeAndCity[];\n  errorMsg: string = \"Password required\";\n\n\n  @Select(AddressValidationState.countries)\n  fetchedCountries$: Observable<Country[]>;\n\n  @Select(AddressValidationState.regions)\n  fetchedRegions$: Observable<Region[]>;\n\n  @Select(AddressValidationState.zipCodesAndCities)\n  fetchedZipcodesAndCities$: Observable<ZipCodeAndCity[]>;\n\n  @Select(SignupState.registrationModel)\n  registrationModel$: Observable<BaseUserDetails>;\n\n\n  @Select(RequestStatusState.getStatus) $requestStatus;\n\n\n  // form fields\n  public countryFormField =\n    new FormControl('', [Validators.required]);\n  public lastNameFormField =\n    new FormControl('', [Validators.required]);\n  public firstNameFormField =\n    new FormControl('', [Validators.required]);\n  public cityFormField =\n    new FormControl({value: '', disabled: true},\n      [Validators.required]);\n  public emailFormField =\n    new FormControl('', [Validators.required]);\n  public passwordFormField =\n    new FormControl('', [Validators.required]);\n  public confirmPwdFormField =\n    new FormControl('', [Validators.required]);\n\n  public streetFormField =\n    new FormControl({value: '', disabled: true},\n      [Validators.required]);\n  public regionFormField =\n    new FormControl({value: '', disabled: true},\n      [Validators.required]);\n  public zipCodeFormField =\n    new FormControl({value: '', disabled: true},\n      [Validators.required]);\n\n  searchTerm$ = new Subject<string>();\n\n  constructor(private authService: UserAuthenticationService,\n              private store: Store,\n              private formBuilder: FormBuilder,\n              private dialogRef: MatDialogRef<SignupComponent>,\n              private addressService: AddressValidationService) {\n    this.formGroup = this.formBuilder.group({\n      firstName: this.firstNameFormField,\n      lastName: this.lastNameFormField,\n      /*street: this.streetFormField,\n      city: this.cityFormField,\n      country: this.countryFormField,\n      region: this.regionFormField,\n      zipcode: this.zipCodeFormField,*/\n      email: this.emailFormField,\n      password: this.passwordFormField,\n      confirmPassword: this.confirmPwdFormField\n    })\n\n    /*this.formGroup.get('zipcode').disable();*/\n\n\n  }\n\n  ngOnInit(): void {\n\n    this.store.dispatch(new RequestMessageAction(null))\n\n    this.registrationModel$.subscribe(\n      value => {\n        if (value.email.length > 1) {\n          this.store.dispatch(new AuthenticationActions.LoginAction(\n            new UserLoginModel(value.email, value.password)\n          )).pipe(switchMap(resp =>\n            this.store.dispatch(\n              new AuthenticationActions.LoggedUserDetails(\n                resp.Authentication.user.userId))\n          )).subscribe(value1 => value1)\n        }\n      }\n    )\n    /*this.validateCityAndZipFormFields();*/\n    this.store.dispatch(new GetCountriesAction())\n    /*this.fetchedZipcodesAndCities$\n      .subscribe(value => this.zipAndCities = value)*/\n  }\n\n  /*private validateCityAndZipFormFields() {\n    this.validateZipCodeFormField();\n    this.validateStreetFormField();\n  }\n\n  private validateZipCodeFormField() {\n    this.formGroup\n      .controls['zipcode']\n      .valueChanges\n      .subscribe(val => {\n        if (this.formGroup.controls['city'].disabled)\n          this.invalid = true;\n      })\n  }\n\n  private validateStreetFormField() {\n    this.formGroup\n      .controls['street']\n      .valueChanges\n      .subscribe(val => {\n        if (this.formGroup.controls['street'].value.length > 0)\n          this.invalid = false;\n        else this.invalid = true;\n      })\n  }*/\n\n\n  closeDialog(): void {\n    // this.dialogRef.close(this.formGroup.value);\n    this.dialogRef.close();\n  }\n\n  selectPostalAndSetCity(value: string) {\n    this.zipAndCities\n      .filter(value1 => value1.zipCode === value)\n      .forEach(value1 => this.cityFormField.setValue(value1.city))\n    this.streetFormField.enable();\n  }\n\n  register() {\n\n    const registrationModel = new UserRegistrationModel(\n      this.formGroup.controls['firstName'].value,\n      this.formGroup.controls['lastName'].value,\n      this.formGroup.controls['email'].value,\n      this.formGroup.controls['password'].value,\n      null, null, null, null\n    );\n\n\n\n    /*const registrationModel = new UserRegistrationModel(\n      this.formGroup.controls['firstName'].value,\n      this.formGroup.controls['lastName'].value,\n      this.formGroup.controls['email'].value,\n      this.formGroup.controls['password'].value,\n      this.formGroup.controls['street'].value,\n      this.formGroup.controls['region'].value,\n      this.formGroup.controls['zipcode'].value,\n      this.formGroup.controls['country'].value\n    );*/\n    this.store\n      .dispatch(new AuthenticationActions.SignUpAction(registrationModel))\n      .subscribe(value => this.authService.isLoggedIn())\n\n    /*this.closeDialog();*/\n  }\n\n  /*selectedCountry($event: MatSelectChange) {\n    console.log(this.disabled);\n    this.disabled = false;\n    console.log(this.disabled);\n    this.store.dispatch(new GetRegionsAction($event.value))\n      .subscribe(value => this.regionFormField.enable());\n  }*/\n\n  selectedRegion($event: MatSelectChange) {\n    this.formGroup.get('zipcode').enable();\n    this.searchTerm$\n      .pipe(debounceTime(1000))\n      .subscribe(value => {\n        this.store\n          .dispatch(\n            new GetZipCodesAndCitiesByRegion(\n              new BehaviorSubject(value),\n              $event.value\n            )\n          )\n      });\n  }\n\n  changeZipCode($event: MatSelectChange) {\n  }\n\n  hasError = (controlName: string, errorName: string) => {\n    return this.formGroup.controls['firstName'].hasError(errorName)\n  }\n\n  checkPasswords() {\n    const length = this.formGroup.get('password').value.length > 0;\n    const confirmPwd = this.formGroup.controls['confirmPassword'].value;\n    const pwd = this.formGroup.get('password').value;\n\n    if (confirmPwd !== pwd && confirmPwd.length > 0 && length)\n      this.formGroup.controls['password']\n        .setErrors({'incorrect': true});\n\n    else if (length && confirmPwd.length > 0 && confirmPwd === pwd) {\n      this.formGroup.controls['password']\n        .setErrors(null);\n      this.invalid = false;\n    }\n\n\n  }\n}\n","<mat-dialog-content class=\"profile-icon\" [formGroup]=\"formGroup\">\n  <h1 style=\"font-family: 'agave Nerd Font',cursive\">\n    <strong>Registration</strong>\n  </h1>\n  <!--  <div class=\"icon\" >-->\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\n  <!--    -->\n  <!--  </div>-->\n  <mat-grid-list gutterSize=\"10px\" cols=\"2\" rowHeight=\"290px\">\n    <mat-grid-tile>\n      <div  class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Firstname</mat-label>\n          <input [formControl]=\"firstNameFormField\" [style.fontSize.px]=\"15\"\n                 matInput>\n          <mat-error>Firstname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Lastname</mat-label>\n          <input [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"formGroup.get('lastName')\">\n          <mat-error>Lastname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Email</mat-label>\n          <input name=\"email\" type=\"email\" ngModel [email]=\"true\"\n                 [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"emailFormField\"\n                 pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n          <mat-error>Invalid email</mat-error>\n        </mat-form-field>\n        <mat-dialog-actions>\n          <button [disabled]=\"!formGroup.valid || invalid\" (click)=\"register()\" mat-raised-button color=\"primary\">Register</button>\n          <button (click)=\"closeDialog()\" mat-raised-button color=\"warn\">Close</button>\n          <br>\n          <mat-error style=\"margin-top: 10px\" *ngIf=\"$requestStatus | async as status\">\n            {{status.message}}\n          </mat-error>\n        </mat-dialog-actions>\n\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"passwordFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Confirm password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"confirmPwdFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <!--<mat-form-field  [style.width.px]=300>\n          <mat-label>Country</mat-label>\n          <mat-select [formControl]=\"countryFormField\" (selectionChange)=\"selectedCountry($event)\">\n            <mat-option\n              *ngFor=\"let country of fetchedCountries$ | async\"\n              [value]=\"country.name\">\n              {{ country.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n          <mat-form-field [style.width.px]=300>\n            <mat-label>Region</mat-label>\n            <mat-select [formControl]=\"regionFormField\" (selectionChange)=\"selectedRegion($event)\">\n              <mat-option\n                *ngFor=\"let region of fetchedRegions$ | async\"\n                [value]=\"region.region\">\n                {{ region.region }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n        <div style=\"display: flex; flex-direction: row;\n              align-content: space-between;\" class=\"region_zip\">\n          <mat-form-field style=\"margin-right: 5px\" [style.width.px]=100>\n            <mat-label>Zipcode</mat-label>\n            <input [formControl]=\"formGroup.get('zipcode')\" (keyup.enter)=\"selectPostalAndSetCity(element.value)\" id=\"search-input\" type=\"text\" #element\n                   (keyup)=\"searchTerm$.next($event.target.value)\"\n                   matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete style=\"width: 200px\" #auto=\"matAutocomplete\">\n              <mat-option #matOption (click)=\"selectPostalAndSetCity(matOption.value)\"\n                          *ngFor=\"let zipAndCity of fetchedZipcodesAndCities$ | async\"\n                          [value]=\"zipAndCity.zipCode\">\n                {{ zipAndCity.zipCode }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n\n          <mat-form-field [style.width.px]=190>\n            <mat-label>City</mat-label>\n            <input [style.fontSize.px]=\"15\"\n                   matInput formControlName=\"city\">\n          </mat-form-field>\n        </div>\n          <mat-form-field [style.width.px]=300>\n            <mat-label>Street</mat-label>\n            <input [style.fontSize.px]=\"15\"\n                   matInput formControlName=\"street\">\n          </mat-form-field>-->\n        <div class=\"container\">\n\n        </div>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-dialog-content>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\nimport {ImagesByUserIDAction} from \"../app-state/actions/image.action\";\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\nimport {UserDetailsState} from \"../app-state/states/User-details.state\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\nimport {LoggedInUserModel} from \"../domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\n\n@Component({\n  selector: 'app-user-gallery',\n  templateUrl: './user-gallery.component.html',\n  styleUrls: ['./user-gallery.component.scss']\n})\nexport class UserGalleryComponent implements OnInit {\n  @Select(ImagesByUserIdState.getData) $byUserIdData;\n  @Select(UserDetailsState.firstLastName) $name;\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n  @Select(UserDetailsState.getState) $state;\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  downloadLink: any;\n  $isOwner = new BehaviorSubject<boolean>(false);\n\n  constructor(private route: ActivatedRoute,\n              private store: Store) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store.dispatch(\n          [\n            new UserDetailsActions.GetUserDetails(userId),\n            new ImagesByUserIDAction(userId)\n          ]\n        )\n        this.$loggedUser.subscribe(user => {\n          if (user !== undefined && user !== null)\n            if (user.userId === userId) {\n              this.$isOwner.next(true);\n            }\n        })\n      })\n\n    // this.$state.subscribe(state => {\n    //   if (userId === state.userId) {\n    //     console.log(\"Super!!!!!!!!!\")\n    //   }\n    // })\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .subscribe(value => {})\n    //\n    // this.$loggedUser.subscribe(user => {\n    //   if (user !== undefined && user !== null)\n    //     if (user.userId === userId) {\n    //       this.$isOwner.next(true);\n    //     }\n    //\n    //\n    // })\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n}\n","<app-search-toolbar></app-search-toolbar>\n<div class=\"container\">\n  <div class=\"filler_left\"></div>\n  <div class=\"left\">\n    <div class=\"profile_icon\">\n      <button *ngIf=\"!($profileImg | async)\" disabled mat-icon-button\n              aria-label=\"Example icon button with a home icon\">\n        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>\n      </button>\n      <img class=\"profile-img\" [src]=\"$profileImg | async\" alt=\"\">\n    </div>\n  </div>\n  <div class=\"right\">\n    <div class=\"title\">\n      <div class=\"user-name\">\n        <span *ngIf=\"$name | async\" style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px\">\n        <strong>\n          {{$name | async}}\n        </strong>\n      </span>\n      </div>\n      <br>\n      <div class=\"user-name\">\n        <!--        <p style=\"font-size: 17px\">-->\n        <!--          -->\n        <!--        </p>-->\n        <p style=\"font-size: 17px; line-height: 28px\">\n          Download free, beautiful high-quality photos curated by {{ $name | async }}.\n        </p>\n      </div>\n      <button *ngIf=\"$isOwner | async\" style=\"\" mat-icon-button>\n        <mat-icon>edit</mat-icon>\n        Edit profile\n      </button>\n    </div>\n  </div>\n</div>\n\n<mat-tab-group mat-stretch-tabs class=\"mat-tab-group\">\n  <mat-tab class=\"tab\" label=\"Gallery\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\n      Images\n    </ng-template>\n    <app-image-content [isProfile]=\"true\" [data]=\"$byUserIdData | async\"></app-image-content>\n<!--    <div class=\"container-2\">-->\n<!--      <div *ngFor=\"let item of $byUserIdData | async; index as i;\" class=\"tile\">-->\n<!--        <div class=\"tile-container\">-->\n<!--          <div class=\"img-tile\">-->\n<!--            <img class=\"img\" width=\"500px\" height=\"520px\" [src]=\"item.link\">-->\n<!--          </div>-->\n<!--          <div class=\"details\">-->\n<!--            <div class=\"content\">-->\n<!--              <button class=\"btn\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 70px\">account_circle</mat-icon>-->\n<!--              </button>-->\n<!--              <a mat-button href=\"#\">-->\n<!--                <h1>{{ 'User : @' + item.email.substr(0, item.email.indexOf('@')) }}</h1>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--            <div class=\"content-btn\">-->\n<!--              <a target=\"_self\" [href]=\"downloadLink\" (click)=\"download(item.name, item.userId)\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 60px\">save_alt</mat-icon>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n  </mat-tab>\n  <mat-tab label=\"Likes\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Likes\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"Third\"> Content 3</mat-tab>\n</mat-tab-group>\n\n","export class Base64ToBlobConverter {\r\n  public static dataURItoBlob(dataURI): Blob {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/png' });\r\n    return blob;\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {CropAndDownload} from \"../app-state/actions/image.action\";\r\nimport {\r\n  CropAndDownloadStateModel,\r\n  GetBase64ForDownloadCropperState\r\n} from \"../app-state/states/get-base64-for-downloadCropper.state\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport {GetImageByIdState} from \"../app-state/states/get-image-by-id.state\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlobToBase64Pipe {\r\n  constructor(private store: Store) { }\r\n\r\n\r\n  public getBase64(source: Observable<ArrayBuffer>): Observable<string> {\r\n    return source.pipe(map(byteArray => {\r\n      let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n      FileSaver.saveAs(blob, this.store.selectSnapshot(GetImageByIdState.getImageDetail).name);\r\n      return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel).base64\r\n    }))\r\n  }\r\n\r\n}\r\n\r\n/*function base64Pipe() {\r\n  return function<T> (source: Observable<ArrayBuffer>): Observable<string> {\r\n    return source.pipe(map())\r\n  }\r\n}*/\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8880/image-app/',\n  google_id: '200318745451-u9viua8onpt25sdmknka7i89uhdrknsd.apps.googleusercontent.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}