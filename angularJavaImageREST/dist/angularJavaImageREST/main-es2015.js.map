{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/private/add-tags-dialog/add-tags-dialog.component.ts","./src/app/private/add-tags-dialog/add-tags-dialog.component.html","./src/app/private/change-email-third-party/change-email-third-party.component.ts","./src/app/private/change-email-third-party/change-email-third-party.component.html","./src/app/private/change-image-details-dialog/change-image-details-dialog.component.ts","./src/app/private/change-image-details-dialog/change-image-details-dialog.component.html","./src/app/private/change-password/change-password.component.ts","./src/app/private/change-password/change-password.component.html","./src/app/private/delete-user-account-dialog/delete-user-account-dialog.component.ts","./src/app/private/delete-user-account-dialog/delete-user-account-dialog.component.html","./src/app/private/edit-profile/edit-profile.component.ts","./src/app/private/edit-profile/edit-profile.component.html","./src/app/private/file-upload-wrapper/file-upload-wrapper.component.ts","./src/app/private/file-upload-wrapper/file-upload-wrapper.component.html","./src/app/private/file-upload/file-upload.component.ts","./src/app/private/file-upload/file-upload.component.html","./src/app/private/image-cropper/image-cropper.component.ts","./src/app/private/image-cropper/image-cropper.component.html","./src/app/private/password-reset-token-wrapper/password-reset-token-wrapper.component.ts","./src/app/private/password-reset-token-wrapper/password-reset-token-wrapper.component.html","./src/app/private/upload-image-dialog/upload-image-dialog.component.ts","./src/app/private/upload-image-dialog/upload-image-dialog.component.html","./src/app/public/bootstrap-playground/bootstrap-playground.component.ts","./src/app/public/bootstrap-playground/bootstrap-playground.component.html","./src/app/public/cropper-details-bar/cropper-details-bar.component.ts","./src/app/public/custom-search-bar-content/custom-search-bar-content.component.ts","./src/app/public/custom-search-bar-content/custom-search-bar-content.component.html","./src/app/public/custom-search-bar/custom-search-bar.component.ts","./src/app/public/custom-search-bar/custom-search-bar.component.html","./src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.ts","./src/app/public/download-cropped-image-dialog/download-cropped-image-dialog.component.html","./src/app/public/download-cropper/download-cropper.component.ts","./src/app/public/download-cropper/download-cropper.component.html","./src/app/public/expired-token-refresh-dialog/expired-token-refresh-dialog.component.ts","./src/app/public/expired-token-refresh-dialog/expired-token-refresh-dialog.component.html","./src/app/public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component.ts","./src/app/public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component.html","./src/app/public/image-details/image-details.component.ts","./src/app/public/image-details/image-details.component.html","./src/app/public/image-item/image-item.component.ts","./src/app/public/image-item/image-item.component.html","./src/app/public/not-found-page/not-found-page.component.ts","./src/app/public/not-found-page/not-found-page.component.html","./src/app/public/pasword-reset.guard.ts","./src/app/public/profile/profile.component.ts","./src/app/public/profile/profile.component.html","./src/app/public/renew-expired-account-token-wrapper/renew-expired-account-token-wrapper.component.ts","./src/app/public/renew-expired-account-token/renew-expired-account-token.component.ts","./src/app/public/renew-expired-account-token/renew-expired-account-token.component.html","./src/app/public/search-toolbar/search.toolbar.component.ts","./src/app/public/search-toolbar/search.toolbar.component.html","./src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.ts","./src/app/public/set-resolution-download-dialog/set-resolution-download-dialog.component.html","./src/app/public/startup/startup.component.ts","./src/app/public/startup/startup.component.html","./src/app/public/tag-view/tag-view.component.ts","./src/app/public/tag-view/tag-view.component.html","./src/app/public/verification-dialog-wrapper/verification-dialog-wrapper.component.ts","./src/app/public/verification-dialog/verification-dialog.component.ts","./src/app/public/verification-dialog/verification-dialog.component.html","./src/app/public/verify-tooltip.directive.ts","./src/app/public/verify-tooltip/verify-tooltip.component.ts","./src/app/public/verify-tooltip/verify-tooltip.component.html","./src/app/public/welcome/image-by-tag.component.ts","./src/app/public/welcome/image-by-tag.component.html","./src/app/security/auth-security.guard.ts","./src/app/security/cookie-auth-interceptor.service.ts","./src/app/serviceV2/crop-and-download-resolver.service.ts","./src/app/serviceV2/delete-image.service.ts","./src/app/serviceV2/device-observer.service.ts","./src/app/serviceV2/image-details-resolver.service.ts","./src/app/serviceV2/image-download.service.ts","./src/app/serviceV2/image-request.service.ts","./src/app/serviceV2/image-upload.service.ts","./src/app/serviceV2/media-processor.service.ts","./src/app/serviceV2/search-by-users.service.ts","./src/app/serviceV2/search.request.service.ts","./src/app/serviceV2/tag-request.service.ts","./src/app/serviceV2/update-image-details.service.ts","./src/app/serviceV2/update-user.service.ts","./src/app/serviceV2/user-authentication.service.ts","./src/app/shared/app-state/actions/address-validation-action.ts","./src/app/shared/app-state/actions/authentication-action.ts","./src/app/shared/app-state/actions/image.action.ts","./src/app/shared/app-state/actions/pass-data-to-dialog.action.ts","./src/app/shared/app-state/actions/query-tag-action.ts","./src/app/shared/app-state/actions/request-message.action.ts","./src/app/shared/app-state/actions/update-user-profile.action.ts","./src/app/shared/app-state/actions/user-details.action.ts","./src/app/shared/app-state/states/User-details.state.ts","./src/app/shared/app-state/states/ValidPasswordToken.state.ts","./src/app/shared/app-state/states/address.validation.state.ts","./src/app/shared/app-state/states/crop-image.state.ts","./src/app/shared/app-state/states/delete-image.state.ts","./src/app/shared/app-state/states/download-details.state.ts","./src/app/shared/app-state/states/get-base64-for-downloadCropper.state.ts","./src/app/shared/app-state/states/get-image-by-id.state.ts","./src/app/shared/app-state/states/images-by-tag-state.ts","./src/app/shared/app-state/states/images-by-user-id.state.ts","./src/app/shared/app-state/states/logged-user-details.state.ts","./src/app/shared/app-state/states/login.state.model.ts","./src/app/shared/app-state/states/pass-data-to-cropper-dialog.state.ts","./src/app/shared/app-state/states/prepare-cropped-for-download.state.ts","./src/app/shared/app-state/states/related-images.state.ts","./src/app/shared/app-state/states/request-status.state.ts","./src/app/shared/app-state/states/search-by-tag.state.ts","./src/app/shared/app-state/states/search-by-users.state.ts","./src/app/shared/app-state/states/select-image.state.ts","./src/app/shared/app-state/states/signup.state.ts","./src/app/shared/app-state/states/update-user-profile-image.state.ts","./src/app/shared/app-state/states/upload-image.state.ts","./src/app/shared/dialog-wrapper/login-dialog-wrapper.component.ts","./src/app/shared/dialog-wrapper/login-dialog-wrapper.component.html","./src/app/shared/domain/address-model/user-address-model.ts","./src/app/shared/domain/imageModel/ImagesByTagNameQuery.ts","./src/app/shared/domain/userModel/UserLoginModel.ts","./src/app/shared/domain/userModel/user-details.model.ts","./src/app/shared/image-content/image-content.component.ts","./src/app/shared/image-content/image-content.component.html","./src/app/shared/image-detail-view/image-detail-view.component.ts","./src/app/shared/image-detail-view/image-detail-view.component.html","./src/app/shared/image-row-mapper.ts","./src/app/shared/login/login.component.ts","./src/app/shared/login/login.component.html","./src/app/shared/service/address-validation.service.ts","./src/app/shared/signup/signup.component.ts","./src/app/shared/signup/signup.component.html","./src/app/shared/user-gallery/user-gallery.component.ts","./src/app/shared/user-gallery/user-gallery.component.html","./src/app/shared/util/Base64ToBlobConverter.ts","./src/app/shared/util/ShowEmailWasSentDialog.ts","./src/app/shared/util/blob-to-base64-pipe.ts","./src/app/verify-guard.guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AAEe;AACQ;AACX;AACkC;AAEI;AACrB;AACC;AACE;AACE;AAEO;AACA;AAC1B;AACmB;AAEjB;AAEwD;AACK;AAC7E;AAC2E;AAClE;;;AAG/D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,SAAS;QACrB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,iHAA2B;KACvC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,kFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,qHAA0B;QACrC,WAAW,EAAE,CAAC,+EAAiB,CAAC;KACjC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,mFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,mFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,0FAAmB;KAC/B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gGAAoB;KAChC;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,6GAAwB;QACnC,OAAO,EAAG,EAAE,KAAK,EAAE,6GAA8B,EAAE;KACpD;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,mGAAqB;QAChC,OAAO,EAAG,EAAE,KAAK,EAAE,sGAA2B,EAAE;KACjD;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,iGAAoB;QAC/B,WAAW,EAAE,CAAC,+EAAiB,CAAC;KACjC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sGAAqB;KACjC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,qFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,6IAAkC;QAC7C,WAAW,EAAE,CAAC,qEAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6IAAkC;QAC7C,WAAW,EAAE,CAAC,qEAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,gJAAkC;QAC7C,WAAW,EAAE,CAAC,8EAAiB,CAAC;KACjC;IACD;QACE,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,kJAAmC;KAC/C;IACD;QACE,IAAI,EAAE,8BAA8B;QACpC,SAAS,EAAE,gJAAkC;KAC9C;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClHD;AAAA;AAAA;AAAA;AAAgD;AACM;;;AAO/C,MAAM,YAAY;IAEvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QADlC,UAAK,GAAG,sBAAsB,CAAC;IACO,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,GAAG,YAAY,6DAAa,CAAC,EAAE;gBACnC,OAAO;aACR;YACD,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;;wEAXU,YAAY;4FAAZ,YAAY;QCFzB,2EAA+B;;6FDElB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpsE;AAC/B;AAEe;AACT;AACgC;AACD;AACY;AACxB;AACS;AACG;AACrC;AACoB;AACoB;AACA;AACV;AACd;AACS;AACL;AACN;AACI;AACE;AAC0B;AACvB;AACM;AACH;AACuB;AACZ;AACnB;AACQ;AACN;AACG;AAC4B;AACjC;AACU;AACC;AAC+B;AACxC;AACY;AAClB;AACA;AACyB;AACzB;AACiC;AACN;AACjC;AACwD;AACzB;AACI;AACc;AAClB;AACK;AAGQ;AACA;AACpC;AAC+C;AACxC;AACH;AACsB;AACtB;AAK5B;AACsB;AACU;AACJ;AACS;AAEb;AACC;AACsE;AAChF;AAEgC;AACQ;AACZ;AACE;AACS;AACC;AACJ;AACA;AACC;AACtB;AAC0C;AACT;AACkB;AACJ;AACuB;AAC/D;AACkE;AACpD;AACK;AACmB;AAC1C;AACqD;AACZ;AACD;AAC7C;AACJ;AACuB;AAER;AAEwB;AACzC;AAC6C;AACuB;AACI;AACrD;AACiC;AACuB;AACD;AACuB;AACjB;AACH;AACC;AACxC;AACxC;AACN;AAC8B;AACe;;;;;;AA2JnF,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBA3BT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,uGAA4B;YACtC,KAAK,EAAE,IAAI;SACZ;QACD;YACE,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB;SAC1D;QACD;YACE,OAAO,EAAE,yBAAyB;YAClC,QAAQ,EAAE;gBACR,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE;oBACT;wBACE,EAAE,EAAE,0EAAmB,CAAC,WAAW;wBACnC,QAAQ,EAAE,IAAI,0EAAmB,CAC/B,sEAAW,CAAC,SAAS,CACtB;qBACF;iBACF;aACyB;SAC7B;KACF,YAtGQ;YACP,uEAAa;YACb,oEAAa;YACb,8DAAe;YACf,2EAAgB;YAChB,qEAAa;YACb,4FAAwB;YACxB,6EAAiB;YACjB,uEAAc;YACd,+EAAkB;YAClB,sEAAY;YACZ,qEAAkB;YAClB,oFAAoB;YACpB,2EAAgB;YAChB,sFAAqB;YACrB,uEAAc;YACd,uEAAc;YA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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SignupComponent} from \"./shared/signup/signup.component\";\r\nimport {ProfileComponent} from \"./public/profile/profile.component\";\r\nimport {ImageByTagComponent} from \"./public/welcome/image-by-tag.component\";\r\nimport {AuthSecurityGuard} from \"./security/auth-security.guard\";\r\nimport {LoginDialogWrapperComponent} from \"./shared/dialog-wrapper/login-dialog-wrapper.component\";\r\nimport {FileUploadComponent} from \"./private/file-upload/file-upload.component\";\r\nimport {FileUploadWrapperComponent} from \"./private/file-upload-wrapper/file-upload-wrapper.component\";\r\nimport {UserGalleryComponent} from \"./shared/user-gallery/user-gallery.component\";\r\nimport {EditProfileComponent} from \"./private/edit-profile/edit-profile.component\";\r\nimport {ImageDetailsComponent} from \"./public/image-details/image-details.component\";\r\nimport {ImageDetailsResolverService} from \"./serviceV2/image-details-resolver.service\";\r\nimport {ProfileResolverService} from \"./public/profile/profile-resolver.service\";\r\nimport {DownloadCropperComponent} from \"./public/download-cropper/download-cropper.component\";\r\nimport {CropAndDownloadResolverService} from \"./serviceV2/crop-and-download-resolver.service\";\r\nimport {StartupComponent} from \"./public/startup/startup.component\";\r\nimport {NotFoundPageComponent} from \"./public/not-found-page/not-found-page.component\";\r\nimport {ImageCropperComponent} from \"./private/image-cropper/image-cropper.component\";\r\nimport {TagViewComponent} from \"./public/tag-view/tag-view.component\";\r\nimport {VerificationDialogComponent} from \"./public/verification-dialog/verification-dialog.component\";\r\nimport {VerificationDialogWrapperComponent} from \"./public/verification-dialog-wrapper/verification-dialog-wrapper.component\";\r\nimport {ExpiredTokenRefreshWrapperComponent} from \"./public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component\";\r\nimport {VerifyGuardGuard} from \"./verify-guard.guard\";\r\nimport {PasswordResetTokenWrapperComponent} from \"./private/password-reset-token-wrapper/password-reset-token-wrapper.component\";\r\nimport {PaswordResetGuard} from \"./public/pasword-reset.guard\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'welcome',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginDialogWrapperComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'upload',\r\n    component: FileUploadWrapperComponent,\r\n    canActivate: [AuthSecurityGuard]\r\n  },\r\n  {\r\n    path: 'welcome',\r\n    component: StartupComponent\r\n  },\r\n  {\r\n    path: 'welcome:test',\r\n    component: StartupComponent\r\n  },\r\n  {\r\n    path: 'image-by-tags',\r\n    component: ImageByTagComponent\r\n  },\r\n  {\r\n    path: 'gallery',\r\n    component: UserGalleryComponent\r\n  },\r\n  {\r\n    path: 'crop-download',\r\n    component: DownloadCropperComponent,\r\n    resolve : { image: CropAndDownloadResolverService }\r\n  },\r\n  {\r\n    path: 'image',\r\n    component: ImageDetailsComponent,\r\n    resolve : { image: ImageDetailsResolverService }\r\n  },\r\n  {\r\n    path: 'edit-profile',\r\n    component: EditProfileComponent,\r\n    canActivate: [AuthSecurityGuard]\r\n  },\r\n  {\r\n    path: 'not-found',\r\n    component: NotFoundPageComponent\r\n  },\r\n  {\r\n    path: 'tag-view',\r\n    component: TagViewComponent\r\n  },\r\n  {\r\n    path: 'verify',\r\n    component: VerificationDialogWrapperComponent,\r\n    canActivate: [VerifyGuardGuard]\r\n  },\r\n  {\r\n    path: 'verify:id',\r\n    component: VerificationDialogWrapperComponent,\r\n    canActivate: [VerifyGuardGuard]\r\n  },\r\n  {\r\n    path: 'renew-password/:id',\r\n    component: PasswordResetTokenWrapperComponent,\r\n    canActivate: [PaswordResetGuard]\r\n  },\r\n  {\r\n    path: 'expired-token-refresh',\r\n    component: ExpiredTokenRefreshWrapperComponent\r\n  },\r\n  {\r\n    path: 'expired-token-refresh/:valid',\r\n    component: PasswordResetTokenWrapperComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'angularJavaImageREST';\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0)\n    });\n  }\n}\n","\n<!--<app-welcome></app-welcome>-->\n\n<!--<app-signup></app-signup>-->\n\n\n<router-outlet></router-outlet>\n","import {BrowserModule, HammerModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkScrollableModule, ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {SearchToolbarComponent} from './public/search-toolbar/search.toolbar.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {ImageByTagComponent} from './public/welcome/image-by-tag.component';\r\nimport {NgxsModule} from \"@ngxs/store\";\r\nimport {NgxsLoggerPluginModule} from \"@ngxs/logger-plugin\";\r\nimport {ImagesByTagState} from \"./shared/app-state/states/images-by-tag-state\";\r\nimport {SearchByTagState} from \"./shared/app-state/states/search-by-tag.state\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatDividerModule} from \"@angular/material/divider\";\r\nimport {ImageContentComponent} from './shared/image-content/image-content.component';\r\nimport {MatGridListModule} from \"@angular/material/grid-list\";\r\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\r\nimport {SignupComponent} from './shared/signup/signup.component';\r\nimport {CookieAuthInterceptorService} from \"./security/cookie-auth-interceptor.service\";\r\nimport {LoginStateModel} from \"./shared/app-state/states/login.state.model\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from \"@angular/material/core\";\r\nimport {LoginComponent} from './shared/login/login.component';\r\nimport {AddressValidationState} from \"./shared/app-state/states/address.validation.state\";\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {SignupState} from \"./shared/app-state/states/signup.state\";\r\nimport {ProfileComponent} from './public/profile/profile.component';\r\nimport {LoginDialogWrapperComponent} from './shared/dialog-wrapper/login-dialog-wrapper.component';\r\nimport {NgxsRouterPluginModule} from \"@ngxs/router-plugin\";\r\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {UserDetailsState} from \"./shared/app-state/states/User-details.state\";\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {ImagesByUserIdState} from \"./shared/app-state/states/images-by-user-id.state\";\r\nimport {FileUploadComponent} from './private/file-upload/file-upload.component';\r\nimport {NgxDropzoneModule} from \"ngx-dropzone\";\r\nimport {FileUploadWrapperComponent} from './private/file-upload-wrapper/file-upload-wrapper.component';\r\nimport {UploadImageState} from \"./shared/app-state/states/upload-image.state\";\r\nimport {UserGalleryComponent} from './shared/user-gallery/user-gallery.component';\r\nimport {ImageDetailViewComponent} from './shared/image-detail-view/image-detail-view.component';\r\nimport {SelectImageState} from \"./shared/app-state/states/select-image.state\";\r\nimport {EditProfileComponent} from './private/edit-profile/edit-profile.component';\r\nimport {AuthenticationActions} from \"./shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {LoggedUserDetailsState} from \"./shared/app-state/states/logged-user-details.state\";\r\nimport {AddTagsDialogComponent} from './private/add-tags-dialog/add-tags-dialog.component';\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport {UpdateUserProfileImageState} from \"./shared/app-state/states/update-user-profile-image.state\";\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {VirtualScrollerModule} from 'ngx-virtual-scroller';\r\nimport {SocialLoginModule, SocialAuthServiceConfig} from 'angularx-social-login';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n  AmazonLoginProvider,\r\n} from 'angularx-social-login';\r\nimport {ImageCropperModule} from 'ngx-image-cropper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {environment} from \"../environments/environment\";\r\nimport {ChangeImageDetailsDialogComponent} from './private/change-image-details-dialog/change-image-details-dialog.component';\r\nimport {FileSaverModule} from \"ngx-filesaver\";\r\nimport {DeleteImage, GetRelatedImagesByTagIDs} from \"./shared/app-state/actions/image.action\";\r\nimport {DeleteImageState} from \"./shared/app-state/states/delete-image.state\";\r\nimport {ImageCropperComponent} from './private/image-cropper/image-cropper.component';\r\nimport {CropImageState} from \"./shared/app-state/states/crop-image.state\";\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {ImageDetailsComponent} from './public/image-details/image-details.component';\r\nimport {DownloadDetailsState} from \"./shared/app-state/states/download-details.state\";\r\nimport {GetImageByIdState} from \"./shared/app-state/states/get-image-by-id.state\";\r\nimport {RelatedImagesState} from \"./shared/app-state/states/related-images.state\";\r\nimport {SearchByUsersState} from \"./shared/app-state/states/search-by-users.state\";\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {UploadImageDialogComponent} from './private/upload-image-dialog/upload-image-dialog.component';\r\nimport {DownloadCropperComponent} from './public/download-cropper/download-cropper.component';\r\nimport {GetBase64ForDownloadCropperState} from \"./shared/app-state/states/get-base64-for-downloadCropper.state\";\r\nimport {PrepareCroppedForDownloadState} from \"./shared/app-state/states/prepare-cropped-for-download.state\";\r\nimport {DownloadCroppedImageDialogComponent} from './public/download-cropped-image-dialog/download-cropped-image-dialog.component';\r\nimport {StartupComponent} from './public/startup/startup.component';\r\nimport {SetResolutionDownloadDialogComponent} from './public/set-resolution-download-dialog/set-resolution-download-dialog.component';\r\nimport {RequestStatusState} from \"./shared/app-state/states/request-status.state\";\r\nimport {NotFoundPageComponent} from './public/not-found-page/not-found-page.component';\r\nimport {BootstrapPlaygroundComponent} from './public/bootstrap-playground/bootstrap-playground.component';\r\nimport {ExtendedModule, FlexModule} from \"@angular/flex-layout\";\r\nimport {ChangeEmailThirdPartyComponent} from './private/change-email-third-party/change-email-third-party.component';\r\nimport {PassDataToCropperDialogState} from \"./shared/app-state/states/pass-data-to-cropper-dialog.state\";\r\nimport { CropperDetailsBarComponent } from './public/cropper-details-bar/cropper-details-bar.component';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { ImageItemComponent } from './public/image-item/image-item.component';\r\n\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\nimport { ChangePasswordComponent } from './private/change-password/change-password.component';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { CustomSearchBarComponent } from './public/custom-search-bar/custom-search-bar.component';\r\nimport { CustomSearchBarContentComponent } from './public/custom-search-bar-content/custom-search-bar-content.component';\r\nimport { DeleteUserAccountDialogComponent } from './private/delete-user-account-dialog/delete-user-account-dialog.component';\r\nimport { TagViewComponent } from './public/tag-view/tag-view.component';\r\nimport { VerificationDialogComponent } from './public/verification-dialog/verification-dialog.component';\r\nimport { VerificationDialogWrapperComponent } from './public/verification-dialog-wrapper/verification-dialog-wrapper.component';\r\nimport { RenewExpiredAccountTokenComponent } from './public/renew-expired-account-token/renew-expired-account-token.component';\r\nimport { RenewExpiredAccountTokenWrapperComponent } from './public/renew-expired-account-token-wrapper/renew-expired-account-token-wrapper.component';\r\nimport { ExpiredTokenRefreshWrapperComponent } from './public/expired-token-refresh-wrapper/expired-token-refresh-wrapper.component';\r\nimport { ExpiredTokenRefreshDialogComponent } from './public/expired-token-refresh-dialog/expired-token-refresh-dialog.component';\r\nimport { PasswordResetTokenWrapperComponent } from './private/password-reset-token-wrapper/password-reset-token-wrapper.component';\r\nimport {ValidPasswordTokenState} from \"./shared/app-state/states/ValidPasswordToken.state\";\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {A11yModule} from \"@angular/cdk/a11y\";\r\nimport { VerifyTooltipDirective } from './public/verify-tooltip.directive';\nimport { VerifyTooltipComponent } from './public/verify-tooltip/verify-tooltip.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchToolbarComponent,\r\n    ImageByTagComponent,\r\n    ImageContentComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    LoginDialogWrapperComponent,\r\n    FileUploadComponent,\r\n    FileUploadWrapperComponent,\r\n    UserGalleryComponent,\r\n    ImageDetailViewComponent,\r\n    EditProfileComponent,\r\n    AddTagsDialogComponent,\r\n    ChangeImageDetailsDialogComponent,\r\n    ImageCropperComponent,\r\n    ImageDetailsComponent,\r\n    UploadImageDialogComponent,\r\n    DownloadCropperComponent,\r\n    DownloadCroppedImageDialogComponent,\r\n    StartupComponent,\r\n    SetResolutionDownloadDialogComponent,\r\n    NotFoundPageComponent,\r\n    BootstrapPlaygroundComponent,\r\n    ChangeEmailThirdPartyComponent,\r\n    CropperDetailsBarComponent,\r\n    ImageItemComponent,\r\n    ChangePasswordComponent,\r\n    CustomSearchBarComponent,\r\n    CustomSearchBarContentComponent,\r\n    DeleteUserAccountDialogComponent,\r\n    TagViewComponent,\r\n    DeleteUserAccountDialogComponent,\r\n    VerificationDialogComponent,\r\n    VerificationDialogWrapperComponent,\r\n    RenewExpiredAccountTokenComponent,\r\n    RenewExpiredAccountTokenWrapperComponent,\r\n    ExpiredTokenRefreshWrapperComponent,\r\n    ExpiredTokenRefreshDialogComponent,\r\n    PasswordResetTokenWrapperComponent,\r\n    VerifyTooltipDirective,\r\n    VerifyTooltipComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    OverlayModule,\r\n    FileSaverModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    HammerModule,\r\n    ImageCropperModule,\r\n    MatSlideToggleModule,\r\n    MatTooltipModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatChipsModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    MatStepperModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    VirtualScrollerModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatNativeDateModule,\r\n    MatDialogModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ScrollingModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    NgxDropzoneModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SocialLoginModule,\r\n    NgxsModule.forRoot([\r\n      PassDataToCropperDialogState,\r\n      ImagesByTagState,\r\n      SearchByTagState,\r\n      LoginStateModel,\r\n      AddressValidationState,\r\n      RelatedImagesState,\r\n      GetImageByIdState,\r\n      SignupState,\r\n      UserDetailsState,\r\n      DownloadDetailsState,\r\n      SearchByUsersState,\r\n      ImagesByUserIdState,\r\n      UploadImageState,\r\n      SelectImageState,\r\n      LoggedUserDetailsState,\r\n      UpdateUserProfileImageState,\r\n      DeleteImageState,\r\n      CropImageState,\r\n      ValidPasswordTokenState,\r\n      GetBase64ForDownloadCropperState,\r\n      PrepareCroppedForDownloadState,\r\n      RequestStatusState\r\n    ]),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    MatDatepickerModule,\r\n    MatChipsModule,\r\n    FlexModule,\r\n    ExtendedModule,\r\n    A11yModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CookieAuthInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: LocationStrategy, useClass: HashLocationStrategy\r\n    },\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              environment.google_id\r\n            ),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {debounceTime, filter, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\nimport {COMMA, ENTER} from \"@angular/cdk/keycodes\";\nimport {FormControl} from \"@angular/forms\";\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\n\n@Component({\n  selector: 'app-add-tags-dialog',\n  templateUrl: './add-tags-dialog.component.html',\n  styleUrls: ['./add-tags-dialog.component.scss']\n})\nexport class AddTagsDialogComponent implements OnInit {\n  searchTerm$ = new Subject<string>();\n  tagList: TagModel[];\n  addChip: TagModel[] = [];\n\n  @Select(SearchByTagState) tags$: Observable<TagQueryList>;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagCtrl = new FormControl();\n  selectedImage: string;\n\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private store: Store,\n              private imageService: ImageRequestService,\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\n              private dialogRef: MatDialogRef<AddTagsDialogComponent>) {\n  }\n\n  ngOnInit(): void {\n\n    this.searchTerm$\n      .pipe(debounceTime(1000))\n      .subscribe(value => {\n        console.log(value)\n        this.store.dispatch(\n          new QueryTagAction(new BehaviorSubject(value))\n        )\n      });\n    this.tags$.subscribe(value => this.tagList = value.result)\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n  }\n\n  search(value: string) {\n\n  }\n\n  remove(tag: TagModel) {\n    const index = this.addChip\n      .findIndex(tagModel => tagModel.tag === tag.tag);\n    if (index >= 0)\n      this.addChip.splice(index, 1);\n\n  }\n\n  add($event: MatChipInputEvent) {\n    const input = $event.input;\n    const value = $event.value;\n    if ((value || '').trim()) {\n      const selectedTag = this.store\n        .selectSnapshot(SearchByTagState.getFetchedTagList)\n        .find(tag => tag.tag === value);\n      if (selectedTag) this.addChip.push(selectedTag)\n    }\n    if (input) {\n      input.value = '';\n    }\n    this.tagCtrl.setValue(null)\n    // this.tagList.push(value);\n  }\n\n  selected($event: MatAutocompleteSelectedEvent): void {\n    const selectedTag = this.store\n      .selectSnapshot(SearchByTagState.getFetchedTagList)\n      .find(tag => tag.tag === $event.option.viewValue);\n    if (selectedTag) this.addChip.push(selectedTag)\n    this.tagInput.nativeElement.value = '';\n    this.tagCtrl.setValue(null);\n    console.log(\"SEAS?\");\n  }\n\n  saveTags(): void {\n    const selectedImage: string = this.store.selectSnapshot(SelectImageState.getSelectedImageId);\n    const userId =\n      this.store.selectSnapshot(LoginStateModel.loggedUserId);\n    this.imageService.setTagToImage({\n        userId: userId,\n        imageId: selectedImage,\n        tags: this.addChip\n      }\n    ).subscribe(value => {\n      // this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(userId));\n      this.dialogRef.close();\n      // this.store\n      //   .dispatch(new ImagesByUserIDAction(userId))\n      //   .subscribe(value1 => {\n      //     this.store.dispatch(new Navigate(['profile', {userId: userId}]))\n      //     this.dialogRef.close();\n      //   })\n    })\n    this.addChip = [];\n    this.tagCtrl.setValue(null);\n  }\n}\n","<div class=\"container\">\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\n    Add tags\n  </h2>\n  <mat-divider></mat-divider>\n  <br>\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\n    Image : <strong>{{data.name}}</strong>\n  </h4>\n  <img width=\"380px\" height=\"400px\"\n       class=\"img-content\"\n       [src]=\"data.link\" alt=\"\">\n  <div class=\"tag-input\">\n    <mat-form-field style=\"width: 100%\">\n      <mat-chip-list #chipList aria-label=\"Tag selection\">\n        <mat-chip\n          *ngFor=\"let tag of addChip\"\n          [selectable]=\"selectable\"\n          [removable]=\"removable\"\n          (removed)=\"remove(tag)\">\n          {{tag.tag}}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip>\n        <input matInput\n               (keyup.enter)=\"search(element.value)\"\n               id=\"search-input\" type=\"text\" #element\n               (keyup)=\"searchTerm$.next($event.target.value)\"\n               #tagInput\n               placeholder=\"New tag\"\n               [formControl]=\"tagCtrl\"\n               [matAutocomplete]=\"auto\"\n               [matChipInputFor]=\"chipList\"\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n               (matChipInputTokenEnd)=\"add($event)\">\n      </mat-chip-list>\n      <mat-autocomplete #auto=\"matAutocomplete\"\n                        (optionSelected)=\"selected($event)\">\n        <mat-option *ngFor=\"let option of tagList\"\n                    [value]=\"option.tag\">\n          {{option.tag}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n<button (click)=\"saveTags()\" mat-raised-button>Save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-email-third-party',\n  templateUrl: './change-email-third-party.component.html',\n  styleUrls: ['./change-email-third-party.component.scss']\n})\nexport class ChangeEmailThirdPartyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>change-email-third-party works!</p>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {MatRadioChange} from \"@angular/material/radio\";\r\nimport {AbstractControl, FormBuilder, FormControl, ValidatorFn} from \"@angular/forms\";\r\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\r\nimport {DeleteImage, SelectImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {FocusMonitor} from \"@angular/cdk/a11y\";\r\nimport {Subject} from \"rxjs\";\r\nimport {UpdateImageDetailsService} from \"../../serviceV2/update-image-details.service\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {DeleteImageService} from \"../../serviceV2/delete-image.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {AddTagsDialogComponent} from \"../add-tags-dialog/add-tags-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-change-image-details-dialog',\r\n  templateUrl: './change-image-details-dialog.component.html',\r\n  styleUrls: ['./change-image-details-dialog.component.scss']\r\n})\r\nexport class ChangeImageDetailsDialogComponent implements OnInit {\r\n  urlReference = new FormControl('');\r\n  isPublic = new FormControl(false);\r\n  @Select(SelectImageState.getSelectedImage) $selectedImage;\r\n  @Select(SelectImageState.getIsPublic) $isPublic;\r\n  public formGroup;\r\n  public selectedImage: ImageModel;\r\n  public $detailsChanged = new Subject<boolean>();\r\n  public tempPublic: boolean;\r\n  public finishedDeleting = null;\r\n  public pressedDelete = false;\r\n\r\n\r\n  constructor(private store: Store,\r\n              private imageService: ImageRequestService,\r\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel,\r\n              private formBuilder: FormBuilder,\r\n              private snackBar: MatSnackBar,\r\n              private dialogRef: MatDialogRef<ChangeImageDetailsDialogComponent>,\r\n              private updateImgService: UpdateImageDetailsService,\r\n              private deleteImageService: DeleteImageService,\r\n              private router: Router,\r\n              private dialog: MatDialog,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedImage = this.store.selectSnapshot(SelectImageState.getSelectedImage);\r\n    const formState = this.selectedImage.linkReference === 'null' ?\r\n      \"\" : this.selectedImage.linkReference;\r\n    this.urlReference = new FormControl(formState, [urlValidator(formState)]);\r\n    this.$selectedImage.subscribe(val => console.log(val.public))\r\n    this.isPublic = new FormControl(this.selectedImage.isPublic);\r\n\r\n    console.log(this.store.selectSnapshot(SelectImageState.getSelectedImage));\r\n\r\n    this.formGroup = this.formBuilder\r\n      .group({urlReference: this.urlReference, tempPublic: this.selectedImage.linkReference})\r\n\r\n    this.tempPublic = this.selectedImage.isPublic;\r\n\r\n  }\r\n\r\n  public urlReferenceValidator(): void {\r\n    let value = this.formGroup.get('urlReference').value;\r\n    if (this.selectedImage.linkReference === 'null' && this.urlReference.value.length === 0) {\r\n      this.$detailsChanged.next(false);\r\n    } else if (this.selectedImage.linkReference !== value && this.urlReference.errors === null) {\r\n      this.$detailsChanged.next(true);\r\n    } else this.$detailsChanged.next(false);\r\n  }\r\n\r\n  public changeStuff(mrChange: MatRadioChange): void {\r\n    if (this.selectedImage.isPublic !== this.tempPublic) {\r\n      this.$detailsChanged.next(true);\r\n    } else { this.$detailsChanged.next(false); }\r\n\r\n  }\r\n\r\n  changeDetails(img: ImageModel): void {\r\n    console.log(this.selectedImage);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.selectedImage.isPublic = this.tempPublic;\r\n    this.selectedImage.linkReference =\r\n      this.urlReference.value.length === 0 ? null : this.urlReference.value;\r\n    console.log(this.tempPublic);\r\n    this.updateImgService\r\n      .changeImageDetails(this.selectedImage)\r\n      .subscribe(value => {\r\n        if (value.status === 200) {\r\n          this.snackBar.open(\r\n            'Image details update was successful.',\r\n            'Details updated',\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'top'\r\n            }\r\n          );\r\n          this.$detailsChanged.next(false);\r\n        }\r\n      });\r\n\r\n    console.log(this.selectedImage)\r\n  }\r\n\r\n  public deleteImage(img: ImageModel): void {\r\n    console.log(img);\r\n    this.pressedDelete = true;\r\n    this.finishedDeleting = false;\r\n    this.store\r\n      .dispatch(new DeleteImage(img))\r\n      .subscribe(value => console.log(value),\r\n        error => {\r\n          this.snackBar.open('Deleting image was not successful',\r\n            null,\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: \"top\"\r\n            });\r\n        },\r\n        () => {\r\n          this.snackBar.open(\"Deleting image was successful\",\r\n            null,\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: \"center\",\r\n              verticalPosition: \"top\"\r\n            });\r\n          this.dialogRef.close();\r\n          this.store.dispatch(new UserDetailsActions\r\n            .GetUserDetails(this.store\r\n              .selectSnapshot(SelectImageState.getSelectedImage).user.userId));\r\n          /*this.store.dispatch(new Navigate(\r\n            [\r\n              'profile',\r\n              {\r\n                userId: this.store.selectSnapshot(SelectImageState.getSelectedImage).user.userId\r\n              }\r\n            ]\r\n          ));*/\r\n        });\r\n\r\n  }\r\n\r\n  addTags(item: ImageModel) {\r\n    const ref = new MatDialogConfig();\r\n    // ref.disableClose = true;\r\n    this.store.dispatch(new SelectImage(item))\r\n    this.dialog.open(AddTagsDialogComponent,\r\n      {\r\n        width: '500px',\r\n        height: '750px',\r\n        data: item,\r\n        panelClass: 'add-tag-dialog'\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function urlValidator(value: string): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const regExp =\r\n      new RegExp('^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,}(:[0-9]{1,5})?(\\\\/.*)?$');\r\n    const forbidden = regExp.test(control.value) === false;\r\n    /*this.$detailsChanged.next(this.selectedImage.linkReference !== value);*/\r\n    console.log(forbidden);\r\n    console.log(control.value);\r\n    return control.value.length === 0 ? null :\r\n      forbidden || control.value > 0 ?\r\n      {forbiddenValue: {value: control.value}} :\r\n        null;\r\n  };\r\n}\r\n","<div class=\"container\" *ngIf=\"$selectedImage | async as img\">\r\n  <h2 style=\"font-family: 'agave Nerd Font',sans-serif;\">\r\n    <strong>Change image details</strong>\r\n  </h2>\r\n  <mat-divider></mat-divider>\r\n  <br>\r\n  <h4 style=\"font-family: 'agave Nerd Font',sans-serif\">\r\n    Image : <strong>{{data.name}}</strong>\r\n  </h4>\r\n\r\n  <div id=\"access-type\">\r\n<!--    <p><strong>Choose Access type :</strong></p>-->\r\n    <a matTooltip=\"When you change to private your images can not be viewed by the community\"\r\n       matTooltipPosition=\"below\"\r\n       style=\"color: black; margin-right: 15px; margin-bottom: 5px\"\r\n       disabled disableRipple mat-icon-button>\r\n      <mat-icon>lock</mat-icon>\r\n      <span>Private</span>\r\n    </a>\r\n    <mat-slide-toggle (change)=\"changeStuff($event)\"\r\n                      style=\"margin-left: 20px\" [(ngModel)]=\"tempPublic\"></mat-slide-toggle>\r\n    <a matTooltip=\"When you change to public your images can be viewed by the community\"\r\n       matTooltipPosition=\"below\"\r\n       style=\"color: black; margin-left: 10px; margin-bottom: 3px\"\r\n       disabled disableRipple mat-icon-button>\r\n      <mat-icon>public</mat-icon>\r\n      <span>Public</span>\r\n    </a>\r\n  </div>\r\n\r\n  <div *ngIf=\"$selectedImage | async as img\" class=\"image-details\">\r\n    <img\r\n         class=\"img-content\"\r\n         [src]=\"img.link\" alt=\"\">\r\n\r\n    <div class=\"image-detail\">\r\n      <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n        <mat-icon>cloud_download</mat-icon>\r\n        <span>Downloads</span>\r\n      </a>\r\n      <h2 id=\"downloaded\"><strong>{{img.downloaded}}</strong></h2>\r\n      <h5 id=\"testus\">+ {{img.downloaded}} downloads since last month</h5>\r\n      <mat-divider></mat-divider>\r\n\r\n      <!--<div class=\"image-views\">\r\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n          <mat-icon>visibility</mat-icon>\r\n          <span>Views</span>\r\n        </a>\r\n        <h2 id=\"views\"><strong>{{img.downloaded}}</strong></h2>\r\n        <h5>+ {{img.downloaded}} view since last month</h5>\r\n        <mat-divider></mat-divider>\r\n      </div>-->\r\n      <div class=\"image-likes\">\r\n        <a style=\"color: black\" disabled disableRipple mat-icon-button>\r\n          <mat-icon>thumb_up</mat-icon>\r\n          <span>Likes</span>\r\n        </a>\r\n        <h2 id=\"likes\"><strong>{{img.liked}}</strong></h2>\r\n        <h5>+ {{img.liked}} view since last month</h5>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <br>\r\n\r\n  <a style=\"color: black\" mat-icon-button disabled class=\"link_ref_label\">\r\n    <mat-icon>public</mat-icon>\r\n    URL link reference :\r\n  </a>\r\n  <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\r\n    <mat-label>URL to image</mat-label>\r\n    <input matInput (ngModelChange)=\"urlReferenceValidator()\"\r\n           [formControl]=\"urlReference\"\r\n           placeholder=\"http:\\\\www.xxx.com\">\r\n    <!--<mat-error>Invalid url</mat-error>-->\r\n    <mat-error *ngIf=\"urlReference.errors\">Entered URL is invalid</mat-error>\r\n  </mat-form-field>\r\n\r\n  <button style=\"margin-right: 5px\" color=\"primary\" *ngIf=\"$detailsChanged | async\" mat-raised-button (click)=\"saveChanges()\">Save changes</button>\r\n  <button id=\"del_btn\" mat-raised-button (click)=\"deleteImage(img)\">Delete image</button>\r\n  <button (click)=\"addTags(img)\" class=\"add-tags\" mat-raised-button>Add Tags</button>\r\n  <mat-spinner *ngIf=\"pressedDelete && finishedDeleting === false\">\r\n\r\n  </mat-spinner>\r\n\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {ImageCropperComponent} from \"../image-cropper/image-cropper.component\";\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SearchViewModel} from \"../../public/search-toolbar/search-view.model\";\r\nimport {ValidPasswordTokenState} from \"../../shared/app-state/states/ValidPasswordToken.state\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  oldPasswordFormField: any;\r\n  newPasswordFormField: any;\r\n  confirmPwdFormField: any;\r\n  errorMsg: {\r\n    error: boolean;\r\n    msg: string;\r\n  } = { error: true, msg: ''};\r\n  requestStatus: {\r\n    status: boolean,\r\n    errorMsg: string\r\n  } = { status: false, errorMsg: ''};\r\n\r\n  errorMsgFromToken: string = null;\r\n  showSpinner = false;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public userDetails: BaseUserDetails,\r\n              private dialogRef: MatDialogRef<ChangePasswordComponent>,\r\n              private fb: FormBuilder,\r\n              private userService: UpdateUserService,\r\n              private store: Store,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initFormFields();\r\n    console.log(this.userDetails);\r\n\r\n  }\r\n\r\n  get oldPwd(): string {\r\n    return this.formGroup.get('oldPassword').value;\r\n  }\r\n\r\n  get newPwd(): string {\r\n    return this.formGroup.get('newPassword').value;\r\n  }\r\n  get confirmPwd(): string {\r\n    return this.formGroup.get('confirmPassword').value;\r\n  }\r\n\r\n  get newPwdControl(): AbstractControl {\r\n    return this.formGroup.get('oldPassword');\r\n  }\r\n\r\n\r\n  private initFormFields() {\r\n    this.oldPasswordFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ]));\r\n    this.newPasswordFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required\r\n      ]));\r\n    this.confirmPwdFormField = new FormControl('', Validators.compose(\r\n      [\r\n        Validators.required\r\n      ]));\r\n    this.formGroup = this.fb.group({\r\n      oldPassword: this.oldPasswordFormField,\r\n      newPassword: this.newPasswordFormField,\r\n      confirmPassword: this.confirmPwdFormField\r\n    });\r\n  }\r\n\r\n  checkPasswords() {\r\n    console.log(this.formGroup.get('confirmPassword').errors === null);\r\n    console.log(this.formGroup.get('newPassword').errors === null);\r\n    if (this.formGroup.get('confirmPassword').value.length > 5 &&\r\n      this.formGroup.get('newPassword').value.length > 5) {\r\n      if (this.confirmPwd === this.newPwd) {\r\n        this.formGroup\r\n          .get('newPassword')\r\n          .setErrors(null);\r\n        this.errorMsg.error = false;\r\n      } else {\r\n        this.formGroup\r\n          .get('newPassword')\r\n          .setErrors({incorrect: true});\r\n        this.errorMsg.error = true;\r\n        this.errorMsg.msg = 'Password does not match';\r\n      }\r\n    } else {\r\n      this.formGroup\r\n        .controls['newPassword']\r\n        .setErrors({incorrect: true});\r\n      this.errorMsg.error = true;\r\n      this.errorMsg.msg = 'Password must be at least 5 characters long';\r\n    }\r\n\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.userService.changeUserPassword(this.userDetails.userId,\r\n      {\r\n        oldPassword: this.oldPwd,\r\n        newPassword: this.newPwd\r\n      }).subscribe(value => {\r\n      this.requestStatus.errorMsg = value.body.errorMsg;\r\n      this.requestStatus.status = value.body.status;\r\n    });\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  resetPwd() {\r\n    this.errorMsgFromToken = null;\r\n    this.showSpinner = true;\r\n    this.userService\r\n      .changeUserPasswordByToken(\r\n        this.store.selectSnapshot(ValidPasswordTokenState.getUserId),\r\n        this.newPwd,\r\n        this.store.selectSnapshot(ValidPasswordTokenState.getTokenId))\r\n      .subscribe(value => {\r\n          console.log(value.status);\r\n          this.showSpinner = false;\r\n          this.errorMsgFromToken = null;\r\n          if (value.status === 200) {\r\n            this.dialogRef.close();\r\n            this.dialog.open(VerificationDialogComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data: {text: 'Password has been changed successfully'}\r\n            });\r\n          }\r\n        },\r\n          error => {\r\n            this.showSpinner = false;\r\n            this.errorMsgFromToken = error.message;\r\n          });\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n  <h1 class=\"header\">Change your Password</h1>\r\n  <mat-form-field *ngIf=\"userDetails !== null\" appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Old password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\" [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"oldPasswordFormField\">\r\n    <mat-error>Invalid password</mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>New password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\"\r\n           [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"newPasswordFormField\">\r\n    <mat-error *ngIf=\"errorMsg.error === true\">{{errorMsg.msg}}</mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Confirm password</mat-label>\r\n    <input (ngModelChange)=\"checkPasswords()\"\r\n           [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"confirmPwdFormField\">\r\n    <mat-error *ngIf=\"errorMsg.error === true\">{{errorMsg.msg}}</mat-error>\r\n  </mat-form-field>\r\n  <div class=\"actions\">\r\n    <button (click)=\"closeDialog()\" class=\"close-btn\" mat-raised-button>Close</button>\r\n\r\n    <button (click)=\"changePassword()\"\r\n            *ngIf=\"errorMsg.error === false && userDetails !== null\"\r\n            color=\"warn\" mat-raised-button>\r\n      Save changes\r\n    </button>\r\n    <button (click)=\"resetPwd()\"\r\n            *ngIf=\"errorMsg.error === false && userDetails === null && showSpinner === false\"\r\n            color=\"warn\" mat-raised-button>\r\n      Reset Password\r\n    </button>\r\n  </div>\r\n  <br>\r\n  <mat-error *ngIf=\"errorMsgFromToken !== null\">{{errorMsgFromToken}}</mat-error>\r\n  <mat-spinner *ngIf=\"showSpinner === true\"></mat-spinner>\r\n  <span>{{requestStatus.errorMsg}}</span>\r\n</div>\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Form, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoginAction = AuthenticationActions.LoginAction;\r\n\r\n@Component({\r\n  selector: 'app-delete-user-account-dialog',\r\n  templateUrl: './delete-user-account-dialog.component.html',\r\n  styleUrls: ['./delete-user-account-dialog.component.scss']\r\n})\r\nexport class DeleteUserAccountDialogComponent implements OnInit {\r\n  password: any;\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public userDetails: BaseUserDetails,\r\n              private dialogRef: MatDialogRef<DeleteUserAccountDialogComponent>,\r\n              private fb: FormBuilder,\r\n              private userService: UpdateUserService,\r\n              private router: Router,\r\n              private store: Store) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.password = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n    this.formGroup = this.fb.group({\r\n      password: this.password\r\n    });\r\n    this.formGroup.get('password').valueChanges.subscribe(value => console.log(value))\r\n  }\r\n\r\n  get pwd(): FormControl {\r\n    return this.formGroup.get('password') as FormControl;\r\n  }\r\n\r\n  deleteAccount() {\r\n    this.userService\r\n      .deleteUserAccount({userId: this.userDetails.userId, password: this.pwd.value})\r\n      .subscribe(value => {\r\n      }, error => {\r\n      }, () => {\r\n        this.dialogRef.close();\r\n        this.store.dispatch(new AuthenticationActions.Logout())\r\n          .subscribe(value =>\r\n            this.store.dispatch(new Navigate(['welcome'])));\r\n      });\r\n  }\r\n}\r\n","<h2>Confirm your password in order to proceed</h2>\r\n<form (ngSubmit)=\"deleteAccount()\" [formGroup]=\"formGroup\">\r\n  <mat-form-field appearance=\"fill\" [style.width.px]=300>\r\n    <mat-label>Password</mat-label>\r\n    <input [style.fontSize.px]=\"15\" type=\"password\"\r\n           matInput [formControl]=\"password\">\r\n    <mat-error>Invalid password</mat-error>\r\n  </mat-form-field>\r\n  <br>\r\n  <br>\r\n  <button *ngIf=\"pwd.errors === null\" mat-raised-button color=\"warn\" type=\"submit\">Delete</button>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport {debounceTime, distinctUntilChanged, map, share, tap} from \"rxjs/operators\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\r\nimport {AbstractControl, Form, FormBuilder, FormControl, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {IUserAuthState} from \"../../shared/domain/UserAuthStateModel\";\r\nimport {SelectedImage} from \"../../shared/domain/imageModel/image.model\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ChangeEmailThirdPartyComponent} from \"../change-email-third-party/change-email-third-party.component\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {SearchByUsersService} from \"../../serviceV2/search-by-users.service\";\r\nimport IsLoggedIn = AuthenticationActions.IsLoggedIn;\r\nimport {ChangePasswordComponent} from \"../change-password/change-password.component\";\r\nimport {DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {DeleteUserAccountDialogComponent} from \"../delete-user-account-dialog/delete-user-account-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  @Select(UserDetailsState.userDetails) $userDetails;\r\n  @Select(LoginStateModel.profileImg) $profile;\r\n  @Select(LoginStateModel.loggedUserId) $userId;\r\n  @Select(LoginStateModel.loginType) $thirdPartyLogin;\r\n  firstNameControl = new FormControl();\r\n  lastNameControl = new FormControl();\r\n  emailControl = new FormControl();\r\n  userNameControl = new FormControl();\r\n  formGroup;\r\n\r\n  readOnlyEmail: boolean = true;\r\n  readOnlyUserName: boolean = true;\r\n  readOnlyFirstName: boolean = true;\r\n  readOnlyLastName: boolean = true;\r\n\r\n\r\n  emailValChange$ = new Subject<boolean>();\r\n  firstValChange$ = new Subject<boolean>();\r\n  lastValChange$ = new Subject<boolean>();\r\n  userNameValChange$ = new Subject<boolean>();\r\n  userDetailsChanged$ = new Subject<boolean>();\r\n\r\n  loggedUser: BaseUserDetails;\r\n\r\n  isMobile = false;\r\n\r\n  constructor(private store: Store,\r\n              private service: UserAuthenticationService,\r\n              private dialog: MatDialog,\r\n              private formBuilder: FormBuilder,\r\n              private updateUserService: UpdateUserService,\r\n              private userService: SearchByUsersService,\r\n              private deviceObserver: DeviceObserverService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.deviceObserver\r\n      .getActiveDevice()\r\n      .subscribe(device =>\r\n        this.isMobile = device === 'xs');\r\n\r\n    /*this.emailValChange$\r\n      .pipe(debounceTime(1000), distinctUntilChanged())\r\n      .subscribe(email => {\r\n        if (email !== this.loggedUser.email) {\r\n          if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n            this.userDetailsChanged$.next(true);\r\n          }\r\n        } else {\r\n          this.userDetailsChanged$.next(false);\r\n        }\r\n      });*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const loggedUser : BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    this.loggedUser = this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    const userDetails: BaseUserDetails =\r\n       this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n\r\n    console.log(\"google login ? : \" + this.store.selectSnapshot(LoginStateModel.loginType));\r\n\r\n    if (userDetails.userId === undefined) {\r\n      this.store.dispatch(\r\n        new AuthenticationActions.LoggedUserDetails(loggedUser.userId))\r\n        .subscribe(userDetailsResp => {\r\n          this.initFormGroup(userDetailsResp);\r\n        })\r\n    } else {\r\n      this.firstNameControl = new FormControl(userDetails.firstName, [Validators.required]);\r\n      this.lastNameControl = new FormControl(userDetails.lastName, [Validators.required]);\r\n      this.emailControl = new FormControl(userDetails.email,\r\n        [\r\n          emailValidator(loggedUser.email), Validators.required]);\r\n      this.userNameControl = new FormControl(userDetails.username, [Validators.required]);\r\n      this.formGroup = this.formBuilder.group({\r\n        firstName: this.firstNameControl,\r\n        lastName: this.lastNameControl,\r\n        email: this.emailControl,\r\n        userName: this.userNameControl\r\n      });\r\n      this.store.dispatch(\r\n        new AuthenticationActions.LoggedUserDetails(loggedUser.userId))\r\n        .subscribe(userDetailsResp => {\r\n          /*this.initFormGroup(userDetailsResp);*/\r\n        });\r\n    }\r\n\r\n    this.firstNameControl.valueChanges.subscribe(value => console.log(value))\r\n\r\n    // this.formGroup = this.formBuilder.group({\r\n    //   firstName: null\r\n    // })\r\n    // if (loggedUser !== undefined && loggedUser !== null) {\r\n    //   this.store.dispatch(\r\n    //     new UserDetailsActions\r\n    //       .GetUserDetails(loggedUser.userId)\r\n    //   )\r\n    // } else this.store.dispatch(new Navigate(['/login']))\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  get email() {\r\n    return this.formGroup.get('email');\r\n  }\r\n\r\n  get userName() {\r\n    return this.formGroup.get('userName');\r\n  }\r\n\r\n  get lastName() {\r\n    return this.formGroup.get('lastName');\r\n  }\r\n\r\n\r\n\r\n  get firstName() {\r\n    return this.formGroup.get('firstName');\r\n  }\r\n\r\n  /*get height() {\r\n    return this.formGroup.get('height');\r\n  }*/\r\n\r\n  private initFormGroup(userDetailsResp) {\r\n    console.log(userDetailsResp.LoggedDetails);\r\n    this.firstNameControl = new FormControl(userDetailsResp.LoggedDetails.firstName);\r\n    this.lastNameControl = new FormControl(userDetailsResp.LoggedDetails.lastName);\r\n    this.emailControl = new FormControl(userDetailsResp.LoggedDetails.email,\r\n      [\r\n        emailValidator(userDetailsResp.LoggedDetails.email)]\r\n    );\r\n    this.userNameControl = new FormControl(userDetailsResp.LoggedDetails.userName);\r\n    this.formGroup = this.formBuilder.group({\r\n      firstName: this.firstNameControl,\r\n      lastName: this.lastNameControl,\r\n      email: this.emailControl,\r\n      userName: this.userNameControl\r\n    });\r\n  }\r\n\r\n  navigateToUpload() {\r\n    this.store.dispatch(new Navigate(['upload']))\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    const loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    this.store.dispatch(new UserDetailsActions\r\n      .UploadUserProfile(loggedUser.userId, formData));\r\n  }\r\n\r\n  editEmail(): void {\r\n    const thirdPartyLogin = this.store.selectSnapshot(LoginStateModel.loginType);\r\n\r\n    if (thirdPartyLogin) {\r\n      this.dialog.open(ChangeEmailThirdPartyComponent, {\r\n        width: '450px',\r\n        height: '460px'\r\n      });\r\n    } else {\r\n      this.readOnlyEmail = false;\r\n      console.log(this.loggedUser.email);\r\n      console.log(this.emailControl.value);\r\n    }\r\n\r\n    /*this.readOnlyEmail = true;*/\r\n\r\n\r\n  }\r\n\r\n  emailChanged(): void {\r\n    console.log(this.email.errors);\r\n    this.store\r\n      .dispatch(new SearchUsers(new BehaviorSubject(this.email.value)))\r\n      .subscribe(value => {\r\n        console.log(\"JFSDJSDJSDFJFJSDJDJDJ\");\r\n        console.log(value);\r\n      });\r\n    if (this.emailControl.value !== this.loggedUser.email && this.email.errors === null) {\r\n      this.store\r\n        .selectSnapshot(SearchByUsersState.getFetchedUsers)\r\n        .forEach(user => {\r\n          if (user.email !== this.email.value && this.email.errors === null) {\r\n            this.userDetailsChanged$.next(true);\r\n          } else {\r\n            this.userDetailsChanged$.next(false);\r\n            this.formGroup\r\n              .controls\r\n              .email.setErrors({forbiddenValue: {value: 'Invalid!! Email Already exists'}});\r\n          }\r\n        });\r\n    } else {\r\n      this.userDetailsChanged$.next(false);\r\n    }\r\n  }\r\n\r\n  saveEmailChanges() {\r\n    const baseUserDetails = this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const user: BaseUserDetails = {\r\n      userId: baseUserDetails.userId,\r\n      firstName: this.firstNameControl.value,\r\n      lastName: this.lastNameControl.value,\r\n      email: this.emailControl.value,\r\n      password: baseUserDetails.password,\r\n      profileImgPath: baseUserDetails.profileImgPath,\r\n      username: this.userNameControl.value\r\n    }\r\n    this.updateUserService.changeUserEmail(user)\r\n      .subscribe(value => console.log(value));\r\n  }\r\n\r\n  userNameChanged() {\r\n    this.userService\r\n      .searchByUserName(new BehaviorSubject(this.userName.value))\r\n      .subscribe(userList => {\r\n        userList.forEach(user => {\r\n          if (user.username !== this.userName.value) {\r\n            this.userNameValChange$.next(true);\r\n          } else {\r\n            this.formGroup\r\n              .controls\r\n              .userName\r\n              .setErrors({value: 'Invalid!! Email Already exists'});\r\n            this.emailValChange$.next(false);\r\n          }\r\n        });\r\n      });\r\n    console.log(this.userName.value);\r\n  }\r\n\r\n  firstNameChanged(): void {\r\n    if (this.firstName.value !== this.loggedUser.firstName) {\r\n      this.firstValChange$.next(true);\r\n    } else {\r\n      this.firstValChange$.next(false);\r\n    }\r\n  }\r\n\r\n  lastNameOnChange(): void {\r\n    if (this.lastName.value !== this.loggedUser.lastName) {\r\n      this.lastValChange$.next(true);\r\n    } else {\r\n      this.lastValChange$.next(false);\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n    const userDetails: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    const thirdPartyLogin = this.store.selectSnapshot(LoginStateModel.loginType);\r\n    if (thirdPartyLogin === false) {\r\n      if (this.isMobile) {\r\n        this.dialog.open(ChangePasswordComponent, {\r\n          data: userDetails,\r\n          minWidth: '100vw'\r\n        });\r\n      } else {\r\n        this.dialog.open(ChangePasswordComponent, {\r\n          data: userDetails\r\n        });\r\n      }\r\n      console.log(userDetails);\r\n    }\r\n  }\r\n\r\n  deleteUserAccount() {\r\n    const userDetails: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    console.log(userDetails);\r\n    if (this.isMobile) {\r\n      this.dialog.open(DeleteUserAccountDialogComponent, {\r\n        data: userDetails,\r\n        minWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(DeleteUserAccountDialogComponent, {\r\n        data: userDetails\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function emailValidator(value: string): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    let mailformat = new RegExp(/\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/);\r\n    const forbidden = mailformat.test(control.value) === false;\r\n    return forbidden ? {forbiddenValue: {value: control.value + \" is not an valid email\"}} : null;\r\n  };\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"top\">\r\n    <div class=\"top_left_filler\"></div>\r\n    <div class=\"profile-icon\">\r\n      <mat-icon *ngIf=\"!($profile | async)\" id=\"icon\" style=\"font-size: 200px; color: grey\">account_circle</mat-icon>\r\n      <img *ngIf=\"$profile | async\" class=\"profile-img\" [src]=\"$profile | async\">\r\n      <label id=\"select-profile\">\r\n        <input class=\"input-fontSize-desktop\" (change)=\"handleFileInput($event.target.files)\" style=\"display: none\"\r\n               type=\"file\">\r\n        <a>Change profile image</a>\r\n      </label>\r\n    </div>\r\n    <div class=\"form\">\r\n      <form [formGroup]=\"formGroup\" class=\"example-form\">\r\n        <mat-form-field appearance=\"fill\" id=\"first\" class=\"example-full-width\">\r\n          <mat-label>Firstname</mat-label>\r\n          <input (ngModelChange)=\"firstNameChanged()\" class=\"input-fontSize-desktop\" [formControl]=\"firstNameControl\"\r\n                 matInput placeholder=\"John\">\r\n          <mat-icon matSuffix>edit</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n          <mat-label>Lastname</mat-label>\r\n          <input (ngModelChange)=\"lastNameOnChange()\" class=\"input-fontSize-desktop\" [formControl]=\"lastNameControl\" matInput placeholder=\"Doe\">\r\n          <mat-icon matSuffix>edit</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n          <mat-label>Change Email</mat-label>\r\n          <input class=\"input-fontSize-desktop\" placeholder=\"doe@gmail.com\"\r\n                 [readonly]=\"readOnlyEmail\"\r\n                 [formControl]=\"emailControl\"\r\n                 (ngModelChange)=\"emailChanged()\"\r\n                 matInput type=\"text\">\r\n          <button (click)=\"editEmail()\" mat-button matSuffix mat-icon-button aria-label=\"Edit\">\r\n            <mat-icon style=\"font-size: 17px\">edit</mat-icon>\r\n          </button>\r\n          <mat-error style=\"font-size: 16px\" *ngIf=\"email.errors\">{{email.errors.forbiddenValue.value}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <!--<mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n          <mat-label>Email</mat-label>\r\n          <input [readonly]=\"readOnlyEmail\" [formControl]=\"emailControl\" matInput placeholder=\"doe@gmail.com\">\r\n          <button mat-button mat-icon-button (click)=\"editEmail()\">\r\n            <mat-icon  matSuffix>edit</mat-icon>\r\n          </button>\r\n        </mat-form-field>-->\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <div class=\"form-2\">\r\n      <mat-form-field id=\"userName\" appearance=\"fill\" class=\"example-full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input class=\"input-fontSize-desktop\"\r\n               [readonly]=\"readOnlyUserName\"\r\n               [formControl]=\"userNameControl\" matInput placeholder=\"johnDoe\"\r\n               (ngModelChange)=\"userNameChanged()\">\r\n        <button (click)=\"readOnlyUserName = false\" mat-button matSuffix mat-icon-button aria-label=\"Edit\">\r\n          <mat-icon style=\"font-size: 17px\">edit</mat-icon>\r\n        </button>\r\n        <mat-error style=\"font-size: 16px\" *ngIf=\"userName.errors\">{{userName.errors.value}}</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"margin-top: 10px\" class=\"actions\">\r\n      <div class=\"save\">\r\n        <button (click)=\"saveEmailChanges()\"\r\n                color=\"warn\"\r\n                *ngIf=\"!email.errors && !userName.errors && !firstName.errors && !lastName.errors &&\r\n                   ((userDetailsChanged$ | async) === true ||\r\n                (userNameValChange$ | async) === true   ||\r\n                (firstValChange$ | async) === true   ||\r\n                (lastValChange$ | async) === true)\"\r\n                mat-raised-button>Save changes\r\n        </button>\r\n      </div>\r\n      <div fxLayoutAlign=\"end\" fxLayoutGap=\"15px\" class=\"change-pswd\">\r\n        <button *ngIf=\"($thirdPartyLogin | async) === false\" (click)=\"changePassword()\" color=\"warn\" mat-raised-button>Change password</button>\r\n        <button (click)=\"deleteUserAccount()\" mat-raised-button color=\"warn\">Delete account</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {LoginComponent} from \"../../shared/login/login.component\";\r\nimport {FileUploadComponent} from \"../file-upload/file-upload.component\";\r\nimport {Location} from \"@angular/common\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {UploadImageDialogComponent} from \"../upload-image-dialog/upload-image-dialog.component\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {Device} from \"../../serviceV2/device-observer.service\";\r\n\r\n@Component({\r\n  selector: 'app-file-upload-wrapper',\r\n  templateUrl: './file-upload-wrapper.component.html',\r\n  styleUrls: ['./file-upload-wrapper.component.scss']\r\n})\r\nexport class FileUploadWrapperComponent implements OnInit {\r\n\r\n\r\n  device: string;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private route: ActivatedRoute,\r\n              private store: Store,\r\n              private media: MediaObserver) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        const userId = param.get('userId');\r\n        this.store.dispatch(new LoggedUserDetails(userId))\r\n        const ref = new MatDialogConfig();\r\n        // this.dialog.open(UploadImageDialogComponent,\r\n        //   {\r\n        //     width: '900px',\r\n        //     height: '750px',\r\n        //     disableClose: true,\r\n        //     autoFocus: false,\r\n        //     data: userId\r\n        //   });\r\n\r\n        this.media.asObservable().subscribe(value => this.device = value[0].mqAlias);\r\n\r\n        const isMobile = this.device === Device.MOBILE || this.device === Device.TABLET;\r\n        this.dialog.open(FileUploadComponent,\r\n          {\r\n            width: '1300px',\r\n            height: '950px',\r\n            disableClose: true,\r\n            autoFocus: false,\r\n            data: userId\r\n          });\r\n      });\r\n  }\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {NgxDropzoneChangeEvent} from \"ngx-dropzone\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {\r\n  AsignBase64ToOriginalImage,\r\n  CropDownloadViewImage,\r\n  CropGalleryViewImage,\r\n  UploadImage\r\n} from \"../../shared/app-state/actions/image.action\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {Location} from '@angular/common';\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {FILE} from \"dns\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatRadioChange} from \"@angular/material/radio\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {UploadImageModel} from \"../../shared/domain/imageModel/upload-image.model\";\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {ImageCropperComponent} from \"../image-cropper/image-cropper.component\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {Base64ToBlobConverter} from \"../../shared/util/Base64ToBlobConverter\";\r\nimport {Subject} from \"rxjs\";\r\nimport {ImageUploadService} from \"../../serviceV2/image-upload.service\";\r\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {PassDataToDialogAction} from \"../../shared/app-state/actions/pass-data-to-dialog.action\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss']\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  isLinear = true;\r\n  uploadSuccess: boolean = false;\r\n  files: File[] = [];\r\n  spinner = new Subject<boolean>();\r\n  isValidating: boolean = false;\r\n  imageChangedEvent: any;\r\n  croppedGalleryImage: any;\r\n  croppedDownloadViewImage: any;\r\n  showCropper = false;\r\n  foo;\r\n  @Output()\r\n  change: EventEmitter<MatRadioChange>\r\n  public formGroup;\r\n  public isPublic: boolean = true;\r\n  fooControl = new FormControl(false);\r\n  public imageUrlReference = new FormControl('');\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  @Select(CropImageState.getData) $imageData;\r\n  @Select(CropImageState.getCroppedDownloadImage) $croppedDownloadViewImage;\r\n  @Select(CropImageState.getGalleryFile) $galleryFile;\r\n\r\n\r\n  isValidToUpload: boolean = false;\r\n  canvasRotation: any;\r\n  public displayCroppedImage: boolean = false;\r\n\r\n  originalFileDimensions = {\r\n    width: 0,\r\n    height: 0\r\n  };\r\n\r\n\r\n  public device: string;\r\n\r\n  constructor(private store: Store,\r\n              private dialogRef: MatDialogRef<FileUploadComponent>,\r\n              private router: Router,\r\n              private location: Location,\r\n              private snackBar: MatSnackBar,\r\n              private dialog: MatDialog,\r\n              @Inject(MAT_DIALOG_DATA) public userId: string,\r\n              private formBuilder: FormBuilder,\r\n              private http: HttpClient,\r\n              private dialogRef2: MatDialogRef<ImageCropperComponent>,\r\n              public media: MediaProcessorService,\r\n              private media2: MediaObserver,\r\n              private  uploadService: ImageUploadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n    this.formGroup = this.formBuilder\r\n      .group({url: this.imageUrlReference})\r\n    this.foo = this.formBuilder\r\n      .group({isPublic: this.fooControl})\r\n\r\n    this.firstFormGroup = this.formBuilder.group({\r\n      uploadCtr: ['', Validators.required]\r\n    })\r\n\r\n    /*this.media2.asObservable()\r\n      .subscribe(value => {\r\n        console.log(value[0].mqAlias);\r\n      })*/\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.deviceObserverService.getActiveDevice().subscribe(value => this.device = value);\r\n  }\r\n\r\n  public changeStuff(mrChange: MatRadioChange): void {\r\n    console.log(mrChange.value);\r\n    this.isPublic = mrChange.value === '1';\r\n  }\r\n\r\n  public validate(value: string): boolean {\r\n    const regExp = new RegExp('[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}');\r\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\r\n  }\r\n\r\n  public urlReferenceValidator(): void {\r\n    const value = this.formGroup.get('url').value;\r\n    const regExp = new RegExp(\"[Hh][Tt][Tt][Pp][Ss]?:\\\\/\\\\/(.*)[.]{1}[a-zA-Z]{2,}\");\r\n    if (regExp.test(value)) {\r\n      this.formGroup.controls['url']\r\n        .setErrors(null)\r\n    } else {\r\n      this.formGroup.controls['url']\r\n        .setErrors({'error': true})\r\n    }\r\n  }\r\n\r\n  onSelect($event: NgxDropzoneChangeEvent): void {\r\n    this.isValidating = true;\r\n    const typeIndex = $event.addedFiles[0].name.lastIndexOf('.');\r\n    const type = $event.addedFiles[0].name.substr(typeIndex + 1);\r\n    console.log(type);\r\n    if ((type === 'jpg' || type === 'png' || type === 'jfif')) {\r\n      let request = new FormData();\r\n      request.append('file', $event.addedFiles[0]);\r\n\r\n\r\n      this.uploadService.validateImage($event.addedFiles[0])\r\n        .subscribe(value => {\r\n          const message = value.message;\r\n          console.log(value.status);\r\n          if (value.status === 200) {\r\n            this.originalFileDimensions.width = value.width;\r\n            this.originalFileDimensions.height = value.height;\r\n            this.files.push(...$event.addedFiles);\r\n            this.isValidToUpload = true;\r\n            this.isLinear = true;\r\n            this.uploadSuccess = true;\r\n            this.isValidating = false;\r\n\r\n            // getting uploaded file and passing it to crop image\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n              const base64Temp = e.target.result;\r\n              this.croppedGalleryImage = base64Temp;\r\n              this.croppedDownloadViewImage = base64Temp;\r\n              this.store.dispatch(new AsignBase64ToOriginalImage(base64Temp));\r\n              this.store.dispatch(new CropDownloadViewImage(this.croppedGalleryImage));\r\n              this.store.dispatch(new CropGalleryViewImage(this.croppedDownloadViewImage))\r\n                .subscribe(value => {\r\n                  // open imageCropper dialog(component) to let user decide\r\n                  // which part of th uploaded image should be displayed\r\n                  // this.dialog.open(ImageCropperComponent,{\r\n                  //   data: e.target.result,\r\n                  //   height: '1200px',\r\n                  //   width: '1400px'\r\n                  // })\r\n                });\r\n            };\r\n            reader.readAsDataURL($event.addedFiles[0]);\r\n          } else {\r\n            this.onRemove($event.addedFiles[0]);\r\n            this.isValidToUpload = false;\r\n            this.isValidating = false;\r\n            console.log(this.isValidToUpload)\r\n            this.snackBar.open(\r\n              message,\r\n              \"Validation was unsuccessful\",\r\n              {\r\n                duration: 3000,\r\n                horizontalPosition: \"center\",\r\n                verticalPosition: \"top\"\r\n              }\r\n            );\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  public cropImageForDownloadView(): void {\r\n    const isMobile = this.device === Device.MOBILE;\r\n    const width = isMobile ? 250 : 1200;\r\n    const height = isMobile ? width / 1.7910 : 670;\r\n\r\n    this.store.dispatch(new PassDataToDialogAction(\r\n      {\r\n        imgData: this.store.selectSnapshot(CropImageState.getData),\r\n        resizeWidth: width,\r\n        resizeHeight: height,\r\n        viewName: 'Download',\r\n        imgDimensions: {\r\n          originalWidth: this.originalFileDimensions.width, originalHeight: this.originalFileDimensions.height\r\n        }\r\n      }\r\n    ));\r\n\r\n    if (this.device === Device.TABLET || this.device == Device.MOBILE) {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height, viewName: 'Download', imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px',\r\n        width: '100vw',\r\n        maxWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height, viewName: 'Download', imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public cropImageForGallery(): void {\r\n\r\n    const isMobile = this.device === Device.MOBILE;\r\n    const isTablet = this.device === Device.TABLET;\r\n    const width = isMobile ? 150 : 500;\r\n    const height = isMobile ? width / 1.087 : 460;\r\n    this.store.dispatch(new PassDataToDialogAction(\r\n      {\r\n        imgData: this.store.selectSnapshot(CropImageState.getData),\r\n        resizeWidth: width,\r\n        resizeHeight: height,\r\n        viewName: 'Gallery',\r\n        imgDimensions: {\r\n          originalWidth: this.originalFileDimensions.width, originalHeight: this.originalFileDimensions.height\r\n        }\r\n      }\r\n    ));\r\n\r\n\r\n    if (this.device === Device.TABLET || this.device == Device.MOBILE) {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height,\r\n          viewName: 'Gallery',\r\n          imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px',\r\n        width: '100vw',\r\n        maxWidth: '100vw'\r\n      });\r\n    } else {\r\n      this.dialog.open(ImageCropperComponent, {\r\n        data: {\r\n          img: this.store.selectSnapshot(CropImageState.getData),\r\n          width,\r\n          height,\r\n          viewName: 'Gallery',\r\n          imgDimensions: this.originalFileDimensions\r\n        },\r\n        height: '1000px'\r\n      })\r\n    }\r\n    this.displayCroppedImage = true;\r\n    // this.store.dispatch(new CropGalleryViewImage(this.croppedGalleryImage))\r\n    //   .subscribe(value => console.log(value));\r\n\r\n  }\r\n\r\n  onRemove(f: any): void {\r\n    this.files.splice(this.files.indexOf(f), 1);\r\n    this.isValidToUpload = false;\r\n    this.store.dispatch(new CropGalleryViewImage(null))\r\n  }\r\n\r\n  upload(): void {\r\n    this.spinner.next(true);\r\n    const loggedInUserModel: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    let request = new FormData();\r\n    request.append('file', this.files[0]);\r\n    const isP = this.isPublic ? 'true' : 'false';\r\n\r\n\r\n    const galleryBase64 = this.store.selectSnapshot(CropImageState.getGalleryFile);\r\n    //cropped image to file(base64 to file)\r\n    const imageBlob = Base64ToBlobConverter.dataURItoBlob(galleryBase64.substr(galleryBase64.lastIndexOf(',') + 1));\r\n\r\n    const imageFile = new File([imageBlob],\r\n      \"cropped-\" + this.files[0].name,\r\n      {type: 'image/jpeg'});\r\n\r\n\r\n    const downloadBase64 = this.store.selectSnapshot(CropImageState.getCroppedDownloadImage);\r\n    const downloadBlob = Base64ToBlobConverter.dataURItoBlob(downloadBase64.substr(downloadBase64.lastIndexOf(',') + 1));\r\n    const downloadImageFile = new File([downloadBlob],\r\n      \"cropped-\" + this.files[0].name,\r\n      {type: 'image/jpeg'});\r\n\r\n    // setting response object with needed values\r\n    const uploadModel: UploadImageModel = {\r\n      userId: loggedInUserModel.userId,\r\n      orgFile: this.files[0],\r\n      isPublic: isP,\r\n      urlReference: this.validate(this.imageUrlReference.value) === true ?\r\n        this.imageUrlReference.value : null,\r\n      file: request,\r\n      galleryFile: imageFile,\r\n      downloadFile: downloadImageFile\r\n    }\r\n\r\n    // sending request\r\n    this.store.dispatch(new UploadImage(uploadModel))\r\n      .subscribe(value1 => {\r\n        request = null;\r\n        this.files = [];\r\n        this.isValidToUpload = false;\r\n        if (value1.Upload.status) {\r\n          this.snackBar.open(\r\n            \"File uploaded successfully\",\r\n            \"File uploaded\",\r\n            {\r\n              duration: 3000,\r\n              horizontalPosition: \"center\",\r\n              verticalPosition: \"top\"\r\n            }\r\n          );\r\n          this.spinner.next(false);\r\n          this.store.dispatch(new CropGalleryViewImage(null))\r\n          this.store.dispatch(new CropDownloadViewImage(null))\r\n          this.store.dispatch(new AsignBase64ToOriginalImage(null))\r\n        }\r\n        // window.location.reload();\r\n      }, error => {\r\n        this.spinner.next(false);\r\n        this.snackBar.open(\r\n          error.error,\r\n          \"File uploaded error\",\r\n          {\r\n            duration: 3000,\r\n            horizontalPosition: \"center\",\r\n            verticalPosition: \"top\",\r\n            panelClass: ['uploadError']\r\n          }\r\n        );\r\n        request = null;\r\n        this.files = [];\r\n        this.isValidToUpload = false;\r\n        this.imageUrlReference = null;\r\n        this.store.dispatch(new CropGalleryViewImage(null))\r\n      });\r\n  }\r\n\r\n  close(): void {\r\n    const userId: string = this.store.selectSnapshot(LoginStateModel.loggedUserId);\r\n    // this.router.navigate(['profile'])\r\n    this.store.dispatch(new Navigate(['profile', {userId: userId}]))\r\n    this.store.dispatch(new CropGalleryViewImage(null));\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  imageCropped($event: ImageCroppedEvent) {\r\n    console.log(\"dfghdfjkgh\");\r\n    this.croppedGalleryImage = $event.base64;\r\n  }\r\n\r\n  imageLoaded() {\r\n    console.log(\"dfghdfjkgh666666666\");\r\n    this.showCropper = true;\r\n    console.log('Image loaded');\r\n  }\r\n\r\n  cropperReady($event: Dimensions) {\r\n    console.log(\"what\");\r\n  }\r\n\r\n  loadImageFailed() {\r\n\r\n  }\r\n\r\n  // fileChangeEvent($event: Event) {\r\n  //   this.imageChangedEvent = $event;\r\n  //   console.log(this.imageChangedEvent)\r\n  // }\r\n  cropped2: any;\r\n\r\n  fileChangeEvent($event: Event) {\r\n    this.imageChangedEvent = $event;\r\n  }\r\n}\r\n","<h2 id=\"header\">Publish to <strong>SpecShots</strong></h2>\r\n\r\n\r\n\r\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [completed]=\"uploadSuccess\" [stepControl]=\"firstFormGroup\">\r\n    <ng-template matStepLabel>Select image</ng-template>\r\n    <div id=\"access-type\">\r\n      <p><strong>Choose Access type :</strong></p>\r\n      <mat-radio-group [formControl]=\"fooControl\"\r\n                       (change)=\"changeStuff($event)\"\r\n                       aria-label=\"Select an option\">\r\n        <mat-radio-button class=\"foo\" [checked]=\"true\" value=\"1\">\r\n          <div class=\"options\">\r\n            <mat-icon>public</mat-icon>\r\n            Public\r\n          </div>\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"0\">\r\n          <div class=\"options\">\r\n            <mat-icon>lock</mat-icon>\r\n            Private\r\n          </div>\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n    <ngx-dropzone class=\"drop-zone\" (change)=\"onSelect($event)\">\r\n      <ngx-dropzone-label class=\"drop-label\">\r\n        <div *ngIf=\"isValidating == false && uploadSuccess == false\" class=\"label-content\">\r\n          <button mat-icon-button>\r\n            <mat-icon style=\"font-size: 100px;\">add_photo_alternate</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div style=\"display: flex; flex-direction: column; justify-content: center; align-items: center\" *ngIf=\"isValidating == true\">\r\n          <mat-spinner></mat-spinner>\r\n          <span style=\"margin-top: 20px\">Validating image... This can take a while..</span>\r\n        </div>\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-label class=\"label-header\">\r\n        <h1 *ngIf=\"isValidating == false && uploadSuccess == false\">Drag and drop a file</h1>\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-label class=\"label-description\">\r\n        <!--<div *ngIf=\"isValidating == false && uploadSuccess == false\">-->\r\n          <li class=\"list-item\"><strong>High quality photos</strong></li>\r\n          <li class=\"list-item\">Only upload photos you <strong>own the rights to</strong></li>\r\n          <li class=\"list-item\">Respect the intellectual property of others</li>\r\n          <li class=\"list-item\">Photos are <strong>clear and original</strong></li>\r\n          <li class=\"list-item\">Zero tolerance for nudity, violence or hate</li>\r\n          <li class=\"list-item\">Read the provider terms</li>\r\n        <!--</div>-->\r\n      </ngx-dropzone-label>\r\n      <ngx-dropzone-preview class=\"preview\"\r\n                            *ngFor=\"let f of files\"\r\n                            [removable]=\"true\"\r\n                            (removed)=\"onRemove(f)\"\r\n                            [file]=\"f\">\r\n        <ngx-dropzone-label style=\"color: black\" class=\"label-header\">{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n      </ngx-dropzone-preview>\r\n    </ngx-dropzone>\r\n    <div class=\"link_ref_label\">\r\n      <mat-icon>public</mat-icon>\r\n      URL link reference :\r\n    </div>\r\n    <mat-form-field id=\"url_input\" appearance=\"fill\" class=\"example-full-width\">\r\n      <mat-label>URL to image</mat-label>\r\n      <input matInput (ngModelChange)=\"urlReferenceValidator()\"\r\n             [formControl]=\"imageUrlReference\"\r\n             placeholder=\"http:\\\\www.xxx.com\">\r\n      <mat-error>Invalid url</mat-error>\r\n    </mat-form-field>\r\n  </mat-step>\r\n  <!--<mat-step>\r\n      <ng-template  matStepLabel>Edit image for your gallery view</ng-template>\r\n      <div>\r\n        <button (click)=\"cropImageForGallery()\"\r\n                mat-button [disabled]=\"!(this.$imageData | async)\"\r\n                matTooltip=\"Select the part of your image which will be displayed as an thumbnail.\"\r\n                matTooltipPosition=\"below\"\r\n                mat-raised-button>Edit</button>\r\n&lt;!&ndash;        <button mat-button matStepperNext>Next</button>&ndash;&gt;\r\n      </div>\r\n    <div class=\"cropped-image\">\r\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\r\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\r\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\r\n             matTooltipPosition=\"below\"\r\n             [src]=\"this.$galleryFile | async\" />\r\n      </div>\r\n    </div>\r\n  </mat-step>-->\r\n  <mat-step>\r\n    <ng-template  matStepLabel>Edit image for the download view</ng-template>\r\n    <div>\r\n      <button (click)=\"cropImageForDownloadView()\"\r\n              mat-button [disabled]=\"!(this.$imageData | async)\"\r\n              matTooltip=\"Select the part of your image which will be displayed in the download view.\"\r\n              matTooltipPosition=\"below\"\r\n              mat-raised-button>Edit</button>\r\n      <!--        <button mat-button matStepperNext>Next</button>-->\r\n    </div>\r\n    <div class=\"cropped-image\">\r\n      <div *ngIf=\"!displayCroppedImage\" style=\"width: 500px; height: 460px\"></div>\r\n      <div *ngIf=\"displayCroppedImage\" class=\"cropped\">\r\n        <img matTooltip=\"This is how your image will look like as a thumbnail.\"\r\n             matTooltipPosition=\"below\" height=\"390\"\r\n             [src]=\"this.$croppedDownloadViewImage | async\" />\r\n      </div>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step >\r\n      <ng-template matStepLabel>Upload file</ng-template>\r\n      <button mat-raised-button *ngIf=\"isValidToUpload && !(this.spinner | async)\"\r\n              (click)=\"upload()\"  mat-flat-button>Upload</button>\r\n      <mat-spinner *ngIf=\"this.spinner | async\" ></mat-spinner>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n<mat-divider></mat-divider>\r\n<div class=\"action\" style=\"margin-top: 100px\">\r\n  <button id=\"close_btn\" *ngIf=\"!(this.spinner | async)\" mat-raised-button (click)=\"close()\" style=\"margin-right: 5px\"  mat-flat-button>Cancel</button>\r\n\r\n</div>\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {CropDownloadViewImage, CropGalleryViewImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {PassDataToCropperDialogState} from \"../../shared/app-state/states/pass-data-to-cropper-dialog.state\";\r\nimport {DialogCropperData} from \"../../shared/app-state/actions/pass-data-to-dialog.action\";\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-image-cropper',\r\n  templateUrl: './image-cropper.component.html',\r\n  styleUrls: ['./image-cropper.component.scss']\r\n})\r\nexport class ImageCropperComponent implements OnInit {\r\n  public width: number;\r\n  public height: number;\r\n  public cropForView: string;\r\n  imageChangedEvent: any;\r\n  croppedImage: any;\r\n  showCropper: boolean = false;\r\n  transF: any;\r\n  cropped2: any;\r\n  isMobile: boolean;\r\n  isPortraitFormat: boolean;\r\n  device: Device;\r\n\r\n  data: DialogCropperData;\r\n\r\n  cropperObj: CropperObject = {};\r\n\r\n  resizedRatio: number;\r\n\r\n  @Select(CropImageState.getData) $imageData;\r\n\r\n  @ViewChild('cropperComponent') cropperRef: ElementRef;\r\n\r\n  cropper = {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0\r\n  };\r\n\r\n  resizedFactor = 0;\r\n  invertResizeFactor = 0;\r\n  canvasRotation: any;\r\n\r\n  disable = false;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public $event: any,\r\n              private dialogRef: MatDialogRef<ImageCropperComponent>,\r\n              private store: Store,\r\n              public deviceObserverService: DeviceObserverService,\r\n              private media: MediaObserver) {\r\n    this.data = this.store.selectSnapshot(PassDataToCropperDialogState.getComponentData);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const passedData = this.store.selectSnapshot(PassDataToCropperDialogState.getComponentData);\r\n    this.cropperObj.base64 = passedData.imgData;\r\n\r\n    this.croppedImage = this.$event.img;\r\n    this.width = this.$event.width;\r\n\r\n    this.cropperObj.originalWidth = this.$event.imgDimensions.width;\r\n\r\n    this.cropperObj.originalHeight = this.$event.imgDimensions.height;\r\n    this.cropperObj.resizeWidth = this.$event.width;\r\n    this.cropperObj.resizeHeight = this.$event.height;\r\n    this.cropperObj.isPortraitFormat = this.cropperObj.originalWidth < this.cropperObj.originalHeight;\r\n    /*this.cropperObj.staticWidth = this.$event.width;*/\r\n\r\n    this.deviceObserverService.getActiveDevice()\r\n      .subscribe(value => {\r\n        if (value === Device.MOBILE) {\r\n          this.device = Device.MOBILE;\r\n        } else if (value === Device.TABLET) {\r\n          this.device = Device.TABLET;\r\n\r\n        } else {\r\n          this.device = Device.DESKTOP;\r\n        }\r\n        this.cropperObj.staticWidth = this.getStaticCropperWidthByViewAndDevice();\r\n        this.cropperObj.staticHeight = this.getStaticCropperWidthByViewAndDevice() / this.getRatioByView();\r\n        this.isMobile = ((value === 'xs') && this.$event.imgDimensions.width > this.$event.imgDimensions.height);\r\n      });\r\n\r\n    console.log(this.$event.imgDimensions);\r\n    console.log(this.width);\r\n    this.height = this.$event.height;\r\n    /*this.cropperObj.staticHeight = this.$event.height;*/\r\n    console.log(this.height);\r\n    this.cropForView = this.$event.viewName;\r\n  }\r\n\r\n  imageCropped($event: ImageCroppedEvent) {\r\n    if (this.cropForView === 'Gallery') {\r\n      this.store.dispatch(new CropGalleryViewImage($event.base64));\r\n    } else\r\n      this.store.dispatch(new CropDownloadViewImage($event.base64));\r\n  }\r\n\r\n\r\n  imageLoaded() {\r\n    console.log(\"imageLoaded()\");\r\n  }\r\n\r\n\r\n  public close(): void {\r\n    this.dialogRef.close(this.cropped2);\r\n  }\r\n\r\n\r\n  getDimensionFromCropper($event: Dimensions) {\r\n    console.log($event.height);\r\n    console.log($event.width);\r\n    this.cropperObj.imgViewHeight = $event.height;\r\n    this.cropperObj.imgViewWidth = $event.width;\r\n\r\n    this.cropperObj.staticWidth = this.getStaticCropperWidthByViewAndDevice();\r\n    this.cropperObj.staticHeight = this.getStaticCropperWidthByViewAndDevice() / this.getRatioByView();\r\n    this.resizedFactor = this.$event.imgDimensions.width / $event.width;\r\n    this.cropperObj.resizeFactor = this.$event.imgDimensions.width / $event.width;\r\n    this.cropperObj.inverseResizeFactor = $event.width / this.$event.imgDimensions.width;\r\n\r\n    this.cropperObj.resizeWidth = this.getDesktopWidthByView();\r\n    this.cropperObj.resizeHeight = this.getDesktopHeightByView();\r\n\r\n  }\r\n\r\n  private getDesktopHeightByView() {\r\n    return this.isGalleryView() ? environment.desktopGalleryHeight :\r\n      this.isDownloadView() ? environment.desktopDownloadHeight : -1;\r\n  }\r\n\r\n  private getDesktopWidthByView() {\r\n    return this.isGalleryView() ? environment.desktopGalleryWidth :\r\n      this.isDownloadView() ? environment.desktopDownloadWidth : -1;\r\n  }\r\n\r\n  private getRatioByView() {\r\n    return this.isGalleryView() ? environment.galleryAspectRatio :\r\n      this.isDownloadView() ? environment.downloadAspectRatio : -1;\r\n  }\r\n\r\n  private isGalleryView() {\r\n    return this.data.viewName === 'Gallery';\r\n  }\r\n\r\n  private getStaticCropperWidthByViewAndDevice() {\r\n    return (this.device === Device.TABLET ? this.getTabletWidthByView() :\r\n      this.device === Device.MOBILE ? this.getMobileWidthByView() :\r\n        this.device === Device.DESKTOP ? this.getDesktopWidthByView() : -1);\r\n  }\r\n\r\n  private getMobileWidthByView() {\r\n    return this.isGalleryView() ? environment.mobileGalleryWidth :\r\n      this.isDownloadView() ? environment.mobileDownloadWidth : -1;\r\n  }\r\n\r\n  private getTabletWidthByView() {\r\n    return this.isGalleryView() ? environment.tabletGalleryWidth :\r\n      this.isDownloadView() ? environment.tabletDownloadWidth : -1;\r\n  }\r\n\r\n  private getStaticWidthByViewAndDeviceRotated() {\r\n    return (this.device === Device.TABLET ? this.getTabletWidthByView() :\r\n      this.device === Device.MOBILE ? this.getMobileWidthByView() :\r\n        this.device === Device.DESKTOP ? this.getDesktopWidthByView() : -1) / this.getRatioByView();\r\n  }\r\n\r\n  private isDownloadView() {\r\n    return this.data.viewName === 'Download';\r\n  }\r\n\r\n  test($event: Event) {\r\n    console.log($event)\r\n  }\r\n}\r\n\r\nexport interface CropperObject {\r\n  base64?: any;\r\n  resizeWidth?: number;\r\n  resizeHeight?: number;\r\n  staticWidth?: number;\r\n  staticHeight?: number;\r\n  imgViewWidth?: number;\r\n  imgViewHeight?: number;\r\n  isPortraitFormat?: boolean;\r\n  resizeFactor?: number;\r\n  inverseResizeFactor?: number;\r\n  originalWidth?: number;\r\n  originalHeight?: number;\r\n  rotate?: boolean;\r\n}\r\n\r\n\r\n","<div style=\" margin-bottom: 10px;display: flex; flex-direction: row; align-content: center; align-items: center\">\r\n  <span>Select the part of the image which should be displayed as an thumbnail</span>\r\n  <button style=\"margin-left: 10px\" color=\"primary\" mat-raised-button (click)=\"close()\">Crop image</button>\r\n  {{width + ' - ' + height}}\r\n</div>\r\n<div style=\"\" class=\"cropper\" *ngIf=\"cropperObj\">\r\n  <image-cropper *ngIf=\"disable == false\"\r\n                 [canvasRotation]=\"cropperObj.rotate ? 1 : 0\"\r\n                 [imageBase64]=\"croppedImage\"\r\n                 [maintainAspectRatio]=\"true\"\r\n                 [resizeToWidth]=\"cropperObj.resizeWidth\"\r\n                 [resizeToHeight]=\"cropperObj.resizeHeight\"\r\n                 (cropperReady)=\"getDimensionFromCropper($event)\"\r\n                 (imageLoaded)=\"imageLoaded()\"\r\n                 [cropper]=\"cropper\"\r\n                 [cropperStaticWidth]=\"cropperObj.staticWidth\"\r\n                 [cropperStaticHeight]=\"cropperObj.staticHeight\"\r\n                 (imageCropped)=\"imageCropped($event)\"\r\n                  [cropperMinWidth]=\"150\" [cropperMinHeight]=\"138\">\r\n  </image-cropper>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-password-reset-token-wrapper',\r\n  templateUrl: './password-reset-token-wrapper.component.html',\r\n  styleUrls: ['./password-reset-token-wrapper.component.scss']\r\n})\r\nexport class PasswordResetTokenWrapperComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"HUUUUUUUUUUUUUUUU\");\r\n    this.route.paramMap.subscribe(value => console.log(value))\r\n  }\r\n\r\n}\r\n","<p>password-reset-token-wrapper works!</p>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-image-dialog',\n  templateUrl: './upload-image-dialog.component.html',\n  styleUrls: ['./upload-image-dialog.component.scss']\n})\nexport class UploadImageDialogComponent implements OnInit {\n  secondFormGroup: any;\n  firstFormGroup: any;\n  isLinear: Boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button (click)=\"isLinear = !isLinear\" id=\"toggle-linear\">\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\n</button>\n<mat-vertical-stepper [linear]=\"isLinear\" #stepper>\n  <mat-step [completed]=\"isLinear\" [stepControl]=\"firstFormGroup\">\n    <form [formGroup]=\"firstFormGroup\">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"secondFormGroup\">\n    <form [formGroup]=\"secondFormGroup\">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\n               required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>\n\n<p>FOOO</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bootstrap-playground',\n  templateUrl: './bootstrap-playground.component.html',\n  styleUrls: ['./bootstrap-playground.component.scss']\n})\nexport class BootstrapPlaygroundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <div class=\"brand\">\n    <a id=\"android\">\n      <mat-icon style=\"margin-top: 5px\">android</mat-icon>\n    </a>\n    <a id=\"donut\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"text-align: center; margin-top: 5px\">donut_small</mat-icon>\n    </a>\n    <a id=\"widget\" style=\"margin-left: 10px;\">\n      <mat-icon style=\"margin-top: 5px\">widgets</mat-icon>\n    </a>\n    <span id=\"api_name\"><strong>Welcome to SpecShots</strong></span>\n  </div>\n\n</header>\n\n\n<div class=\"form-ang\">\n  <input class=\"search\" type=\"text\" matInput>\n</div>\n\n\n<div class=\"profile_info\">\n  <mat-icon style=\"color: white\">\n    android\n  </mat-icon>\n</div>\n\n<!--Navbar-->\n<!--\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark indigo\">\n\n  &lt;!&ndash; Navbar brand &ndash;&gt;\n  <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">Navbar</a></mdb-navbar-brand>\n\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n  <links>\n\n    &lt;!&ndash; Links &ndash;&gt;\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect>Pricing</a>\n      </li>\n\n      &lt;!&ndash; Dropdown &ndash;&gt;\n      <li class=\"nav-item dropdown\" dropdown>\n        <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n          Basic dropdown<span class=\"caret\"></span></a>\n        <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Another action</a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Something else here</a>\n          <div class=\"divider dropdown-divider\"></div>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Separated link</a>\n        </div>\n      </li>\n\n    </ul>\n    &lt;!&ndash; Links &ndash;&gt;\n\n    &lt;!&ndash; Search form &ndash;&gt;\n    <form class=\"form-inline waves-light\" mdbWavesEffect>\n      <div class=\"md-form my-0\">\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n      </div>\n    </form>\n  </links>\n  &lt;!&ndash; Collapsible content &ndash;&gt;\n\n</mdb-navbar>\n&lt;!&ndash;/.Navbar&ndash;&gt;\n-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cropper-details-bar',\n  templateUrl: './cropper-details-bar.component.html',\n  styleUrls: ['./cropper-details-bar.component.scss']\n})\nexport class CropperDetailsBarComponent implements OnInit {\n  showFiller: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\r\n  Component,\r\n  ElementRef, EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {MatFormFieldControl} from \"@angular/material/form-field\";\r\nimport {ControlValueAccessor, FormBuilder, FormControl, FormGroup, NgControl} from \"@angular/forms\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {FocusMonitor} from \"@angular/cdk/a11y\";\r\nimport {MatInput} from \"@angular/material/input\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {SearchViewModel} from \"../search-toolbar/search-view.model\";\r\nimport {debounceTime, tap} from \"rxjs/operators\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\n\r\nexport interface SearchBarContent {\r\n  queryString: string;\r\n  scope: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-search-bar-content',\r\n  templateUrl: './custom-search-bar-content.component.html',\r\n  styleUrls: ['./custom-search-bar-content.component.scss'],\r\n  providers: [{\r\n    provide: MatFormFieldControl,\r\n    useExisting: CustomSearchBarContentComponent\r\n  }]\r\n})\r\nexport class CustomSearchBarContentComponent implements OnInit, OnDestroy,\r\n  MatFormFieldControl<SearchBarContent>, ControlValueAccessor {\r\n\r\n  @Select(SearchByTagState.getFetchedTagListAsOption) $tagOptions: Observable<SearchViewModel[]>;\r\n\r\n  @Select(SearchByUsersState.getFetchedUsers) $users: Observable<BaseUserDetails[]>;\r\n\r\n  @Output() enterPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() clickPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() valueChanged: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  searchTerm$ = new Subject<string>();\r\n\r\n  /*this.searchTerm$\r\n    .pipe(debounceTime(1000))\r\n    .subscribe(value => {\r\n      switch (this.searchOption) {\r\n        case 'Tags':\r\n          this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n          break;\r\n        case 'Users':\r\n          this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n          break;\r\n      }\r\n    });*/\r\n\r\n\r\n\r\n  @ViewChild(MatInput, {read: ElementRef, static: true})\r\n  input: ElementRef;\r\n\r\n\r\n\r\n\r\n  static nextId = 0;\r\n\r\n  autofilled: boolean;\r\n  controlType: string;\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  errorState: boolean;\r\n  focused = true;\r\n  @HostBinding() id = `custom-form-field-id-${CustomSearchBarContentComponent.nextId++}`;\r\n  /*ngControl: NgControl | null;*/\r\n\r\n\r\n\r\n  @Input()\r\n  required: boolean;\r\n\r\n  onChange: (value: SearchBarContent) => void;\r\n  onTouch: () => void;\r\n\r\n  private _placeholder: string;\r\n\r\n  stateChanges = new Subject<void>();\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private focusMonitor: FocusMonitor,\r\n              @Optional() @Self() public ngControl: NgControl,\r\n              private formBuilder: FormBuilder,\r\n              private store: Store) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      scope: new FormControl(''),\r\n      queryString: new FormControl('')\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.focusMonitor\r\n      .monitor(this.input)\r\n      .subscribe(focused => {\r\n        this.focused = !!focused;\r\n        this.stateChanges.next();\r\n      });\r\n\r\n    this.clickPressed.subscribe(val => console.log(val))\r\n\r\n\r\n    this.form.valueChanges.subscribe(value1 => this.valueChanged.emit(value1));\r\n\r\n\r\n\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        switch (this.form.value.scope) {\r\n          case 'Tags':\r\n            this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n            break;\r\n          case 'Users':\r\n            this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  @Output()\r\n  get val(): SearchBarContent {\r\n    return this.form.value;\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent): void {\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]): void {\r\n  }\r\n\r\n  get empty(): boolean {\r\n    return !this.value.queryString && !this.value.scope;\r\n  }\r\n\r\n  @Input()\r\n  public set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  public get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n\r\n  @HostBinding('class.floated')\r\n  get shouldLabelFloat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  @Input()\r\n  set value(value: SearchBarContent) {\r\n    this.form.patchValue(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.input);\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  writeValue(value: SearchBarContent): void {\r\n    this.value = value;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.form.disable();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n\r\n  search(value: string) {\r\n\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"form\">\r\n  <mat-select #select class=\"select\" formControlName=\"scope\">\r\n    <mat-option value=\"Tags\">Tags</mat-option>\r\n    <mat-option value=\"Users\">Users</mat-option>\r\n  </mat-select>\r\n\r\n  <mat-divider class=\"divider\" [vertical]=\"true\"></mat-divider>\r\n  <input [placeholder]=\"placeholder\"\r\n         (keyup.enter)=\"enterPressed.emit(value)\"\r\n         (keyup)=\"searchTerm$.next($event.target.value)\"\r\n         [matAutocomplete]=\"auto\"\r\n         #element\r\n         matInput\r\n         type=\"text\"\r\n         name=\"entity-search-bar\"\r\n         class=\"search-bar\"\r\n         formControlName=\"queryString\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <div class=\"user-search\" *ngIf=\"value.scope === 'Users'\">\r\n      <mat-option #matOption (click)=\"clickPressed.emit({queryString: option.username, scope: 'Users'})\"\r\n                  *ngFor=\"let option of $users | async\"\r\n                  [value]=\"option.username\">\r\n        {{option.username}}\r\n      </mat-option>\r\n    </div>\r\n    <div class=\"tag-search\" *ngIf=\"value.scope === 'Tags'\">\r\n      <mat-option #matOption (click)=\"clickPressed.emit({queryString: option.value, scope: 'Tags'})\"\r\n                  *ngFor=\"let option of $tagOptions | async\"\r\n                  [value]=\"option.value\">\r\n        {{option.value}}\r\n      </mat-option>\r\n    </div>\r\n  </mat-autocomplete>\r\n\r\n\r\n\r\n</ng-container>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {SearchViewModel} from \"../search-toolbar/search-view.model\";\r\nimport {debounceTime} from \"rxjs/operators\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {SearchBarContent} from \"../custom-search-bar-content/custom-search-bar-content.component\";\r\n\r\n\r\nexport interface PressedSearchContent {\r\n  content: SearchBarContent;\r\n  clicked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-custom-search-bar',\r\n  templateUrl: './custom-search-bar.component.html',\r\n  styleUrls: ['./custom-search-bar.component.scss']\r\n})\r\nexport class CustomSearchBarComponent implements OnInit {\r\n  content = new FormControl({ scope: 'Tags', queryString: '' });\r\n\r\n  isOpen = false;\r\n\r\n  contentTemp: SearchBarContent;\r\n\r\n  @Input() disableIcon = false;\r\n\r\n  clickedFilterDetails = false;\r\n  @Output() openCloseSearchOptions: EventEmitter<PressedSearchContent> = new EventEmitter<PressedSearchContent>();\r\n\r\n  @Output() enterPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() clickPressed: EventEmitter<SearchBarContent> = new EventEmitter<SearchBarContent>();\r\n\r\n  @Output() changedValue: EventEmitter<PressedSearchContent> = new EventEmitter<PressedSearchContent>();\r\n\r\n  constructor(private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentTemp = this.content.value;\r\n  }\r\n\r\n  search(value: string) {\r\n\r\n  }\r\n\r\n  emitOpenOptions() {\r\n    this.isOpen = !this.isOpen;\r\n    this.clickedFilterDetails = !this.clickedFilterDetails;\r\n    this.openCloseSearchOptions.emit({content: this.contentTemp, clicked: this.clickedFilterDetails});\r\n  }\r\n\r\n  foo($event: any) {\r\n    this.contentTemp = $event;\r\n    if (this.contentTemp.scope === 'Users') this.clickedFilterDetails = false;\r\n    this.changedValue.emit({content: this.contentTemp, clicked: this.clickedFilterDetails});\r\n  }\r\n}\r\n","<mat-form-field class=\"search-form-field\" appearance=\"outline\">\r\n  <mat-label>Search</mat-label>\r\n  <a *ngIf=\"!disableIcon\"\r\n     mat-icon-button\r\n     matSuffix\r\n     (click)=\"emitOpenOptions()\">\r\n    <mat-icon class=\"search-options-icon\" style=\"color: black\" >menu</mat-icon>\r\n  </a>\r\n  <app-custom-search-bar-content #component (valueChanged)=\"foo($event)\"\r\n                                 (enterPressed)=\"enterPressed.emit($event)\"\r\n                                 (clickPressed)=\"clickPressed.emit($event)\"\r\n                                 [required]=\"false\"\r\n                                 [formControl]=\"content\"\r\n                                 placeholder=\"Search your desired entity\"></app-custom-search-bar-content>\r\n\r\n</mat-form-field>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {Select} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Component({\n  selector: 'app-download-cropped-image-dialog',\n  templateUrl: './download-cropped-image-dialog.component.html',\n  styleUrls: ['./download-cropped-image-dialog.component.scss']\n})\nexport class DownloadCroppedImageDialogComponent implements OnInit {\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValueState;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"display: flex;\n flex-direction: column;\njustify-content: center;\n align-items: center;\n  justify-items: center;\n   align-content: center; gap: 15px\"\n     *ngIf=\"$croppedValueState | async as croppedValues\" class=\"cropped-values\">\n  <div style=\"display: flex; flex-direction: column;\n   justify-content: center; align-items: center; gap: 10px\"\n    *ngFor=\"let res of croppedValues.possibleResolutions\">\n    <button style=\"width: 150px; height: 80px\" mat-raised-button>\n      <mat-icon>download</mat-icon>\n      {{res}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {Dimensions, ImageCroppedEvent} from \"ngx-image-cropper\";\r\nimport {Subject} from \"rxjs\";\r\nimport {GetBase64ForDownloadCropperState} from \"../../shared/app-state/states/get-base64-for-downloadCropper.state\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {CropAndDownload, GetImageAsByse64, SetCroppedOffsetValues} from \"../../shared/app-state/actions/image.action\";\r\nimport {MatSlideToggleChange} from \"@angular/material/slide-toggle\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {state} from \"@angular/animations\";\r\nimport {DownloadCroppedImageDialogComponent} from \"../download-cropped-image-dialog/download-cropped-image-dialog.component\";\r\nimport {PrepareCroppedForDownloadState} from \"../../shared/app-state/states/prepare-cropped-for-download.state\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {resolveProvidersRequiringFactory} from \"@angular/compiler-cli/src/ngtsc/annotations/src/util\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\n\r\n@Component({\r\n  selector: 'app-download-cropper',\r\n  templateUrl: './download-cropper.component.html',\r\n  styleUrls: ['./download-cropper.component.scss']\r\n})\r\nexport class DownloadCropperComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  public widthInputField: FormControl;\r\n  public heightInputField: FormControl;\r\n  public origWidthInputField: FormControl;\r\n  public wTest: number;\r\n  public hTest: number;\r\n  private wasCropped: boolean;\r\n  public croppedImage: any;\r\n  public width: number;\r\n  public height: number;\r\n  public diffRatio: number;\r\n  public finishedLoadingImage: boolean = false;\r\n  public isDownLoadingImage: boolean = null;\r\n  public showSpinner = true;\r\n\r\n  maintainAspectRatio: boolean = true;\r\n  $aspectRatioSubj: Subject<number>;\r\n  downloadError = false;\r\n\r\n  maintainTest = true;\r\n\r\n  showAspectRatio: number;\r\n\r\n  aspectRatio: number;\r\n\r\n  public widthChanged: number;\r\n  public croppedWidth: boolean = false;\r\n  public croppedHeight: boolean = false;\r\n  @Select(PrepareCroppedForDownloadState.getCroppedValues) $croppedValues;\r\n  @Select(GetBase64ForDownloadCropperState.getBase64) $base64;\r\n  @Select(GetImageByIdState.getRatioAsString) $ratio;\r\n  @Select(GetImageByIdState.getFileDetails) $details;\r\n\r\n  @Select(GetImageByIdState.getImageDetail) $detail;\r\n  public loaded: number = 0;\r\n  cropper = {\r\n    x1: 0,\r\n    y1: 0,\r\n    x2: 0,\r\n    y2: 0\r\n  };\r\n\r\n  isMobile: boolean = false;\r\n\r\n  originalRatio: number;\r\n  enableUserInput: any;\r\n  showFiller: boolean = false;\r\n\r\n  constructor(private store: Store,\r\n              private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog,\r\n              private service: ImageRequestService,\r\n              private downloadService: ImageDownloadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.deviceObserverService\r\n      .getActiveDevice()\r\n      .subscribe(device => this.isMobile = device === 'xs');\r\n\r\n    this.originalRatio = 0;\r\n\r\n    this.$aspectRatioSubj = new Subject<number>();\r\n    this.$aspectRatioSubj.subscribe(value => {\r\n      this.maintainAspectRatio = value !== 0;\r\n    })\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.extractImageIdFromRequest(imageFileDetails);\r\n    this.originalRatio = imageFileDetails.width / imageFileDetails.height;\r\n\r\n    /*this.subscribeToWidthInput(imageFileDetails);\r\n    this.subscribeToHeightInput(imageFileDetails);*/\r\n  }\r\n\r\n\r\n  private extractImageIdFromRequest(imageFileDetails: ImageFileDetails) {\r\n    this.route\r\n      .paramMap\r\n      .subscribe(param => {\r\n        const imageId = param.get(\"imageId\");\r\n        this.store.dispatch(new GetImageAsByse64(imageId));\r\n        this.initFormFields(imageFileDetails);\r\n      })\r\n  }\r\n\r\n  private initFormFields(imageFileDetails: ImageFileDetails) {\r\n    this.widthInputField = new FormControl(imageFileDetails.width);\r\n    this.heightInputField = new FormControl(imageFileDetails.height);\r\n    this.formGroup = this.fb.group({\r\n      width: this.widthInputField,\r\n      height: this.heightInputField,\r\n    })\r\n  }\r\n\r\n\r\n  public imageCropped($event: ImageCroppedEvent): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    console.log(\"Starting Cropper method.....................................................\");\r\n    const ratio = imageFileDetails.width / imageFileDetails.height;\r\n    const width = $event.cropperPosition.x2 - $event.cropperPosition.x1;\r\n    if (!this.croppedWidth || !this.croppedHeight) {\r\n      console.log(\"Cropper width : \" + width);\r\n      this.wasCropped = true;\r\n      const widthWithFactor = width * this.diffRatio;\r\n      console.log(width * this.diffRatio);\r\n      this.widthInputField.setValue(widthWithFactor.toFixed(0));\r\n      const height = $event.cropperPosition.y2 - $event.cropperPosition.y1;\r\n      console.log(\"Cropper height : \" + height);\r\n      console.log(height * this.diffRatio);\r\n      console.log(Math.floor((this.cropper.y1 * this.diffRatio)) + Math.floor((height * this.diffRatio)));\r\n      const heightWithFactor = Math.floor(height) * this.diffRatio;\r\n      this.heightInputField.setValue(heightWithFactor.toFixed(0));\r\n      this.wasCropped = false;\r\n    }\r\n\r\n    // this.croppedWidth.next($event.cropperPosition.x2 - $event.cropperPosition.x1);\r\n    // this.croppedHeight.next($event.cropperPosition.y2 - $event.cropperPosition.y1)\r\n    this.loaded++;\r\n    console.log(\"Method cropper finished............................................\");\r\n  }\r\n\r\n  close() {\r\n\r\n  }\r\n\r\n  setAspectRatio(aspectRatio: number) {\r\n    console.log(this.maintainAspectRatio);\r\n    console.log(this.showAspectRatio);\r\n    this.maintainTest = aspectRatio !== 0;\r\n    this.showAspectRatio = aspectRatio;\r\n    console.log(this.maintainAspectRatio);\r\n    console.log(this.showAspectRatio);\r\n  }\r\n\r\n  public imageLoaded(): void {\r\n    setTimeout(() => {\r\n      const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n      const width = imageFileDetails.width;\r\n      /*this.cropper = {\r\n        x1: 0,\r\n        y1: 0,\r\n        x2: width,\r\n        y2: imageFileDetails.height\r\n      };*/\r\n      this.showSpinner = false;\r\n    });\r\n  }\r\n\r\n  changeStuff($event: MatSlideToggleChange) {\r\n\r\n  }\r\n\r\n  changedWidthFunc(value: string) {\r\n    console.log(value);\r\n  }\r\n\r\n  public cropAndDownload(width: string, height: string): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    const offsetY1 = this.cropper.y1 * this.diffRatio;\r\n    const offsetX1 = this.cropper.x1 * this.diffRatio;\r\n    const heightFactored = (this.cropper.y2 - this.cropper.y1) * this.diffRatio;\r\n    const widthFactored = (this.cropper.x2 - this.cropper.x1) * this.diffRatio;\r\n    const subImageWidth = offsetX1 + widthFactored > imageFileDetails.width ? imageFileDetails.width - offsetX1 : widthFactored;\r\n    const subImageHeight = offsetY1 + heightFactored > imageFileDetails.height ? imageFileDetails.height - offsetY1 : heightFactored;\r\n    this.store.dispatch(\r\n      new SetCroppedOffsetValues(\r\n        this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\r\n        this.cropper.x1 * this.diffRatio,\r\n        this.cropper.y1 * this.diffRatio,\r\n        subImageWidth,\r\n        subImageHeight\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  download(detail: string): void {\r\n    this.showSpinner = true;\r\n    this.downloadError = false;\r\n    let croppedDownloadRequest = this.store.selectSnapshot(PrepareCroppedForDownloadState.getCroppedValues);\r\n    croppedDownloadRequest.imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    croppedDownloadRequest.selectedWidth = Number.parseFloat(detail.split(' x ')[0]);\r\n    croppedDownloadRequest.selectedHeight = Number.parseFloat(detail.split(' x ')[1])\r\n    console.log(croppedDownloadRequest.selectedWidth);\r\n    this.downloadService\r\n      .downloadIndividualImage(croppedDownloadRequest, true)\r\n      .subscribe(res => {\r\n        this.showSpinner = false;\r\n        this.downloadError = false;\r\n      }, error => {\r\n        this.downloadError = true;\r\n        this.showSpinner = false;\r\n      });\r\n  }\r\n\r\n  foo($event: Dimensions) {\r\n    console.log($event);\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.diffRatio = imageFileDetails.width / $event.width;\r\n    this.$aspectRatioSubj.next(imageFileDetails.width / imageFileDetails.height);\r\n    this.aspectRatio = imageFileDetails.width / imageFileDetails.height;\r\n    this.showAspectRatio = imageFileDetails.width / imageFileDetails.height;\r\n    this.maintainAspectRatio = true;\r\n    this.diffRatio.toFixed(2);\r\n    /*this.maintainAspectRatio = false;\r\n    this.$aspectRatioSubj.next(0);*/\r\n  }\r\n\r\n  getAspectRatio(width: number, height: number): string {\r\n    const start = width < height ? width : height;\r\n    console.log(start);\r\n    let ratio = width + '/' + height;\r\n    for ( let i = start; i >= 1; i-- ) {\r\n      if (width % i === 0 && height % i === 0) {\r\n        console.log('Hallo??');\r\n        console.log(i);\r\n        return width / i + '/' + height / i;\r\n      }\r\n    }\r\n    return ratio;\r\n}\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n\r\n<mat-drawer-container class=\"example-container\" [hasBackdrop]=\"isMobile\">\r\n  <mat-drawer class=\"example-sidenav\"\r\n              mode=\"over\" #drawer [opened]=\"!isMobile\"\r\n              [disableClose]=\"isMobile\">\r\n    <div class=\"example-sidenav-content\">\r\n      <div class=\"details\">\r\n\r\n        <button class=\"close\" *ngIf=\"isMobile\" (click)=\"drawer.toggle()\" mat-icon-button>\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <span *ngIf=\"!isMobile\" class=\"title\"><strong>Crop your image with SpecShots</strong></span>\r\n        <mat-divider *ngIf=\"!isMobile\" class=\"title-divider\"></mat-divider>\r\n        <div class=\"icon\" *ngIf=\"!isMobile\">\r\n          <img width=\"40px\" height=\"40px\" src=\"assets/Specshots-Logo.png\">\r\n        </div>\r\n\r\n\r\n        <mat-form-field  class=\"width\" disabled=\"true\" style=\"color: white\"\r\n                        appearance=\"fill\">\r\n          <mat-label>Width</mat-label>\r\n          <input class=\"white-color\" readonly type=\"number\" (change)=\"changedWidthFunc(input.value)\"\r\n                 [formControl]=\"widthInputField\" matInput #input>\r\n          <!--<mat-hint>{{widthInputField.value * diffRatio}}</mat-hint>-->\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field class=\"height\" disabled=\"true\"\r\n                        appearance=\"fill\">\r\n          <mat-label>Height</mat-label>\r\n          <input readonly type=\"number\" [formControl]=\"heightInputField\" matInput #input2>\r\n          <!--<mat-hint>{{heightInputField.value * diffRatio}}</mat-hint>-->\r\n        </mat-form-field>\r\n\r\n\r\n        <div class=\"ratio\">\r\n          <mat-button-toggle-group  class=\"toggle-group\" #group=\"matButtonToggleGroup\">\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(4 / 3)\" value=\"4 / 3\" aria-label=\"Text align left\">\r\n              4 / 3\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(16 / 9)\" value=\"16 / 9\" aria-label=\"Text align center\">\r\n              16 / 9\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(3 / 2)\" value=\"3 / 2\" aria-label=\"Text align right\">\r\n              3 / 2\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"$aspectRatioSubj.next(originalRatio)\" checked value=\"original\"\r\n                               aria-label=\"Text align justify\">\r\n              Original\r\n            </mat-button-toggle>\r\n            <!--<mat-button-toggle  (click)=\"$aspectRatioSubj.next(0)\" value=\"free\" aria-label=\"Text align justify\">\r\n              Free\r\n            </mat-button-toggle>-->\r\n          </mat-button-toggle-group>\r\n        </div>\r\n\r\n\r\n        <button *ngIf=\"showSpinner === false\" class=\"download-btn\"\r\n                [matMenuTriggerFor]=\"menu\" (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-raised-button>\r\n          Download\r\n        </button>\r\n        <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n          <div *ngIf=\"$croppedValues | async as croppedDetails\">\r\n            <div class=\"hoverable\" *ngFor=\"let detail of croppedDetails.possibleResolutions\">\r\n              <button (click)=\"download(detail)\" style=\"width: 100%; border-radius: 50%\" mat-menu-item>\r\n                <mat-icon>download</mat-icon>\r\n                <span>{{detail}}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </mat-menu>\r\n        <span *ngIf=\"downloadError\">Error while downloading file.</span>\r\n        <div class=\"\" *ngIf=\"showSpinner\">\r\n          <div class=\"load-image loading\" style=\"\">\r\n            <mat-spinner class=\"foo\" diameter='30'></mat-spinner>\r\n            <span style=\"font-size: 16px; margin-top: 20px\">\r\n              <strong style=\"color: #A9A9A9\">\r\n                {{'Processing request. This can take a while..'}}\r\n              </strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-drawer>\r\n  <mat-drawer-content class=\"drawer-content\">\r\n\r\n\r\n    <!--<button *ngIf=\"finishedLoadingImage || isDownLoadingImage !== null\" [matMenuTriggerFor]=\"menu\" (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-icon-button >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n      <div *ngIf=\"$croppedValues | async as croppedDetails\">\r\n        <div class=\"hoverable\" *ngFor=\"let detail of croppedDetails.possibleResolutions\">\r\n          <button (click)=\"download(detail)\" style=\"width: 100%; border-radius: 50%\" mat-menu-item>\r\n            <mat-icon>download</mat-icon>\r\n            <span>{{detail}}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </mat-menu>-->\r\n\r\n    <div *ngIf=\"$base64 | async as img\" class=\"cropper\">\r\n      <div class=\"wrapper\" style=\"display: flex; flex-direction: column\">\r\n        <button *ngIf=\"isMobile\" (click)=\"drawer.toggle()\" mat-icon-button style=\"margin-bottom: 5px\">\r\n          <mat-icon>download</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"img-cropper\">\r\n        <image-cropper #event [imageBase64]=\"img\"\r\n                       [maintainAspectRatio]=\"maintainAspectRatio\"\r\n                       [cropper]=\"cropper\"\r\n                       (imageLoaded)=\"imageLoaded()\"\r\n                       (cropperReady)=\"foo($event)\"\r\n                       [alignImage]=\"'center'\"\r\n                       [aspectRatio]=\"$aspectRatioSubj | async\"\r\n                       (imageCropped)=\"imageCropped($event)\"\r\n                       class=\"cropper\">\r\n        </image-cropper>\r\n\r\n      </div>\r\n\r\n      <!--<div class=\"overlay\">\r\n        <button mat-icon-button>\r\n          <button *ngIf=\"finishedLoadingImage || isDownLoadingImage !== null\" [matMenuTriggerFor]=\"menu\"\r\n                  (onMenuOpen)=\"cropAndDownload(input.value, input2.value)\" mat-icon-button>\r\n            <mat-icon class=\"more-icon\">more_horiz</mat-icon>\r\n          </button>\r\n          <mat-menu style=\"width: 100%\" #menu=\"matMenu\">\r\n            <button mat-raised-button (click)=\"drawer.toggle()\">Show</button>\r\n          </mat-menu>\r\n        </button>\r\n      </div>-->\r\n\r\n    </div>\r\n\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl} from \"@angular/forms\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-expired-token-refresh-dialog',\r\n  templateUrl: './expired-token-refresh-dialog.component.html',\r\n  styleUrls: ['./expired-token-refresh-dialog.component.scss']\r\n})\r\nexport class ExpiredTokenRefreshDialogComponent implements OnInit {\r\n\r\n  formGroup: any;\r\n  public emailFormField = new FormControl('');\r\n  public passwordFormField = new FormControl('');\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: UserAuthenticationService,\r\n              private dialog: MatDialog) {\r\n    this.formGroup = this.formBuilder.group({\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get mail(): string {\r\n    return this.formGroup.get('email').value;\r\n  }\r\n\r\n  get pwd(): string {\r\n    return this.formGroup.get('password').value;\r\n  }\r\n\r\n  renewToken() {\r\n    this.authService\r\n      .renewToken({email: this.mail, password: this.pwd})\r\n      .subscribe(value => {\r\n        if (value.status === 200) {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            data: {text: 'Email was sent successfully!'}\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2 class=\"title\">The activation token is expired</h2>\r\n  <div class=\"email\">\r\n    <mat-form-field  class=\"email-field\" appearance=\"fill\">\r\n      <mat-label>\r\n        Email\r\n      </mat-label>\r\n      <input [formControl]=\"emailFormField\" matInput type=\"text\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"password\">\r\n    <mat-form-field class=\"password-field\" appearance=\"fill\">\r\n      <mat-label>\r\n        Password\r\n      </mat-label>\r\n      <input [formControl]=\"passwordFormField\" matInput class=\"password\" type=\"password\">\r\n    </mat-form-field>\r\n  </div>\r\n  <button (click)=\"renewToken()\" color=\"primary\" mat-raised-button class=\"refresh\">Renew token</button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ExpiredTokenRefreshDialogComponent} from \"../expired-token-refresh-dialog/expired-token-refresh-dialog.component\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-expired-token-refresh-wrapper',\r\n  templateUrl: './expired-token-refresh-wrapper.component.html',\r\n  styleUrls: ['./expired-token-refresh-wrapper.component.scss']\r\n})\r\nexport class ExpiredTokenRefreshWrapperComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(ExpiredTokenRefreshDialogComponent)\r\n  }\r\n\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SelectImageState} from \"../../shared/app-state/states/select-image.state\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {\r\n  CropAndDownload,\r\n  GetDownloadDetails, GetImageAsByse64,\r\n  GetImageByImageId,\r\n  GetRelatedImagesByTagIDs,\r\n  ImagesByTagsAction\r\n} from \"../../shared/app-state/actions/image.action\";\r\nimport {DownloadDetailsState} from \"../../shared/app-state/states/download-details.state\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {Subject} from \"rxjs\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {ImagesByTagNameQueryImpl} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {RelatedImagesState} from \"../../shared/app-state/states/related-images.state\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ImageCropperComponent} from \"../../private/image-cropper/image-cropper.component\";\r\nimport {CropImageState} from \"../../shared/app-state/states/crop-image.state\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {DownloadCropperComponent} from \"../download-cropper/download-cropper.component\";\r\nimport {SetResolutionDownloadDialogComponent} from \"../set-resolution-download-dialog/set-resolution-download-dialog.component\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {MatListItem} from \"@angular/material/list\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\n\r\n@Component({\r\n  selector: 'app-image-details',\r\n  templateUrl: './image-details.component.html',\r\n  styleUrls: ['./image-details.component.scss']\r\n})\r\nexport class ImageDetailsComponent implements OnInit {\r\n\r\n  @ViewChild('downloadItem') downloadItem: ElementRef;\r\n\r\n  clickedDownloadResolution: ImageFileDetails = {width: 0, height: 0, downloadLink: '', size: 0, contentType: ''};\r\n  toggle: boolean = false;\r\n\r\n  // @Select(DownloadDetailsState.getFile) $selectedImage;\r\n  @Select(RelatedImagesState.getRelatedImages) $relatedImages;\r\n  @Select(UserDetailsState.profileImgPath) $profileImg;\r\n  @Select(DownloadDetailsState.getDetails) $downloadDetails;\r\n  @Select(GetImageByIdState.getImageDetail) $selectedImage;\r\n  formattedDetails = new Subject<string[]>();\r\n  private imageId: string;\r\n\r\n\r\n  testImg: any\r\n\r\n\r\n  constructor(private store: Store,\r\n              private route: ActivatedRoute,\r\n              private downloadService: ImageDownloadService,\r\n              private dialog: MatDialog,\r\n              private service: ImageRequestService,\r\n              private router: Router,\r\n              private sanitizer: DomSanitizer) {\r\n    this.testImg = this.sanitizer.bypassSecurityTrustStyle(`url(${this.store.selectSnapshot(GetImageByIdState.getImageDetail).link})`);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route\r\n      .paramMap\r\n      .subscribe(param => {\r\n        const imageId = param.get('imageId');\r\n        this.imageId = imageId;\r\n        console.log(this.imageId);\r\n      });\r\n  }\r\n\r\n  download(detail: any) {\r\n    console.log(detail);\r\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    console.log(detail);\r\n    this.store\r\n      .dispatch(new GetDownloadDetails(imageId, detail))\r\n      .subscribe(value1 => {\r\n        console.log(value1.downloadDetails);\r\n        window.location.href = value1.downloadDetails.downloadLink;\r\n        this.store\r\n          .dispatch(new GetImageByImageId(this.imageId));\r\n      });\r\n    // window.location.href = detail.downloadLink;\r\n  }\r\n\r\n  clickedTag(tag: string) {\r\n    this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    );\r\n  }\r\n\r\n  appendFileSizeName(index: number): string {\r\n    switch (index) {\r\n      case 0:\r\n        return 'Original ';\r\n      case 1:\r\n        return 'XLarge ';\r\n      case 2:\r\n        return 'Large ';\r\n      case 3:\r\n        return 'Small ';\r\n    }\r\n  }\r\n\r\n  cropImageForDownload(imageDetail: any) {\r\n    console.log(imageDetail);\r\n    const imageId = this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId;\r\n    this.store.dispatch(new GetImageByImageId(imageId));\r\n    this.store.dispatch(new GetImageAsByse64(imageId));\r\n    this.router\r\n      .navigate(['crop-download', {imageId: imageId}]);\r\n    console.log(imageDetail);\r\n    // this.service\r\n    //   .getImageBytes(imageId)\r\n    //   .subscribe(byteArray => {\r\n    //     let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n    //     let reader = new FileReader();\r\n    //     reader.onload = (evt: any) => {\r\n    //       this.store\r\n    //         .dispatch(new CropAndDownload(evt.target.result))\r\n    //       this.router\r\n    //         .navigate(['crop-download', {imageId: imageId}])\r\n    //     };\r\n    //     // this.dialog.open(DownloadCropperComponent,{\r\n    //     //   data: { img: evt.target.result,\r\n    //     //     width: imageDetail.width,\r\n    //     //     height: imageDetail.height, viewName: 'Download' }\r\n    //     // })\r\n    //     reader.readAsDataURL(blob);\r\n    //   })\r\n  }\r\n\r\n  getIndividualResolutionDownloadDialog(imageDetail: any) {\r\n    console.log(imageDetail);\r\n    this.dialog.open(SetResolutionDownloadDialogComponent, {\r\n      width: '450px',\r\n      height: '460px',\r\n      panelClass: 'setIndividualResDialog'\r\n    });\r\n  }\r\n\r\n  OpenDownloadBox(detail: ImageFileDetails) {\r\n    this.clickedDownloadResolution = this.clickedDownloadResolution.width === detail.width ? this.clickedDownloadResolution : detail;\r\n    this.toggle = this.clickedDownloadResolution.width === detail.width;\r\n  }\r\n}\r\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n<div *ngIf=\"$selectedImage | async as data\" fxLayoutAlign.xs=\"center center\"\r\n     fxLayout.lg=\"row\" fxLayout.xs=\"column\" fxLayout.sm=\"column\" class=\"container\" fxLayoutGap=\"30px\"\r\n     fxLayoutAlign=\"center center\" fxLayoutGap.lg=\"10px\"\r\n     [ngStyle.md]=\"{'padding-top': '30px', 'margin-left': '22px', 'height': '820px', 'width': '97%'}\"\r\n     [ngStyle.sm]=\"{'padding-top': '30px', 'margin-left': '3px', 'height': '1200px', 'width': '97%'}\"\r\n     [ngStyle.xs]=\"{'padding-top': '5px', 'margin-left': '5px', 'height': '1200px', 'width': '100%'}\"\r\n     [ngStyle.gt-lg]=\"{'padding-top': '40px', 'margin-left': '5px', 'height': '900px', 'width': '97%'}\">\r\n  <mat-card class=\"example-card shadow color-and-radius\">\r\n    <mat-card-header>\r\n      <img class=\"shadow\" mat-card-avatar [src]=\"data.user.profileImgPath\" alt=\"\">\r\n      <mat-card-title [ngStyle.xs]=\"{'font-size': '15px' }\">{{data.name}}</mat-card-title>\r\n      <mat-card-subtitle>{{data.user.username}}</mat-card-subtitle>\r\n      <mat-card-subtitle *ngIf=\"data.linkReference !== 'null'\">\r\n        <a matTooltip=\"{{'Go to ' + data.linkReference}}\"\r\n           [href]=\"data.linkReference\" mat-icon-button>\r\n          <mat-icon>link</mat-icon>\r\n        </a>\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image [src]=\"data.link\" alt=\"Photo of a Shiba Inu\">\r\n    <mat-card-content>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button class=\"shadow\" mat-button style=\"margin-right: 15px\">\r\n        <mat-icon style=\"margin-right: 3px; margin-left: 3px; color: black\">thumb_up</mat-icon>\r\n        <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.liked}}</span>\r\n      </button>\r\n\r\n\r\n      <button style=\"background-color: #941B85;\" class=\"shadow\" mat-button matTooltip=\"Click to open menu\"\r\n              [matMenuTriggerFor]=\"menu\"\r\n              aria-label=\"Example icon-button with a menu\">\r\n        <!--    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>-->\r\n        <mat-icon style=\"color: white\">save_alt</mat-icon>\r\n        <span style=\"margin-left: 3px; margin-right: 3px; color: white\">{{data.downloaded}}</span>\r\n      </button>\r\n\r\n      <mat-menu backdropClass=\"img-download-detail\" #menu=\"matMenu\">\r\n        <div *ngFor=\"let detail of data.imageDetails\">\r\n          <button (click)=\"download(detail)\" style=\"width: 700px; height: 100%\" mat-menu-item>\r\n            <mat-icon>aspect_ratio</mat-icon>\r\n            <span style=\"display: inline-block; width: 15px\"></span>\r\n            <span>{{detail.width + \" x \" + detail.height}}</span>\r\n            <!--          <span style=\"display: inline-block; width: 25px\"></span>-->\r\n            <!--          <span>{{detail.contentType}}</span>-->\r\n            <span style=\"display: inline-block; width: 25px\"></span>\r\n            <span>{{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n          </button>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <button mat-menu-item [mat-menu-trigger-for]=\"cropImage\">\r\n          <mat-icon>settings_applications</mat-icon>\r\n          Download options\r\n        </button>\r\n\r\n        <mat-menu #cropImage=\"matMenu\" xPosition=\"before\">\r\n          <button (click)=\"cropImageForDownload(data.imageDetails[0])\" mat-menu-item>\r\n            <mat-icon>photo_size_select_large</mat-icon>\r\n            Crop image\r\n          </button>\r\n          <mat-divider></mat-divider>\r\n          <button (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\" mat-menu-item>\r\n            <mat-icon>transform</mat-icon>\r\n            Set individual dimensions\r\n          </button>\r\n        </mat-menu>\r\n      </mat-menu>\r\n    </mat-card-actions>\r\n\r\n    <!--<mat-card-content>\r\n\r\n    </mat-card-content>-->\r\n  </mat-card>\r\n\r\n  <mat-card [ngStyle.xs]=\"{'margin-left': '30px', 'width': '87%'}\"\r\n            class=\"download-image color-and-radius shadow\">\r\n    <mat-card-title>\r\n      <strong>SpecShots</strong> download options\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n\r\n    <mat-card-actions>\r\n      <mat-list #option>\r\n        <mat-list-item #downloadItem\r\n                       (click)=\"OpenDownloadBox(detail)\"\r\n                       class=\"hoverable border-radius\"\r\n                       *ngFor=\"let detail of data.imageDetails; index as i\"\r\n                        [class.clicked-details]=\"detail.width === clickedDownloadResolution.width\">\r\n          <mat-icon mat-list-icon>cloud_download</mat-icon>\r\n          <div mat-line>\r\n          <strong>{{appendFileSizeName(i)}}</strong> {{detail.width + \" x \" + detail.height}}\r\n          </div>\r\n          <div mat-line>\r\n            <span>Size : {{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n          </div>\r\n        </mat-list-item>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <mat-list-item *ngIf=\"toggle\">\r\n          <button matLine\r\n                  (click)=\"download(clickedDownloadResolution)\" style=\"font-size: 23px\" color=\"primary\" mat-line mat-raised-button>\r\n            Download\r\n          </button>\r\n        </mat-list-item>\r\n\r\n        <mat-divider></mat-divider>\r\n        <div mat-subheader>Individual download actions</div>\r\n\r\n        <mat-list-item class=\"hoverable\" (click)=\"cropImageForDownload(data.imageDetails[0])\">\r\n          <mat-icon mat-list-icon>photo_size_select_large</mat-icon>\r\n          <div mat-line>\r\n            Crop image\r\n          </div>\r\n        </mat-list-item>\r\n        <mat-list-item class=\"hoverable\" (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\">\r\n          <mat-icon mat-list-icon>transform</mat-icon>\r\n          <div mat-line>\r\n            Set individual dimensions\r\n          </div>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n<!--<div fxLayout=\"row\" style=\"min-width: 100%; padding: 30px; margin-top: 200px\" *ngIf=\"$selectedImage | async as data\">\r\n  <div fxLayoutGap=\"20px\" *ngFor=\"let i of data.tags\">\r\n    <a mat-button (click)=\"clickedTag(i.tag)\" style=\"color: black;\r\n        color: black;\r\n        text-decoration: none;\r\n        border-radius: 20px;\r\n        margin-top: 2%;\">\r\n      {{'# ' + i.tag }}\r\n    </a>\r\n  </div>\r\n</div>-->\r\n\r\n\r\n<!--<div class=\"container\">\r\n\r\n\r\n  <div *ngIf=\"$selectedImage | async as data\" class=\"content\">\r\n    <div class=\"img\">\r\n      <img class=\"img-content\"  [src]=\"data.link\" alt=\"\">\r\n    </div>\r\n    <div class=\"content-details\">\r\n      <span class=\"data-name\">{{data.name}}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"download\" *ngIf=\"$selectedImage | async as data\">\r\n    <div class=\"spacer\" style=\"margin-bottom: 20px; background-color: #941B85\">\r\n      <div class=\"profile-detail\">\r\n        <div class=\"temp\">\r\n          <button mat-icon-button>\r\n            &lt;!&ndash;        <mat-icon>account_circle</mat-icon>&ndash;&gt;\r\n            <img class=\"shadow\" width=\"60px\" height=\"60px\" style=\"border-radius: 100%;\"\r\n                 src=\"{{data.user.profileImgPath}}\" alt=\"\">\r\n          </button>\r\n          <span style=\"margin-left: 30px; font-size: 18px; color: white\">{{data.user.username}}</span>\r\n        </div>\r\n      </div>\r\n      <mat-divider style=\"margin-top: 40px; margin-bottom: 20px; border-color: white\"></mat-divider>\r\n\r\n      <div class=\"img-detail\">\r\n        <div class=\"img-name\" style=\"display: flex; flex-direction: row; align-items: baseline; flex-wrap: wrap; max-width: 220px\">\r\n          &lt;!&ndash;<mat-icon  color=\"primary\" style=\"font-size: 40px; margin-right: 5px\">image</mat-icon>&ndash;&gt;\r\n          <button style=\" ;width: 50px; height: 50px; font-size: 18px; word-break: break-all; background-color: white\" mat-fab>\r\n            <mat-icon style=\"color: black\" >image</mat-icon>\r\n          </button>\r\n          <span style=\"margin-left: 30px; font-size: 18px; max-width: 130px; color: white\">{{data.name}}</span>\r\n        </div>\r\n\r\n        <div class=\"img-stats\">\r\n          <mat-chip-list style=\"margin-top: 20px; margin-bottom: 10px\" aria-label=\"Fish selection\">\r\n            <div class=\"chips\" style=\"display: flex; flex-direction: row; margin-top: 20px\">\r\n              <mat-chip class=\"shadow chip\" style=\"background-color: white\"  selected>\r\n                <mat-icon style=\"margin-right: 3px; margin-left: 3px; color: black\">thumb_up</mat-icon>\r\n                <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.liked}}</span>\r\n              </mat-chip>\r\n              <mat-chip class=\"shadow chip\" style=\"background-color: white\"  selected>\r\n                <mat-icon style=\"color: black\">save_alt</mat-icon>\r\n                <span style=\"margin-left: 3px; margin-right: 3px; color: black\">{{data.downloaded}}</span>\r\n              </mat-chip>\r\n            </div>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <mat-divider style=\"margin-top: 20px; margin-bottom: 10px; border-color: white\"></mat-divider>\r\n\r\n\r\n      <div class=\"download-image\">\r\n        <button class=\"shadow\" mat-raised-button matTooltip=\"Click to open menu\"\r\n                style=\"color: white; width: 300px; height: 50px; background-color: #ef233c\"\r\n                [matMenuTriggerFor]=\"menu\"\r\n                aria-label=\"Example icon-button with a menu\">\r\n          &lt;!&ndash;    <mat-icon style=\"font-size: 30px\">more_vert</mat-icon>&ndash;&gt;\r\n          Download\r\n        </button>\r\n\r\n        <mat-menu backdropClass=\"img-download-detail\" #menu=\"matMenu\" >\r\n          <div *ngFor=\"let detail of data.imageDetails\">\r\n            <button (click)=\"download(detail)\" style=\"width: 700px; height: 100%\" mat-menu-item>\r\n              <mat-icon>aspect_ratio</mat-icon>\r\n              <span style=\"display: inline-block; width: 15px\"></span>\r\n              <span>{{detail.width + \" x \" + detail.height}}</span>\r\n              &lt;!&ndash;          <span style=\"display: inline-block; width: 25px\"></span>&ndash;&gt;\r\n              &lt;!&ndash;          <span>{{detail.contentType}}</span>&ndash;&gt;\r\n              <span style=\"display: inline-block; width: 25px\"></span>\r\n              <span>{{(detail.size / 1024).toFixed(1) + \" kB\"}}</span>\r\n            </button>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n          <button mat-menu-item [mat-menu-trigger-for]=\"cropImage\">\r\n            <mat-icon>settings_applications</mat-icon>\r\n            Download options\r\n          </button>\r\n\r\n          <mat-menu #cropImage=\"matMenu\" xPosition=\"before\">\r\n            <button (click)=\"cropImageForDownload(data.imageDetails[0])\" mat-menu-item>\r\n              <mat-icon>photo_size_select_large</mat-icon>\r\n              Crop image\r\n            </button>\r\n            <mat-divider></mat-divider>\r\n            <button (click)=\"getIndividualResolutionDownloadDialog(data.imageDetails[0])\" mat-menu-item>\r\n              <mat-icon>transform</mat-icon>\r\n              Set individual dimensions</button>\r\n          </mat-menu>\r\n        </mat-menu>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div class=\"related-tags\">\r\n      <h3>Related tags : </h3>\r\n      <div *ngIf=\"$selectedImage | async as data\" class=\"tags\">\r\n        <a class=\"shadow\" (click)=\"clickedTag(i.tag)\" style=\"background-color: #f4f1de; color: black;\r\n        color: black;\r\n        text-decoration: none;\r\n        padding: 5px 20px;\r\n        border-radius: 20px;\r\n        margin-top: 2%; margin-right: 1%\" *ngFor=\"let i of data.tags\">{{'# ' + i.tag }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <span style=\"margin-top: 20px\"></span>\r\n  </div>\r\n</div>-->\r\n\r\n<div [ngStyle.xs]=\"{'margin-top': '50px'}\" class=\"related-images-container\">\r\n  <div class=\"header\">\r\n    <h2>Related images : </h2>\r\n  </div>\r\n  <app-image-content [isProfile]=\"false\"\r\n                     [data]=\"$relatedImages\"></app-image-content>\r\n</div>\r\n\r\n","import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {SelectImage} from \"../../shared/app-state/actions/image.action\";\r\nimport {ChangeImageDetailsDialogComponent} from \"../../private/change-image-details-dialog/change-image-details-dialog.component\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-image-item',\r\n  templateUrl: './image-item.component.html',\r\n  styleUrls: ['./image-item.component.scss']\r\n})\r\nexport class ImageItemComponent implements OnInit {\r\n  @Input() image: ImageModel;\r\n  @Input() rowHeight = 1;\r\n  @Input() gutterSize = 1;\r\n  @ViewChild('img') img: ElementRef;\r\n  public rows = 0;\r\n\r\n  constructor(private store: Store, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  calculateRows() {\r\n    console.log(this.img.nativeElement.offsetHeight);\r\n    this.rows = Math.floor(\r\n      this.img.nativeElement.offsetHeight / (this.rowHeight + this.gutterSize)\r\n    );\r\n    console.log('rows calculated : ' + this.rows);\r\n  }\r\n}\r\n\r\n\r\nexport interface ImageViewModel {\r\n  src: string;\r\n  alt?: string;\r\n}\r\n","<div class=\"content\">\r\n  <img class=\"img\" #img\r\n       [src]=\"image.link\"\r\n       (load)=\"calculateRows()\"/>\r\n  <!--FOO-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    /*this.store.dispatch(new RequestMessageAction(null));*/\n  }\n\n}\n","<div style=\"display: flex; justify-content: center; align-items: center\">\n\n  <mat-error *ngIf=\"$requestStatus | async as status\" style=\";margin: 0 auto; font-size: 30px\">\n    The requested Page could not be found\n    Reason : {{status.message}}\n  </mat-error>\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {UserDetailsActions} from \"../shared/app-state/actions/user-details.action\";\r\nimport ValidResetPasswordTokenResponse = UserDetailsActions.ValidResetPasswordTokenResponse;\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ChangePasswordComponent} from \"../private/change-password/change-password.component\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaswordResetGuard implements CanActivate {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private store: Store,\r\n              private router: Router,\r\n              private dialog: MatDialog) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const tokenId = next.params.id;\r\n    this.store\r\n      .dispatch(new ValidResetPasswordTokenResponse(tokenId.substring(1)))\r\n      .subscribe(value => {\r\n        this.dialog.open(ChangePasswordComponent)\r\n        this.router.navigate(['/welcome']);\r\n      });\r\n    /*this.authService\r\n      .validatePasswordTokenId( {tokenId: tokenId.substring(1)} )\r\n      .subscribe(value => console.log(value))*/\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\nimport {ImagesByUserIDAction} from \"../../shared/app-state/actions/image.action\";\nimport {ImagesByUserIdState} from \"../../shared/app-state/states/images-by-user-id.state\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\nimport {map, share, switchMap, tap} from \"rxjs/operators\";\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\nimport {UserAuthStateModel} from \"../../shared/domain/UserAuthStateModel\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\nimport {MatTabChangeEvent} from \"@angular/material/tabs\";\nimport {ProfileViewModel} from \"./profile-view-model\";\nimport {ModelFilter} from \"../../shared/util/model-filter\";\nimport {ImageModelFilter} from \"../../shared/util/image-model-filter\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {RequestStatusState} from \"../../shared/app-state/states/request-status.state\";\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n\n  weekFilter: boolean = false;\n\n\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n\n  @Select(LoginStateModel.loggedInUser) $logged;\n  userDetails: ProfileViewModel;\n  @Select(UserDetailsState.firstLastName) $firstLast;\n  @Select(UserDetailsState.getUserImages) $userImages;\n  @Select(UserDetailsState.getUserLikes) $userLikes;\n  @Select(UserDetailsState.userDetails) $userDetails;\n\n  @Select(RequestStatusState.getStatus) $requestStatus;\n  $imgs = new Observable<ImageModel[]>();\n  $likeds = new Observable<ImageModel[]>();\n  likes: ImageModel[] = [];\n  requestError: boolean = false;\n  errorMessage: string;\n  downloadLink: any;\n  editableProfile = new BehaviorSubject<boolean>(false);\n\n  constructor(private store: Store,\n              private route: ActivatedRoute,\n              private service: ImageRequestService,\n              private router: Router) {\n    // this.route.data.subscribe((value: { userDetails: ProfileViewModel }) => {\n    //   this.userDetails = value.userDetails;\n    //   this.$imgs = of(value.userDetails.userProfile.images);\n    //   this.$likeds = of(value.userDetails.userProfile.likes)\n    // })\n  }\n\n  ngOnInit(): void {\n\n    this.likes = this.store.selectSnapshot(UserDetailsState.getUserLikes);\n\n    this.$userLikes.subscribe(console.log)\n\n\n    this.$userImages\n      .subscribe(model =>  {\n        if (model !== undefined) {\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 7)\n          //   .forEach(image => console.log(\"Week : \" + image.uploadDate));\n\n          // ImageModelFilter.apply(model, 3600000 * 24 * 30)\n          //   .forEach(image => console.log(\"Month : \" + image.uploadDate))\n          //\n          // ImageModelFilter\n          //   .apply(model, 3600000 * 24 * 365)\n          //   .forEach(image => console.log(\"Year : \" + image.uploadDate))\n\n        }\n      })\n\n\n    console.log(this.userDetails);\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store\n          .dispatch(new UserDetailsActions.GetUserDetails(userId))\n          .subscribe(value => {\n            console.log(value.UserDetails);\n            this.requestError = false;\n          }, error => {\n            this.requestError = true;\n            this.errorMessage = 'Unable to find requested user';\n            this.router.navigate(['profile', {error: error.error.message}])\n          })\n        this.$logged.subscribe(loggedUser => {\n          if (loggedUser) {\n            this.editableProfile.next(loggedUser.userId === param.get('userId'));\n          }\n        })\n      })\n\n    const loggedUser : BaseUserDetails =\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\n    if (loggedUser !== undefined && loggedUser !== null) {\n\n      // this.store.dispatch([\n      //     new AuthenticationActions.IsLoggedIn(),\n      //     new ImagesByUserIDAction(loggedUser.userId)\n      //   ]\n      // )\n    }\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  getLikes(): ImageModel[] {\n    console.log(this.$userLikes);\n    return this.store.selectSnapshot(UserDetailsState.getUserLikes);\n  }\n\n  imageWasLiked($event: MatTabChangeEvent): void {\n    const label = $event.tab.textLabel;\n    console.log(label);\n    if (label === 'Likes') {\n      console.log(\"da schau her\");\n      this.store.dispatch(new UserDetailsActions.GetUserDetails(\n        this.store.selectSnapshot(UserDetailsState.userDetails).userId\n      ))\n    }\n  }\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n\r\n<div  class=\"container\">\r\n  <!--  <div class=\"filler_left\"></div>-->\r\n\r\n  <mat-error *ngIf=\"requestError\" style=\"font-size: 40px\">\r\n    {{errorMessage}}\r\n  </mat-error>\r\n\r\n  <div *ngIf=\"requestError === false\" class=\"center\">\r\n\r\n\r\n    <div class=\"profile_icon\">\r\n<!--      <button *ngIf=\"!($logged | async)\" disabled mat-icon-button-->\r\n<!--              aria-label=\"Example icon button with a home icon\">-->\r\n<!--        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>-->\r\n<!--      </button>-->\r\n\r\n      <mat-icon class=\"profile-img\" *ngIf=\"!($profileImg | async)\"\r\n                style=\"font-size: 145px; color: lightgray;\">\r\n        account_circle\r\n      </mat-icon>\r\n      <!--      <img *ngIf=\"($logged | async) as loggedUser\" class=\"profile-img\" [src]=\"loggedUser.profileImgPath\">-->\r\n      <img *ngIf=\"($profileImg | async) as src\" class=\"profile-img\" [src]=\"src\">\r\n<!--      <img class=\"profile-img\" [src]=\"userDetails.userProfile.profileImgPath\">-->\r\n    </div>\r\n    <div class=\"title\">\r\n      <div class=\"user-name\">\r\n<!--        <span *ngIf=\"userDetails\"-->\r\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\r\n<!--          <strong>-->\r\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName}}-->\r\n<!--          </strong>-->\r\n<!--        </span>-->\r\n<!--        <span *ngIf=\"$userDetails | async as loggedUser\"-->\r\n<!--              style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">-->\r\n<!--          <strong>-->\r\n<!--            {{loggedUser.firstName + \" \" + loggedUser.lastName}}-->\r\n<!--          </strong>-->\r\n<!--        </span>-->\r\n          <span *ngIf=\"$firstLast | async as name\"\r\n                style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px; line-height: 40px\">\r\n          <strong>\r\n            {{name}}\r\n          </strong>\r\n        </span>\r\n      </div>\r\n      <br>\r\n      <div class=\"user-name\">\r\n        <p style=\"font-size: 17px; line-height: 28px\">\r\n          Download free, beautiful high-quality photos curated <br> by\r\n<!--          <span *ngIf=\"userDetails\">-->\r\n<!--            {{userDetails.userProfile.firstName + \" \" + userDetails.userProfile.lastName }}-->\r\n<!--         </span>.-->\r\n<!--          <span *ngIf=\"$userDetails | async as userDetails\">-->\r\n<!--            {{userDetails.firstName + \" \" + userDetails.lastName }}-->\r\n<!--         </span>.-->\r\n          <span *ngIf=\"$firstLast | async as name\">\r\n            {{name}}\r\n         </span>.\r\n        </p>\r\n      </div>\r\n<!--      <div *ngIf=\"userDetails.isOwner\" class=\"edit\">-->\r\n<!--        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>-->\r\n<!--          <mat-icon>edit</mat-icon>-->\r\n<!--          Edit profile-->\r\n<!--        </button>-->\r\n<!--      </div>-->\r\n      <div *ngIf=\"editableProfile | async\" class=\"edit\">\r\n        <button routerLink=\"/edit-profile\" style=\"\" mat-icon-button>\r\n          <mat-icon>edit</mat-icon>\r\n          Edit profile\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<mat-tab-group mat-stretch-tabs (selectedTabChange)=\"imageWasLiked($event)\" class=\"mat-tab-group\">\r\n  <mat-tab class=\"tab\" label=\"Gallery\">\r\n    <ng-template class=\"template\" mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\r\n      Images\r\n    </ng-template>\r\n<!--    <app-image-content [isProfile]=\"true\"-->\r\n<!--                       [data]=\"$imgs\"></app-image-content>-->\r\n    <ng-template matTabContent>\r\n      <app-image-content class=\"gallery-content\" [isProfile]=\"true\"\r\n                         [data]=\"$userImages\"></app-image-content>\r\n    </ng-template>\r\n  </mat-tab>\r\n  <mat-tab label=\"Likes\">\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\r\n      Likes\r\n    </ng-template>\r\n    <ng-template matTabContent>\r\n      <app-image-content class=\"gallery-content\" [isProfile]=\"false\"\r\n                         [data]=\"$userLikes\"></app-image-content>\r\n    </ng-template>\r\n    <div>\r\n    </div>\r\n  </mat-tab>\r\n<!--  <mat-tab *ngIf=\"(editableProfile | async) || (userDetails.isOwner)\" label=\"Third\">-->\r\n<!--    <ng-template mat-tab-label>-->\r\n<!--      <mat-icon class=\"example-tab-icon\">lock</mat-icon>-->\r\n<!--      Private-->\r\n<!--    </ng-template>-->\r\n<!--  </mat-tab>-->\r\n  <!--<mat-tab *ngIf=\"editableProfile | async\" label=\"Third\">\r\n    <ng-template mat-tab-label>\r\n      <mat-icon class=\"example-tab-icon\">lock</mat-icon>\r\n      Private\r\n    </ng-template>\r\n  </mat-tab>-->\r\n</mat-tab-group>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../renew-expired-account-token/renew-expired-account-token.component\";\r\n\r\n@Component({\r\n  selector: 'app-renew-expired-account-token-wrapper',\r\n  templateUrl: './renew-expired-account-token-wrapper.component.html',\r\n  styleUrls: ['./renew-expired-account-token-wrapper.component.scss']\r\n})\r\nexport class RenewExpiredAccountTokenWrapperComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n      width: '450px',\r\n      maxWidth: '450px',\r\n      minWidth: '280px',\r\n      height: '300px',\r\n      minHeight: '300px',\r\n      maxHeight: '300px'\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {RenewAccountVerificationToken} from \"../../shared/login/login.component\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {ShowEmailWasSentDialog} from \"../../shared/util/ShowEmailWasSentDialog\";\r\n\r\n@Component({\r\n  selector: 'app-renew-expired-account-token',\r\n  templateUrl: './renew-expired-account-token.component.html',\r\n  styleUrls: ['./renew-expired-account-token.component.scss']\r\n})\r\nexport class RenewExpiredAccountTokenComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<RenewExpiredAccountTokenComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: RenewAccountVerificationToken,\r\n              private authService: UserAuthenticationService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  renewToken() {\r\n    this.authService\r\n      .renewToken(\r\n        {email: this.data.email, password: this.data.password}\r\n      ).subscribe(value =>\r\n      new ShowEmailWasSentDialog(this.dialog, value));\r\n  }\r\n}\r\n","<div class=\"verification-container\">\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"start end\" class=\"close\">\r\n    <button (click)=\"dialogRef.close()\" mat-icon-button>\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"title\">\r\n    <h2 *ngIf=\"data.tokenError === false\" style=\"text-align: center\">Your account needs to be verified</h2>\r\n    <h2 *ngIf=\"data.tokenError === true\" style=\"text-align: center\">Invalid request</h2>\r\n    <h2 *ngIf=\"data.tokenError === true && data.message\" style=\"text-align: center\">{{data.message}}</h2>\r\n  </div>\r\n\r\n  <a *ngIf=\"data.tokenError === true\"\r\n     mat-button\r\n     (click)=\"dialogRef.close()\"\r\n     routerLink=\"/welcome\"\r\n     class=\"img\"\r\n     fxLayout=\"column\"\r\n     fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/error-3-128.png\">\r\n  </a>\r\n\r\n  <a *ngIf=\"data.tokenError === undefined || data.tokenError === null || data.tokenError === false\" mat-button (click)=\"renewToken()\" class=\"img\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/error-3-128.png\">\r\n    <span>Receive email to verify account</span>\r\n  </a>\r\n\r\n  <!--<div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"home\">\r\n    <a fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n       style=\"color: #3f51b5;\" routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <mat-icon style=\"font-size: 50px\">home</mat-icon>\r\n    </a>\r\n  </div>-->\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {debounceTime, filter, map, switchMap, tap, throttleTime} from \"rxjs/operators\";\r\nimport {TagRequestService} from \"../../serviceV2/tag-request.service\";\r\nimport {connectableObservableDescriptor} from \"rxjs/internal/observable/ConnectableObservable\";\r\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImagesByTagsAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\r\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\r\nimport {QueryTagAction} from \"../../shared/app-state/actions/query-tag-action\";\r\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\r\nimport {SearchByTagState} from \"../../shared/app-state/states/search-by-tag.state\";\r\nimport {TagQueryList} from \"../../shared/domain/tagModel/tag-query-list\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {\r\n  FilterName,\r\n  ImagesByTagNameQueryImpl,\r\n  ImagesByTagNameWithFilterArgs, ImagesByTagNameWithFilterOpt\r\n} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {SignupComponent} from \"../../shared/signup/signup.component\";\r\nimport {LoggedInUserModel} from \"../../shared/domain/userModel/UserLoginModel\";\r\nimport {LoginComponent} from \"../../shared/login/login.component\";\r\nimport {LoginStateModel} from \"../../shared/app-state/states/login.state.model\";\r\nimport {AuthenticationActions} from \"../../shared/app-state/actions/authentication-action\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {error} from \"@angular/compiler/src/util\";\r\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\r\nimport {UserDetailsState} from \"../../shared/app-state/states/User-details.state\";\r\nimport {UserDetailsActions} from \"../../shared/app-state/actions/user-details.action\";\r\nimport {LoggedUserDetailsState} from \"../../shared/app-state/states/logged-user-details.state\";\r\nimport {IUserAuthState} from \"../../shared/domain/UserAuthStateModel\";\r\nimport {BaseUserDetails} from \"../../shared/domain/userModel/user-details.model\";\r\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport SearchUsers = UserDetailsActions.SearchUsers;\r\nimport {SearchByUsersState} from \"../../shared/app-state/states/search-by-users.state\";\r\nimport {SearchViewModel} from \"./search-view.model\";\r\nimport {MatCheckboxChange} from \"@angular/material/checkbox\";\r\nimport {MediaObserver} from \"@angular/flex-layout\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {SearchBarContent} from \"../custom-search-bar-content/custom-search-bar-content.component\";\r\nimport {PressedSearchContent} from \"../custom-search-bar/custom-search-bar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-toolbar',\r\n  templateUrl: './search.toolbar.component.html',\r\n  styleUrls: ['./search.toolbar.component.scss']\r\n})\r\nexport class SearchToolbarComponent implements OnInit, OnDestroy {\r\n\r\n  disableSearchOptionsIcon = false;\r\n\r\n  // if variable filterable is set to true then\r\n  // autocomplete image-request will be filtered with the applied values\r\n  @Input('filterable') filterable: boolean;\r\n\r\n  queryContent: SearchBarContent;\r\n\r\n  openCloseDetails: boolean = false;\r\n  // searchOption can be set either to tags or to users\r\n  // if one of both is set then individual filter-options can be applied\r\n  searchOption = \"Tags\";\r\n  // observable-searchTerm changes when the value in the\r\n  // autocomplete input changes\r\n  searchTerm$ = new Subject<string>();\r\n  // observable $tagOptions is directly fetched from the rest api\r\n  // to be displayed in the options-dialog as a clickable tagList\r\n  @Select(SearchByTagState.getFetchedTagListAsOption) $tagOptions: Observable<SearchViewModel[]>;\r\n  // observable $userOptions is directly fetched from the rest api\r\n  // to be displayed in the options-dialog as a clickable userList\r\n  // which has an existing profile\r\n  @Select(SearchByUsersState.getFetchedUsers) $users: Observable<BaseUserDetails[]>;\r\n  // observable $isLoggedIn validates with a\r\n  // server request if the user is logged in\r\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\r\n  // $profileImage is to display the clickable\r\n  // logged users profile image int the toolbar\r\n  // when icon is clicked then a options menu opens\r\n  @Select(LoginStateModel.profileImg) $profileImage;\r\n  // $loggedUser is fetched from the server\r\n  // and displays the logged user details\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  // $userName -> formatted logged userName\r\n  @Select(LoggedUserDetailsState.loggedUsername) $userName;\r\n\r\n  mobile$ = new Subject<boolean>();\r\n  desktop$ = new Subject<boolean>();\r\n\r\n  isDesktopDevice: boolean;\r\n  isTabletDevice: boolean;\r\n  isMobileDevice: boolean;\r\n\r\n  filterOptions: FilterCheckBox = {\r\n    timeFilterOptions: [\r\n      {name: 'Last 7 Days', checked: false,  value: 7},\r\n      {name: 'Last 30 Days', checked: false,  value: 30},\r\n      {name: 'Last 365 Days', checked: false, value: 365},\r\n      {name: 'All', checked: true, disabled: false, value: -1}\r\n    ],\r\n    mostDownloads: { name: 'Most downloaded', checked: false },\r\n    mostLiked: { name: 'Most liked', checked: false }\r\n  };\r\n\r\n  weekFilter: boolean = false;\r\n  monthFilter: boolean = false;\r\n  yearFilter: boolean = false;\r\n\r\n  // ng until destroy\r\n\r\n  constructor(private service: TagRequestService,\r\n              public store: Store,\r\n              public imageService: ImageRequestService,\r\n              private dialog: MatDialog,\r\n              private authService: UserAuthenticationService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private media: MediaObserver,\r\n              private deviceService: DeviceDetectorService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        switch (this.searchOption) {\r\n          case 'Tags':\r\n            this.store.dispatch(new QueryTagAction(new BehaviorSubject(value)))\r\n            break;\r\n          case 'Users':\r\n            this.store.dispatch(new SearchUsers(new BehaviorSubject(value)))\r\n            break;\r\n        }\r\n      });\r\n\r\n    this.isTabletDevice = deviceService.isTablet();\r\n    this.isDesktopDevice = deviceService.isDesktop();\r\n    this.isMobileDevice = deviceService.isMobile();\r\n\r\n\r\n\r\n    this.media.asObservable().subscribe(value => {\r\n      value.filter(value1 => {\r\n        if (value1.mqAlias === 'xs') {\r\n          this.isMobileDevice = true;\r\n          this.isDesktopDevice = false;\r\n          this.isTabletDevice = false;\r\n        } else if (value1.mqAlias === 'sm' || value1.mqAlias === 'md') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDevice = false;\r\n          this.isTabletDevice = true;\r\n        } else if (value1.mqAlias === 'xl' || value1.mqAlias === 'lg') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDevice = true;\r\n          this.isTabletDevice = false;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  foo(evt) {\r\n    console.log(evt.target.value)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.media.asObservable().subscribe(value => {\r\n      console.log(value);\r\n    });\r\n\r\n\r\n    let val: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    if (val === undefined || val === null)\r\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n        .subscribe(value => {\r\n          this.store.dispatch(new LoggedUserDetails(value.Authentication.user.userId))\r\n            .subscribe(value1 => console.log(value1));\r\n        });\r\n  }\r\n\r\n  search(selected): void {\r\n    console.log(selected);\r\n    /*const filter: ImagesByTagNameWithFilterOpt;*/\r\n\r\n    let filters = new Map();\r\n    filters.set(FilterName.FILTER_BY_DATE_WEEK, this.weekFilter);\r\n    filters.set(FilterName.FILTER_BY_DATE_MONTH, this.monthFilter);\r\n    filters.set(FilterName.FILTER_BY_DATE_YEAR, this.yearFilter);\r\n\r\n    switch (selected.scope) {\r\n      case 'Tags' :\r\n        this.store.dispatch(new ImagesByTagsAction(\r\n          new ImagesByTagNameWithFilterOpt(this.filterOptions, selected.queryString)))\r\n          .subscribe(value => {\r\n            console.log(value);\r\n            console.log(\"Search pressed..\");\r\n            this.store.dispatch(new Navigate(['/image-by-tags']))\r\n          });\r\n        break;\r\n      case 'Users':\r\n        const userId = this.store\r\n          .selectSnapshot(SearchByUsersState.getFetchedUsers)\r\n          .filter(user => user.username === selected.queryString)\r\n          .map(filteredUser => filteredUser.userId);\r\n        this.store.dispatch(\r\n          new Navigate(['profile', {userId: userId}]));\r\n    }\r\n\r\n  }\r\n\r\n  signup(): void {\r\n    const ref = new MatDialogConfig();\r\n    this.dialog.open(SignupComponent,\r\n      {\r\n        width: '500px',\r\n        disableClose: true,\r\n        autoFocus: false,\r\n        panelClass: 'registration-dialog',\r\n      });\r\n  }\r\n\r\n  login(): void {\r\n    const ref = new MatDialogConfig();\r\n    ref.disableClose = true;\r\n    this.dialog.open(LoginComponent,\r\n      {width: this.isDesktopDevice ? '450px' : this.isMobileDevice ? '320' :  '300px',\r\n        panelClass: 'login-dialog'});\r\n  }\r\n\r\n  logout(): void {\r\n    this.store.dispatch(new AuthenticationActions.Logout())\r\n      .subscribe(value =>\r\n        this.store.dispatch(new Navigate(['welcome'])))\r\n  }\r\n\r\n  navigateUploadImage(): void {\r\n    let loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    this.router.navigate(['upload', {userId: loggedUser.userId}]);\r\n  }\r\n\r\n\r\n  navigateToSettings(): void {\r\n    this.store.dispatch(new Navigate(['edit-profile']))\r\n  }\r\n\r\n  navigateToUser(): void {\r\n    let loggedUser: BaseUserDetails =\r\n      this.store.selectSnapshot(LoginStateModel.loggedInUser);\r\n    this.store.dispatch(\r\n      new Navigate(['profile', {userId: loggedUser.userId}])\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  testing(el: any) {\r\n    console.log(el);\r\n    console.log(\"AHAHAHAHAH\");\r\n  }\r\n\r\n\r\n\r\n  public updateAll(checked: MatCheckboxChange, timeFilter: CheckBoxModel<number>): void {\r\n    this.filterOptions\r\n      .timeFilterOptions\r\n      .filter(value => value.name != timeFilter.name)\r\n      .forEach(value => value.checked = false);\r\n  }\r\n\r\n  openSearchOptions($event: boolean) {\r\n    console.log($event.valueOf());\r\n  }\r\n\r\n  contentPressed($event: any) {\r\n    console.log($event);\r\n  }\r\n\r\n  closeFilterDetails($event: PressedSearchContent) {\r\n    this.disableSearchOptionsIcon = $event.content.scope === 'Users';\r\n    this.openCloseDetails = $event.content.scope === 'Tags' && $event.clicked;\r\n  }\r\n}\r\n\r\n\r\nexport interface CheckBoxModel<T> {\r\n  name: string;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n  value?: T;\r\n}\r\n\r\nexport interface FilterCheckBox {\r\n  timeFilterOptions: Array<CheckBoxModel<number>>;\r\n  mostDownloads: CheckBoxModel<boolean>;\r\n  mostLiked: CheckBoxModel<boolean>;\r\n}\r\n\r\n\r\n","<div class=\"primary-color\"  [ngClass]=\"[isMobileDevice && ($isLoggedIn | async) == true ? 'mobile-logged-container' :\r\n                  isMobileDevice ? 'mobile-container' :\r\n                  isDesktopDevice  && ($isLoggedIn | async) == true ? 'container' :\r\n                   isDesktopDevice ?  'container-not-logged':\r\n                   ($isLoggedIn | async) == true ? 'tablet-logged-container' : 'tablet-container']\">\r\n  <div *ngIf=\"isDesktopDevice || isTabletDevice || isMobileDevice\" class=\"left\">\r\n    <a routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <img width=\"60px\" height=\"60px\" style=\"margin-top: 0px\"  src=\"assets/Specshots-Logo.png\">\r\n    </a>\r\n   <a style=\"margin-left: 10px; font-family: Epilogue,serif\"\r\n      *ngIf=\"(isDesktopDevice || isTabletDevice)\">\r\n      <strong>Welcome to SpecShots</strong>\r\n    </a>\r\n  </div>\r\n  <div  fxLayoutAlign=\"center\" fxFlexAlign=\"center\">\r\n  <!--  <div class=\"center\"> -->\r\n        <div class=\"center-wrapper\"  style=\"background-color: white; height: 60px; padding: 3px; border-radius: 10px;\"\r\n             [ngClass]=\"[isMobileDevice ? 'mobile-width' : isTabletDevice ? 'tablet-width' : 'desktop-width']\">\r\n          <app-custom-search-bar [disableIcon]=\"disableSearchOptionsIcon\"\r\n                                 (changedValue)=\"closeFilterDetails($event)\"\r\n                                 (enterPressed)=\"search($event)\"\r\n                                 (clickPressed)=\"search($event)\"\r\n                                 (openCloseSearchOptions)=\"closeFilterDetails($event)\"></app-custom-search-bar>\r\n        </div>\r\n   <!-- </div> -->\r\n  </div>\r\n\r\n  <!--<div *ngIf=\"($isLoggedIn | async) == false\" class=\"auth-container\">\r\n    <button (click)=\"login()\" mat-raised-button id=\"login\" class=\"\">Login</button>\r\n\r\n  </div>\r\n  <div *ngIf=\"($isLoggedIn | async) == false\" class=\"signUp\">\r\n    <button (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\r\n  </div>-->\r\n\r\n\r\n  <div class=\"user_actions\" *ngIf=\"(isMobileDevice || isTabletDevice) && ($isLoggedIn | async) == false\">\r\n    <button class=\"mobile-menu\" mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon style=\"color: white\">menu</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item *ngIf=\"($isLoggedIn | async) == false\" (click)=\"login()\" class=\"\">\r\n        <mat-icon>account_box</mat-icon>\r\n        Login\r\n      </button>\r\n      <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"signup()\" mat-menu-item>\r\n        <mat-icon>person_add</mat-icon>\r\n        Register\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n\r\n  <div class=\"unregistered_actions\" *ngIf=\"isDesktopDevice\">\r\n    <button  *ngIf=\"($isLoggedIn | async) == false\"\r\n            (click)=\"login()\"\r\n            mat-raised-button id=\"login\" class=\"\">\r\n      Login\r\n    </button>\r\n    <button *ngIf=\"($isLoggedIn | async) == false\" (click)=\"signup()\" mat-raised-button id=\"sign-up\">Register</button>\r\n    <!--<button *ngIf=\"($isLoggedIn | async) == true\" class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>-->\r\n    <button *ngIf=\"($isLoggedIn | async) == true\"\r\n            (click)=\"navigateUploadImage()\"\r\n            mat-icon-button>\r\n      <mat-icon matTooltip=\"Add your spectacular shot to your gallery.\"\r\n                matTooltipPosition=\"below\"\r\n                style=\"color: white; font-size: 40px\">add_a_photo</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <!--<div *ngIf=\"($isLoggedIn | async) == true\" class=\"submit_image\">\r\n    <button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>\r\n  </div>-->\r\n\r\n\r\n  <div class=\"account_icon_container\" *ngIf=\"($isLoggedIn | async) == true\">\r\n    <!--<button class=\"shadow\" (click)=\"navigateUploadImage()\" mat-flat-button>Submit a picture</button>-->\r\n    <div class=\"msg\" >\r\n      <span class=\"welcome_msg\"\r\n            style=\"color: white; margin-left: 10%; font-size: 15px\"\r\n            *ngIf=\"($isLoggedIn | async) == true && (isDesktopDevice || isTabletDevice)\">\r\n      <strong>{{ \"Hi, \" + ($userName | async) || \"User\" }}</strong>\r\n    </span>\r\n    </div>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon *ngIf=\"!($profileImage | async)\"\r\n                style=\"color: white;font-size: 50px\">account_circle\r\n      </mat-icon>\r\n\r\n      <img *ngIf=\"($profileImage | async)\"\r\n           class=\"img shadow\"\r\n           [src]=\"$profileImage | async\">\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button (click)=\"navigateToUser()\" mat-menu-item>\r\n          <mat-icon>person</mat-icon>\r\n          <span>View profile</span>\r\n        </button>\r\n        <button *ngIf=\"isMobileDevice || isTabletDevice\" (click)=\"navigateUploadImage()\" mat-menu-item>\r\n          <mat-icon>add_a_photo</mat-icon>\r\n          <span>Submit your image</span>\r\n        </button>\r\n        <button (click)=\"navigateToSettings()\" mat-menu-item>\r\n          <mat-icon>settings</mat-icon>\r\n          <span>Account settings</span>\r\n        </button>\r\n        <mat-divider></mat-divider>\r\n        <button (click)=\"logout()\" mat-menu-item>\r\n          <mat-icon>exit_to_app</mat-icon>\r\n          <span>Logout</span>\r\n        </button>\r\n      </mat-menu>\r\n    </button>\r\n  </div>\r\n\r\n\r\n  <!-- <div style=\"width: 33%\"></div> -->\r\n  <!--<div *ngIf=\"filterable && searchOption !== 'Users'\" class=\"open-filter-details\">\r\n\r\n\r\n    <button class=\"expand_btn\" style=\"color: white;\" (click)=\"closeFilterDetails()\" mat-icon-button>\r\n      <mat-icon style=\"color: white\">expand_more</mat-icon>\r\n      <span style=\"color: white;\">Search details </span>\r\n    </button>\r\n  </div>\r\n</div>-->\r\n\r\n\r\n</div>\r\n\r\n<div class=\"container filterDetails\" *ngIf=\"filterable && openCloseDetails\">\r\n  <div *ngIf=\"searchOption === 'Tags'\" class=\"center2\" style=\"padding: 10px; display: flex; justify-content: center\">\r\n    <section id=\"id_Section\">\r\n      <ul class=\"align_ul\" style=\"list-style-type: none;\">\r\n        <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Filter : </strong></li>\r\n        <li *ngFor=\"let timeFilter of filterOptions.timeFilterOptions \"\r\n            style=\"color: white;\">\r\n          <mat-checkbox [(ngModel)]=\"timeFilter.checked\"\r\n                        (change)=\"updateAll($event, timeFilter)\">\r\n            {{timeFilter.name}}\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n\r\n      <section style=\"display: flex; flex-direction: column\">\r\n        <ul class=\"align_ul\" style=\"list-style-type: none\">\r\n          <li style=\"color: white; font-size: 18px; margin-bottom: 10px\"><strong>Sort : </strong></li>\r\n          <li style=\"color: white\">\r\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostDownloads.checked\">\r\n              {{filterOptions.mostDownloads.name}}\r\n            </mat-checkbox>\r\n          </li>\r\n          <li style=\"color: white\">\r\n            <mat-checkbox [(ngModel)]=\"filterOptions.mostLiked.checked\">\r\n              {{filterOptions.mostLiked.name}}\r\n            </mat-checkbox>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn} from \"@angular/forms\";\r\nimport {ImageFileDetails} from \"../../shared/domain/imageModel/image-file-details\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {GetImageByIdState} from \"../../shared/app-state/states/get-image-by-id.state\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\n\r\n@Component({\r\n  selector: 'app-set-resolution-download-dialog',\r\n  templateUrl: './set-resolution-download-dialog.component.html',\r\n  styleUrls: ['./set-resolution-download-dialog.component.scss']\r\n})\r\nexport class SetResolutionDownloadDialogComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  public widthInputField: FormControl;\r\n  public heightInputField: FormControl;\r\n  public widthFocus: boolean = false;\r\n  public heightFocus: boolean = false;\r\n  public isDownloading = false;\r\n  @Select(GetImageByIdState.getFileDetails) $selectedImage;\r\n\r\n  constructor(private dialogRef: MatDialogRef<SetResolutionDownloadDialogComponent>,\r\n              private fb: FormBuilder,\r\n              private store: Store,\r\n              private downloadService: ImageDownloadService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const imageFileDetails = this.store.selectSnapshot(GetImageByIdState.getFileDetails);\r\n    this.initFormFields(imageFileDetails);\r\n    const ratio = imageFileDetails.width / imageFileDetails.height;\r\n\r\n    this.widthInputField\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (!this.heightFocus && this.widthFocus)\r\n          this.heightInputField.setValue((val / ratio).toFixed(2));\r\n\r\n      });\r\n    this.heightInputField\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (!this.widthFocus && this.heightFocus)\r\n          this.widthInputField.setValue((val * ratio).toFixed(2));\r\n      })\r\n  }\r\n\r\n  get width() {\r\n    return this.formGroup.get('width');\r\n  }\r\n\r\n  get height() {\r\n    return this.formGroup.get('height');\r\n  }\r\n\r\n  private initFormFields(imageFileDetails: ImageFileDetails) {\r\n    this.widthInputField = new FormControl(imageFileDetails.width, [\r\n      imgSizeValidator(imageFileDetails.width)\r\n    ]);\r\n    this.heightInputField = new FormControl(imageFileDetails.height, [\r\n      imgSizeValidator(imageFileDetails.height)\r\n    ]);\r\n    this.formGroup = this.fb.group({\r\n      width: this.widthInputField,\r\n      height: this.heightInputField,\r\n    })\r\n  }\r\n\r\n  focusedInWidth($event: FocusEvent): void {\r\n    console.log($event);\r\n    this.widthFocus = true;\r\n    this.heightFocus = false;\r\n  }\r\n\r\n  focusInHeight($event: FocusEvent): void {\r\n    console.log($event);\r\n    this.heightFocus = true;\r\n    this.widthFocus = false;\r\n  }\r\n\r\n  public downloadImage(width: any, height: any): void {\r\n    this.isDownloading = true;\r\n    this.downloadService\r\n      .downloadIndividualImage(\r\n        {\r\n          imageId: this.store.selectSnapshot(GetImageByIdState.getImageDetail).imageId,\r\n          width: width,\r\n          height: height\r\n        },\r\n        false)\r\n      .subscribe(value => console.log(value),\r\n          error => this.isDownloading = false,\r\n        () => this.isDownloading = false\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport function imgSizeValidator(value: number): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const forbidden = value < Number.parseFloat(control.value) || control.value < 100;\r\n    return forbidden ? {forbiddenValue: {value: control.value}} : null;\r\n  };\r\n}\r\n","<div style=\"display: flex; flex-direction: column; font-size: 23px\" class=\"container\">\r\n\r\n  <!--<mat-divider style=\"margin-top: 40px\"></mat-divider>-->\r\n  <mat-form-field style=\"margin-top: 40px\" appearance=\"fill\">\r\n    <mat-label>Width</mat-label>\r\n    <input style=\"width: 250px\" (focusin)=\"focusedInWidth($event)\" type=\"text\" matInput [formControl]=\"widthInputField\">\r\n    <mat-error *ngIf=\"width.errors\">\r\n      <div *ngIf=\"width.errors.forbiddenValue\">\r\n        {{\"Invalid width : \"  + width.errors.forbiddenValue.value}}\r\n      </div>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field style=\"margin-top: 40px\" appearance=\"fill\">\r\n    <mat-label>Height</mat-label>\r\n    <input (focusin)=\"focusInHeight($event)\" style=\"width: 250px\" type=\"text\" matInput [formControl]=\"heightInputField\">\r\n    <mat-error *ngIf=\"height.errors\">\r\n      <div *ngIf=\"height.errors.forbiddenValue\">\r\n        {{\"Invalid height : \"  + height.errors.forbiddenValue.value}}\r\n      </div>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <div *ngIf=\"(width.errors || height.errors) && $selectedImage | async as selectedImg\">\r\n    <div *ngIf=\"width.value > 100 || height.value > 100\">\r\n      <mat-error>{{\"Selected size is invalid.\"}}</mat-error>\r\n      <mat-error>{{\"Size cannot be bigger than : \" }}</mat-error>\r\n      <mat-error>{{selectedImg.width + \" X \" + selectedImg.height}}</mat-error>\r\n    </div>\r\n    <mat-error *ngIf=\"width.value < 100 || height.value < 100\">{{\"Image is to small\"}}</mat-error>\r\n  </div>\r\n  <button (click)=\"downloadImage(width.value, height.value)\" *ngIf=\"isDownloading == false && (!width.errors || !height.errors)\" style=\"margin: 40px auto;font-size: 30px\" mat-fab color=\"primary\">\r\n        <mat-icon>download</mat-icon>\r\n  </button>\r\n  <div *ngIf=\"isDownloading\" class=\"spinner\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <mat-spinner diameter=\"40\"></mat-spinner>\r\n  </div>\r\n  <div *ngIf=\"isDownloading\" class=\"download-txt\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <p style=\"text-align: center\">Please wait</p>\r\n    <p style=\"text-align: center\">Downloading image.....This can take a while</p>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MediaProcessorService} from \"../../serviceV2/media-processor.service\";\r\nimport {Device, DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {parseArguments} from \"@angular/cli/models/parser\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-startup',\r\n  templateUrl: './startup.component.html',\r\n  styleUrls: ['./startup.component.scss']\r\n})\r\nexport class StartupComponent implements OnInit {\r\n\r\n  public foo: string;\r\n  public isMobileDevice: boolean;\r\n  public isDesktopDeviceLg: boolean;\r\n  public isDesktopDeviceXl: boolean;\r\n  public isTabletDevice: boolean;\r\n  public desktop: string = Device.DESKTOP;\r\n  public tablet: Device.TABLET;\r\n  public mobile: Device.MOBILE;\r\n  constructor(public media: MediaProcessorService,\r\n              public deviceObserverService: DeviceObserverService,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        console.log(param.get('test'));\r\n        /*this.dialog.open(VerificationDialogComponent);*/\r\n      })\r\n\r\n    /*this.deviceObserverService\r\n      .getActiveDevice();*/\r\n\r\n    this.media.$mediaGetter.subscribe(value => {\r\n      console.log(value);\r\n      value.filter(value1 => {\r\n        if (value1.mqAlias === 'xs') {\r\n          this.isMobileDevice = true;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if (value1.mqAlias === 'sm') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = true;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if (value1.mqAlias === 'lg') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = true;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = false;\r\n        } else if(value1.mqAlias === 'xl') {\r\n          this.isMobileDevice = false;\r\n          this.isDesktopDeviceLg = false;\r\n          this.isTabletDevice = false;\r\n          this.isDesktopDeviceXl = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<app-search-toolbar [filterable]=\"false\"></app-search-toolbar>\r\n\r\n<!--<app-bootstrap-playground></app-bootstrap-playground>-->\r\n\r\n<main>\r\n  <section class=\"banner\" id=\"top\">\r\n    <div class=\"container-banner\">\r\n      <!--<div class=\"row\">\r\n        <img class=\"logo\" width=\"512px\" height=\"512px\" src=\"assets/Specshots-Logo.png\">\r\n      </div>-->\r\n\r\n      <div class=\"row\">\r\n        <!--foo-->\r\n        <div class=\"banner-caption\">\r\n          <h1 style=\"font-size: 58px\">SpecShots</h1>\r\n          <div class=\"line-dec\"></div>\r\n          <h3>The most Spectacle Photography for You</h3>\r\n          <p>Here is some filler text to work with Hello Test.</p>\r\n          <button routerLink=\"/tag-view\" id=\"btn\" mat-stroked-button>Explore SpecShots</button>\r\n        </div>\r\n        <div  [ngStyle]=\"\r\n        {\r\n        'position': 'absolute',\r\n        'right': isDesktopDeviceXl ? '0%' : isDesktopDeviceLg ? '5%' : '0'\r\n        }\"\r\n             class=\"logo\">\r\n          <img width=\"800px\" height=\"800px\" src=\"assets/Specshots-Logo.png\">\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <div class=\"container-1\">\r\n    <div class=\"box-1\">\r\n      <h3>High quality</h3>\r\n      <p>Internationalized and accessible components for everyone. Well tested to ensure performance and\r\n        reliability.</p>\r\n      <p>Straightforward APIs with consistent cross platform behaviour.</p>\r\n    </div>\r\n    <div class=\"box-2\">\r\n      <h3>Versatile</h3>\r\n      <p>Provide tools that help developers build their own custom components with common interaction patterns.</p>\r\n      <p>Customizable within the bounds of the Material Design specification.</p>\r\n    </div>\r\n    <div class=\"box-3\">\r\n      <h3>Box Three</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  </div>\r\n\r\n</main>\r\n\r\n<!--<footer>\r\n\r\n</footer>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ImagesByTagsAction} from \"../../shared/app-state/actions/image.action\";\r\nimport {\r\n  ImagesByTagNameQueryImpl,\r\n  ImagesByTagNameWithFilterOpt\r\n} from \"../../shared/domain/imageModel/ImagesByTagNameQuery\";\r\nimport {TagRequestService} from \"../../serviceV2/tag-request.service\";\r\nimport {TagModel} from \"../../shared/domain/tagModel/tag-model\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\n\r\n@Component({\r\n  selector: 'app-tag-view',\r\n  templateUrl: './tag-view.component.html',\r\n  styleUrls: ['./tag-view.component.scss']\r\n})\r\nexport class TagViewComponent implements OnInit {\r\n  tags: TagModel[] = [];\r\n\r\n\r\n  constructor(public tagReqService: TagRequestService,\r\n              private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.tagReqService\r\n      .getAllTags()\r\n      .subscribe(value => this.tags = value);\r\n    /*this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    );*/\r\n  }\r\n\r\n\r\n  showTagImages(tag: TagModel) {\r\n    this.store.dispatch(new ImagesByTagsAction(\r\n      new ImagesByTagNameWithFilterOpt(null, tag.tag)))\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        this.store.dispatch(new Navigate(['/image-by-tags']))\r\n      });\r\n  }\r\n}\r\n","<app-search-toolbar></app-search-toolbar>\r\n\r\n<section id=\"main-content\">\r\n <div class=\"container\">\r\n  <div class=\"description-container\">\r\n    <h1>Topics</h1>\r\n    <p>Explore the world through topics of beautiful photos free to use under the Specshots License.</p>\r\n  </div>\r\n\r\n   <div class=\"grid-row\">\r\n    <mat-card class=\"card-body\" *ngFor=\"let tag of tags\">\r\n      <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <div class=\"flex-card-content\">\r\n          <div class=\"flex-card-content-text\">\r\n            <mat-card-title>{{tag.tag}}</mat-card-title>\r\n            <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"flex-card-content-thumbnail\">\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          Exploring our complicated relationship with technology — from the phone's we are glued to morning until night,\r\n          to the prized cameras we've got displayed around the house.\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button (click)=\"showTagImages(tag)\" mat-button><strong>EXPLORE</strong></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n    <!--<mat-card class=\"card-body\">\r\n      <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <div class=\"flex-card-content\">\r\n          <div class=\"flex-card-content-text\">\r\n            <mat-card-title>Humans</mat-card-title>\r\n            <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n          </div>\r\n          <div class=\"flex-card-content-thumbnail\">\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          Humanity can be fascinating at times. The diversity in appereance and skills makes humans interesting.\r\n        </p>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button>LIKE</button>\r\n        <button mat-button>SHARE</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n\r\n      <mat-card class=\"card-body\">\r\n        <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-content>\r\n          <div class=\"flex-card-content\">\r\n            <div class=\"flex-card-content-text\">\r\n              <mat-card-title>Food</mat-card-title>\r\n              <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n            </div>\r\n            <div class=\"flex-card-content-thumbnail\">\r\n              <div mat-card-avatar class=\"example-header-image\"></div>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            From street food to homemade cooking. People love to share their favorite types of food or\r\n            want to show off their abilities in making food.\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-button>LIKE</button>\r\n          <button mat-button>SHARE</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Gadgets</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Gadgets are useful devices to make certain situations more convenient. Show off your gadgets or how\r\n           you tinker gadgets regardless of how useful they are.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Hardware</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Found some old, intersting or new hardware ? Feel free to share it here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Fashion</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n          Discover the latest fashion trends or share your own style of fashion here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Movies</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Show off your favorite movie scene via a picture or share how passionate you feel about\r\n           movies, actors or directors.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Architecture</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Explore exteriors from around the world —\r\n           from brutalist buildings to minimalist structures that will give you\r\n           a new appreciation for the art of architecture.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Buildings</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Have you seen buildings you find fasicinating ? Or are you building your own house or room ?\r\n           Feel free to share it here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Experimental</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Experimenting is trying out ideas without knowing the outcome. Trying new things out is a good thing.\r\n           Show off your most intersting, strange or even not successful attempts of your experiments here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Flowers</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Explore photography of flowers or other types of plants people found\r\n           in the world or have in their garden.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Nature</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Do you appreciate the gifts of nature? Share your discoveries of plants and other things mother nature\r\n           has to offer here.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>\r\n\r\n     <mat-card class=\"card-body\">\r\n       <img mat-card-image src=\"assets/UnsplashPlaceholder.jpg\" alt=\"Photo of a Shiba Inu\">\r\n       <mat-card-content>\r\n         <div class=\"flex-card-content\">\r\n           <div class=\"flex-card-content-text\">\r\n             <mat-card-title>Landscape</mat-card-title>\r\n             <mat-card-subtitle>By Specshots</mat-card-subtitle>\r\n           </div>\r\n           <div class=\"flex-card-content-thumbnail\">\r\n             <div mat-card-avatar class=\"example-header-image\"></div>\r\n           </div>\r\n         </div>\r\n         <p>\r\n           Do you love the beautiful scenery of landscapes ? Explore this tag to find the most fascinating of locations people\r\n           have discovered.\r\n         </p>\r\n       </mat-card-content>\r\n       <mat-card-actions>\r\n         <button mat-button>LIKE</button>\r\n         <button mat-button>SHARE</button>\r\n       </mat-card-actions>\r\n     </mat-card>-->\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../verification-dialog/verification-dialog.component\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-verification-dialog-wrapper',\r\n  templateUrl: './verification-dialog-wrapper.component.html',\r\n  styleUrls: ['./verification-dialog-wrapper.component.scss']\r\n})\r\nexport class VerificationDialogWrapperComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    console.log(\"DUDDEEE\");\r\n    this.route.paramMap\r\n      .subscribe(param => {\r\n        if (param.get('type') === 'email') {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            width: '450px',\r\n            maxWidth: '450px',\r\n            minWidth: '280px',\r\n            height: '300px',\r\n            minHeight: '300px',\r\n            maxHeight: '300px',\r\n            data: { text: 'Email was send successfully.' }\r\n          });\r\n        } else {\r\n          this.dialog.open(VerificationDialogComponent, {\r\n            width: '450px',\r\n            maxWidth: '450px',\r\n            minWidth: '280px',\r\n            height: '300px',\r\n            minHeight: '300px',\r\n            maxHeight: '300px',\r\n            data: { text: 'Account has been verified!' }\r\n          });\r\n        }\r\n\r\n        /*this.dialog.open(VerificationDialogComponent);*/\r\n      })\r\n\r\n  }\r\n}\r\n\r\n\r\nexport interface VerificationData {\r\n  text: string;\r\n}\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-verification-dialog',\r\n  templateUrl: './verification-dialog.component.html',\r\n  styleUrls: ['./verification-dialog.component.scss']\r\n})\r\nexport class VerificationDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<VerificationDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: {text: string}) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","<div class=\"verification-container\">\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"start end\" class=\"close\">\r\n      <button (click)=\"dialogRef.close()\" mat-icon-button>\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"title\">\r\n    <h2 style=\"text-align: center\">\r\n      {{data.text}} </h2>\r\n  </div>\r\n  <a routerLink=\"/welcome\" mat-button (click)=\"dialogRef.close()\" class=\"img\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <img width=\"80px\" height=\"80px\" src=\"assets/check-mark-11-512.png\">\r\n    <span>Click to continue</span>\r\n  </a>\r\n\r\n  <!--<div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"home\">\r\n    <a fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n       style=\"color: #3f51b5;\" routerLink=\"/welcome\" mat-icon-button class=\"home_button\">\r\n      <mat-icon style=\"font-size: 50px\">home</mat-icon>\r\n    </a>\r\n  </div>-->\r\n</div>\r\n","import {AfterViewInit, ComponentRef, Directive, ElementRef, HostListener, Input, OnInit} from '@angular/core';\nimport {FlexibleConnectedPositionStrategy, Overlay, OverlayPositionBuilder, OverlayRef} from \"@angular/cdk/overlay\";\nimport {ComponentPortal} from \"@angular/cdk/portal\";\nimport {VerifyTooltipComponent} from \"./verify-tooltip/verify-tooltip.component\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {RequestStatusState} from \"../shared/app-state/states/request-status.state\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {Subject} from \"rxjs\";\nimport {ShowEmailWasSentDialog} from \"../shared/util/ShowEmailWasSentDialog\";\nimport {RequestMessageAction} from \"../shared/app-state/actions/request-message.action\";\n\n@Directive({\n  selector: '[appVerifyTooltip]'\n})\nexport class VerifyTooltipDirective implements OnInit, AfterViewInit {\n\n  @Select(RequestStatusState.getStatusCode) $requestStatusCode;\n  @Input('appVerifyTooltip') text = '';\n  overlayRef: OverlayRef;\n\n  @Input() email = '';\n\n  @Input() password = '';\n\n  @Input() close: Subject<boolean> = new Subject<boolean>();\n\n  @Input() open: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private overlayPositionBuilder: OverlayPositionBuilder,\n              private elementRef: ElementRef,\n              private overlay: Overlay,\n              public store: Store) {}\n\n  ngOnInit() {\n    this.store.dispatch(new RequestMessageAction(null))\n    /*this.overlay.scrollStrategies.close().disable();\n    this.overlay.position().global().dispose();*/\n    const positionStrategy = this.overlayPositionBuilder\n      // Create position attached to the elementRef\n      .flexibleConnectedTo(this.elementRef)\n      // Describe how to connect overlay to the elementRef\n      // Means, attach overlay's center bottom point to the\n      // top center point of the elementRef.\n      .withPositions([{\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n      }]);\n\n    this.overlayRef = this.overlay.create({ positionStrategy });\n\n\n  }\n\n  ngAfterViewInit(): void {\n    this.close.subscribe(value => {\n      console.log(value);\n      if (value) {\n        console.log(\"Closed pressed\");\n        this.overlayRef.detach();\n        this.overlayRef = null;\n      }\n    })\n\n    this.$requestStatusCode.subscribe(val => {\n\n\n      if (val === 423) {\n        console.log(this.email);\n        console.log(this.password);\n        const tooltipRef: ComponentRef<VerifyTooltipComponent>\n          = this.overlayRef.attach(new ComponentPortal(VerifyTooltipComponent));\n        this.overlayRef.backdropClick().subscribe(() => console.log(\"clicked\"));\n        console.log(this.overlayRef.backdropElement);\n        tooltipRef.instance.text = this.text;\n        tooltipRef.instance.email = this.email;\n        tooltipRef.instance.password = this.password;\n        tooltipRef.instance.close.subscribe(close => {\n          if (close) {\n            console.log(\"Closed pressed\");\n            this.overlayRef.detach();\n            this.overlayRef = null;\n          }\n        })\n\n      } else {\n        console.log(\"Closed pressed\");\n        /*this.overlayRef.detach();*/\n\n      }\n    })\n  }\n\n\n\n  /*@HostListener('mouseenter')\n  show() {\n\n    const tooltipRef: ComponentRef<VerifyTooltipComponent>\n      = this.overlayRef.attach(new ComponentPortal(VerifyTooltipComponent));\n    tooltipRef.instance.text = this.text;\n  }*/\n\n  /*@HostListener('mouseout')\n  hide() {\n    this.overlayRef.detach();\n  }*/\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ShowEmailWasSentDialog} from \"../../shared/util/ShowEmailWasSentDialog\";\nimport {Store} from \"@ngxs/store\";\nimport {RequestMessageAction} from \"../../shared/app-state/actions/request-message.action\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-verify-tooltip',\n  templateUrl: './verify-tooltip.component.html',\n  styleUrls: ['./verify-tooltip.component.scss']\n})\nexport class VerifyTooltipComponent implements OnInit {\n\n  @Input() text = '';\n\n  @Input() email = '';\n\n  @Input() password = '';\n\n  @Output() close: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private authService: UserAuthenticationService,\n              private dialog: MatDialog,\n              private store: Store,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.close.emit(false)\n  }\n\n  closeToolTip() {\n    this.close.emit(true);\n    this.store\n      .dispatch(new RequestMessageAction({message: '', status: 0}));\n  }\n\n  sendEmail() {\n    console.log(this.email);\n    console.log(this.password);\n    this.authService\n      .renewToken(\n        {email: this.email, password: this.password}\n      ).subscribe(value => {\n      this.snackBar.open(\n        'Email was sent successfully',\n        'Check your inbox',\n        {\n          duration: 3000,\n          horizontalPosition: \"center\",\n          verticalPosition: \"top\"\n        }\n      );\n      /*var showEmailWasSentDialog = new ShowEmailWasSentDialog(this.dialog, value);*/\n      this.closeToolTip();\n    });\n  }\n}\n","<div class=\"arrow_box\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"tooltip-header color\">{{text}}</div>\n\n\n  <div fxLayoutAlign=\"start center\" class=\"tooltip-action\" fxLayout=\"row\">\n    <button (click)=\"sendEmail()\" mat-icon-button>\n      <mat-icon class=\"color\">mail</mat-icon>\n    </button>\n    <span class=\"action-text color\">Did not receive email</span>\n  </div>\n    <button (click)=\"closeToolTip()\" style=\"color: white\" mat-stroked-button>\n      Cancel\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByTagState} from \"../../shared/app-state/states/images-by-tag-state\";\nimport {Observable} from \"rxjs\";\nimport {ImageModelList} from \"../../shared/domain/imageModel/image-model-list\";\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\nimport {ImageModel} from \"../../shared/domain/imageModel/image.model\";\nimport {DisplayImagesAction} from \"../../shared/app-state/actions/display-images.action\";\nimport {environment} from \"../../../environments/environment\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './image-by-tag.component.html',\n  styleUrls: ['./image-by-tag.component.scss']\n})\nexport class ImageByTagComponent implements OnInit {\n  foo: string = \"IHUTiYJ6Wdk.jpg\";\n  @Select(ImagesByTagState.getData) $imagesByTags: Observable<ImageModel[]>;\n  constructor(private store: Store, private service: ImageRequestService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-search-toolbar [filterable]=\"true\"></app-search-toolbar>\r\n\r\n\r\n\r\n\r\n<div class=\"image-content\">\r\n  <app-image-content [isProfile]=\"false\" [data]=\"$imagesByTags\"></app-image-content>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {BehaviorSubject, EMPTY, Observable, of, Subject, throwError} from 'rxjs';\nimport {Select, Selector, Store} from \"@ngxs/store\";\nimport {LoginStateModel} from \"../shared/app-state/states/login.state.model\";\nimport {Navigate} from \"@ngxs/router-plugin\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\nimport {async} from \"rxjs/internal/scheduler/async\";\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\nimport {catchError, map, retry, switchMap} from \"rxjs/operators\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthSecurityGuard implements CanActivate {\n  $test = new Subject<boolean>();\n  @Select(LoginStateModel.isLoggedIn) $isLoggedIn;\n\n  constructor(private store: Store,\n              private router: Router,\n              private authService: UserAuthenticationService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> |\n    Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return this.$isLoggedIn;\n\n    let isLoggedIn: boolean =\n      this.store.selectSnapshot(LoginStateModel.isLoggedIn);\n    if (!isLoggedIn) {\n      console.log(\"could not login\");\n      this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n        .pipe(map(loggedUser => {\n          if (loggedUser) return loggedUser.Authentication.status;\n        })).subscribe(status => {\n          if (!status) this.store.dispatch(new Navigate(['login']))\n        this.$test.next(status);\n      })\n    } else return isLoggedIn;\n    return this.$test;\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .pipe(\n    //     map(value => {\n    //       return !!value.Authentication.status;\n    //     })\n    //   ).subscribe(value => this.$diffRatio.next(value),\n    //   error => {\n    //     console.log(error)\n    //   });\n    // return this.$diffRatio;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {EMPTY, Observable, throwError} from \"rxjs\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {ResponseBody} from \"../shared/domain/responseBody\";\r\nimport {UserAuthenticationService} from \"../serviceV2/user-authentication.service\";\r\nimport {RequestMessageAction} from \"../shared/app-state/actions/request-message.action\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../public/renew-expired-account-token/renew-expired-account-token.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CookieAuthInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private store: Store, private router: Router,\r\n              private deviceService: DeviceDetectorService,\r\n              private dialog: MatDialog) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log(\"HUHOOHOHOH\");\r\n\r\n    console.log(req.headers.get(\"tokenRefresh\"));\r\n    const isMobile = this.deviceService.isMobile() || this.deviceService.isTablet() ? 1 : 0;\r\n    console.log(isMobile);\r\n    const clonedReq = req.clone({withCredentials: true,\r\n      headers: req.headers.set('isMobile', isMobile + \"\"  )});\r\n    return next.handle(clonedReq).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.error instanceof Error) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          console.log('An error occurred:', error.error.message);\r\n        } else {\r\n          // this.store.dispatch(new Navigate(['/login']))\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          console.log(error);\r\n          console.log(error.message);\r\n          console.log();\r\n          if (error.url === 'http://localhost:8880/image-app/images/insert/') {\r\n            console.log(error.error);\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/users/signUp') {\r\n            console.log(error.error);\r\n            return throwError(error);\r\n          } else if (error.url === UserAuthenticationService.USER_LOGIN ||\r\n            error.url === UserAuthenticationService.GOOGLE_LOGIN) {\r\n            this.store.dispatch(new RequestMessageAction({message: error.error, status: error.status}));\r\n          } else if (error.url.indexOf(UserAuthenticationService.USER_DETAILS) !== -1) {\r\n            this.store.dispatch(new RequestMessageAction({ message: error.error }))\r\n            /*this.router.navigate(['not-found']);*/\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/library/download/cropped/file/') {\r\n            this.store.dispatch(new RequestMessageAction({message: 'Error while downloading.'}));\r\n            return throwError(error);\r\n          } else if (error.url === 'http://localhost:8880/image-app/verify/show-validated-token/') {\r\n            console.log(\"OIDA???\");\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true}, hasBackdrop: true\r\n            })\r\n            this.router.navigate(['/welcome'])\r\n          } else if (error.url === 'http://localhost:8880/image-app/auth/renew/accountToken') {\r\n            console.log('ASDASKASKAS');\r\n            console.log(error.error.message);\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n          } else if (error.url === 'http://localhost:8880/image-app/reset/password/from-redirect/') {\r\n            this.store\r\n              .dispatch(new RequestMessageAction({message: error.error.message, status: error.status}));\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n            return throwError(error.error);\r\n          } else if(error.url === 'http://localhost:8880/image-app/reset/password/validate-tokenId/') {\r\n            this.router.navigate(['/welcome']);\r\n            console.log(\"token id error\");\r\n            this.store\r\n              .dispatch(new RequestMessageAction({message: error.error.message, status: error.status}));\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true, message: error.error.message}\r\n            })\r\n            return throwError(error.error);\r\n          }\r\n          console.log(error.statusText);\r\n          if (error.error !== null && error.error.message !== null) {\r\n\r\n            console.log(`Backend returned code ${error.status}, body was: ${error.error.message}`);\r\n          }\r\n        }\r\n\r\n        // If you want to return a new response:\r\n        //return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\r\n\r\n        // If you want to return the error on the upper level:\r\n        //return throwError(error);\r\n\r\n        // or just return nothing:\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {GetBase64ForDownloadCropperState, CropAndDownloadStateModel} from \"../shared/app-state/states/get-base64-for-downloadCropper.state\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {ImageRequestService} from \"./image-request.service\";\nimport {CropAndDownload, GetImageByImageId} from \"../shared/app-state/actions/image.action\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CropAndDownloadResolverService implements Resolve<CropAndDownloadStateModel> {\n\n  constructor(private store: Store,\n              private service: ImageRequestService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CropAndDownloadStateModel> | Promise<CropAndDownloadStateModel> | CropAndDownloadStateModel {\n    this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n    return this.service\n      .getImageBytes(route.params.imageId)\n      .pipe(map(byteArray => {\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\n        let reader = new FileReader();\n        reader.onload = (evt: any) => {\n           this.store\n            .dispatch(new CropAndDownload(evt.target.result))\n        };\n        // this.dialog.open(DownloadCropperComponent,{\n        //   data: { img: evt.target.result,\n        //     width: imageDetail.width,\n        //     height: imageDetail.height, viewName: 'Download' }\n        // })\n        reader.readAsDataURL(blob);\n        return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel)\n      }))\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteImageService {\r\n  private static readonly DELETE_IMAGE_URL = environment.apiUrl + \"image/delete\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public deleteImage(image: ImageModel): Observable<any> {\r\n    return this.http.post(\r\n      DeleteImageService.DELETE_IMAGE_URL,\r\n      image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {MediaChange, MediaObserver} from \"@angular/flex-layout\";\nimport {flatMap, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\n\n\nexport enum Device {\n  MOBILE = 'xs',\n  DESKTOP = 'lg',\n  DESKTOP_XL = 'xl',\n  TABLET = 'sm',\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceObserverService {\n  constructor(private media: MediaObserver) { }\n\n  public getActiveDevice(): Observable<string> {\n    return this.media.asObservable()\n      .pipe(map(media => {\n        return media[0].mqAlias;\n    }));\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngxs/store\";\nimport {GetImageByIdState} from \"../shared/app-state/states/get-image-by-id.state\";\nimport {GetImageByImageId, GetRelatedImagesByTagIDs} from \"../shared/app-state/actions/image.action\";\nimport {switchMap, tap} from \"rxjs/operators\";\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageDetailsResolverService implements Resolve<ImageModel> {\n\n  constructor(private store: Store) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ImageModel> | ImageModel {\n    return this.store\n      .dispatch(new GetImageByImageId(route.params.imageId))\n      .pipe(switchMap(state =>\n          this.store.dispatch(new GetRelatedImagesByTagIDs(state.modelDetails.tags)))\n      )\n      .pipe(tap(val => {\n        this.store.dispatch(new AuthenticationActions.IsLoggedIn());\n        console.log(\"ImageDetailResolver was called with value : \" + val);\n      }));\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {DownloadImageByIndividualResolution, ImageModel} from \"../shared/domain/imageModel/image.model\";\r\nimport {finalize, map, tap} from \"rxjs/operators\";\r\nimport {ImageFileDetails, ImageDownloadResponse} from \"../shared/domain/imageModel/image-file-details\";\r\nimport {CroppedDownloadRequest} from \"../shared/domain/http/req/CroppedDownloadRequest\";\r\nimport {conditionallyCreateMapObjectLiteral} from \"@angular/compiler/src/render3/view/util\";\r\nimport {BlobToBase64Pipe} from \"../shared/util/blob-to-base64-pipe\";\r\nimport {GetImageByIdState} from \"../shared/app-state/states/get-image-by-id.state\";\r\nimport {Store} from \"@ngxs/store\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageDownloadService {\r\n  constructor(private http: HttpClient,\r\n              private base64Pipe: BlobToBase64Pipe, private store: Store) {\r\n  }\r\n\r\n  public static readonly DOWNLOAD_BY_API_RESOLUTION_URL = environment.apiUrl + \"library/download/file/\";\r\n  public static readonly DOWNLOAD_BY_CROPPED_RESOLUTION_URL = environment.apiUrl + \"library/download/cropped/file/\";\r\n  public static readonly DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL = environment.apiUrl + \"library/download/resized/file\";\r\n\r\n\r\n  public downloadImage(imageId: string, imageFileDetail: ImageFileDetails): Observable<ImageFileDetails> {\r\n    return this.http\r\n      .post<ImageFileDetails>(\r\n        ImageDownloadService.DOWNLOAD_BY_API_RESOLUTION_URL + imageId,\r\n        imageFileDetail);\r\n  }\r\n\r\n\r\n  public downloadIndividualImage(croppedDetails: CroppedDownloadRequest |\r\n    DownloadImageByIndividualResolution, wasCropped: boolean): Observable<string> {\r\n    const url = wasCropped ? ImageDownloadService.DOWNLOAD_BY_CROPPED_RESOLUTION_URL :\r\n      ImageDownloadService.DOWNLOAD_BY_INDIVIDUAL_RESOLUTION_URL;\r\n    return this.base64Pipe.getBase64(this.http\r\n       .post(\r\n         url,\r\n         croppedDetails, { responseType: 'arraybuffer' })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {BehaviorSubject, EMPTY, Observable, Subject} from \"rxjs\";\nimport {GetImagesByTagNameRequest, ImageModel, SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\nimport {ResponseBody} from \"../shared/domain/responseBody\";\nimport {environment} from \"../../environments/environment\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ResolutionsResponse} from \"../shared/app-state/states/prepare-cropped-for-download.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRequestService {\n  // 178.112.217.30\n  public $bSubject = new BehaviorSubject<ImageModel[]>(null);\n  // private readonly SEARCH_URL: string = \"http://localhost:8880/image-app/images/search/by/tag/\";\n  private readonly SEARCH_URL: string = environment.apiUrl + \"library/search-by/tag/\";\n\n  public static readonly ALL_IMAGES_BY_USERID = environment.apiUrl + \"library/search-by/user/\";\n  public static readonly ALL_IMAGES_BY_IMG_ID = environment.apiUrl + \"library/search-by/image/\";\n  public static readonly RELATED_IMAGES_BY_TAG_IDS = environment.apiUrl + \"library/search-by/tags/\";\n  public static readonly GET_IMAGE_BYTES_BY_ID_URL = environment.apiUrl + \"library/search-by/image/raw/\";\n  public static readonly GET_API_RESOLTIONS = environment.apiUrl + \"api/resolutions/\";\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\n  private readonly UPLOAD_TAG = environment.apiUrl + \"image/update/tags/\";\n\n  constructor(private http: HttpClient,\n              private sanitizer: DomSanitizer) {\n  }\n\n\n  public getRelatedImagesByTagList(tags: TagModel[]): Observable<ImageModel[]> {\n    console.log(tags)\n    return this.http\n      .post<ImageModel[]>(\n        ImageRequestService.RELATED_IMAGES_BY_TAG_IDS,\n        {tags: tags},\n        {responseType: \"json\"});\n  }\n\n\n  public setTagToImage(data: SetImageWithTags): Observable<any> {\n    console.log(data)\n    return this.http.post(\n      this.UPLOAD_TAG,\n      data,\n      {observe: 'response'});\n  }\n\n\n  public getResolutions(): Observable<ResolutionsResponse> {\n    return this.http\n      .get<ResolutionsResponse>(\n        ImageRequestService.GET_API_RESOLTIONS,\n        {responseType: \"json\"} );\n  }\n\n  public getImageBytes(imgId: string) {\n    return this.http\n      .get(\n        ImageRequestService.GET_IMAGE_BYTES_BY_ID_URL + imgId,\n        {responseType: \"arraybuffer\"}\n        );\n  }\n\n\n\n\n  public getImagesByImgId(imgId: string): Observable<ImageModel> {\n    return this.http.get<ImageModel>(\n      ImageRequestService.ALL_IMAGES_BY_IMG_ID + imgId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n\n  public getImagesByUserId(userId: string): Observable<ImageModel[]> {\n    return this.http.get<ImageModel[]>(\n      ImageRequestService.ALL_IMAGES_BY_USERID + userId)\n      .pipe(\n        tap(x => console.log(x))\n      );\n  }\n\n  public getImagesByTag(req: GetImagesByTagNameRequest, page: number): Observable<ImageModel[]> {\n    return this.http.post<ImageModel[]>(\n      this.SEARCH_URL,\n      req, { observe: \"response\" })\n      .pipe(\n        map(resp => {\n          console.log(resp.status)\n          return resp.body;\n        }),\n        catchError((err) => {\n          console.log(err.error.message);\n          return EMPTY;\n        }));\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {UploadImageModel} from \"../shared/domain/imageModel/upload-image.model\";\r\nimport {SetImageWithTags} from \"../shared/domain/imageModel/image.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageUploadService {\r\n  private readonly UPLOAD_IMAGE = environment.apiUrl + \"images/insert/\";\r\n  private readonly VALIDATE_IMAGE = environment.apiUrl + \"library/validate-image/\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public addToUserLibrary(uploadModel: UploadImageModel): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", uploadModel.orgFile);\r\n    request.append(\"userId\", uploadModel.userId);\r\n    request.append(\"urlReference\", uploadModel.urlReference);\r\n    request.append(\"isPublic\", uploadModel.isPublic);\r\n    request.append('galleryFile', uploadModel.galleryFile);\r\n    request.append(\"downloadFile\", uploadModel.downloadFile);\r\n    console.log(uploadModel.urlReference);\r\n    return this.http.post(\r\n      this.UPLOAD_IMAGE, request,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public validateImage(data: File): Observable<any> {\r\n    let request: FormData = new FormData();\r\n    request.append(\"file\", data);\r\n    return this.http.post(\r\n      this.VALIDATE_IMAGE,\r\n      request,\r\n      {responseType: 'json'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {MediaChange, MediaObserver} from '@angular/flex-layout';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaProcessorService {\n  public $mediaGetter: Observable<MediaChange[]>;\n  constructor(private media: MediaObserver) {\n    this.$mediaGetter = media.asObservable();\n    console.log(this.media);\n  }\n}\n","import {State} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../shared/domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {SearchRequestService} from \"./search.request.service\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchByUsersService {\r\n  private readonly SEARCH_URL = environment.apiUrl + \"query/searchUsers/\";\r\n  private readonly SEARCH_BY_U_NAME_URL = environment.apiUrl + \"query/searchByUserName/\";\r\n  constructor(private http: HttpClient,\r\n              private searchReqService: SearchRequestService<BaseUserDetails>) { }\r\n\r\n  public searchByEmail(searchTerm$: Observable<string>): Observable<BaseUserDetails[]> {\r\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL);\r\n  }\r\n\r\n  public searchByUserName(searchTerm$: Observable<string>): Observable<BaseUserDetails[]> {\r\n    return this.searchReqService.search(searchTerm$, this.SEARCH_BY_U_NAME_URL);\r\n  }\r\n}\r\n","import {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\r\nimport {distinctUntilChanged, switchMap, throttleTime} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchRequestService<T> {\r\n  private readonly SEARCH_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public search(searchTerm$: Observable<string>, url: string): Observable<T[]> {\r\n    return searchTerm$.pipe(\r\n      distinctUntilChanged(),\r\n      throttleTime(2000),\r\n      switchMap(searchTerm => this.getSearchResult(searchTerm, url))\r\n    );\r\n  }\r\n\r\n  private getSearchResult(term: string, url: string): Observable<T[]> {\r\n    return SearchRequestService.validateTerm(term) ?\r\n      this.sendSearchRequest(term, url) :\r\n      new BehaviorSubject([]);\r\n  }\r\n\r\n  private sendSearchRequest(terms: string, url: string): Observable<T[]> {\r\n    return this.http.get<T[]>(url + terms);\r\n  }\r\n\r\n  private static validateTerm(term: string): boolean {\r\n    return term.length > 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\"\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\nimport {DistinctSubscriber} from \"rxjs/internal/operators/distinct\";\nimport {TagModel} from \"../shared/domain/tagModel/tag-model\";\nimport {SearchRequestService} from \"./search.request.service\";\nimport {environment} from \"../../environments/environment\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagRequestService {\n  private readonly secr = \"user/HJeDHE2XBFwgJ81pzuLNj3MshJqXbU/images/all\";\n  constructor(private http: HttpClient,\n              private searchReqService: SearchRequestService<TagModel>) { }\n  //178.112.217.30\n  private readonly SEARCH_URL: string = environment.apiUrl + \"query/searchByTag/\";\n  private readonly GET_TAGS: string = environment.apiUrl + 'tags/';\n  private static readonly REQUEST_DELAY: number = 2000;\n\n  public searchByTagName(searchTerm$: Observable<string>): Observable<TagModel[]> {\n    return this.searchReqService.search(searchTerm$, this.SEARCH_URL)\n  }\n\n  public getAllTags(): Observable<TagModel[]> {\n    return this.http.get<TagModel[]>(this.GET_TAGS);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ImageModel} from \"../shared/domain/imageModel/image.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateImageDetailsService {\n  private readonly UPDATE_IMAGE_DETAILS_URL = environment.apiUrl + \"image/update/details\";\n  constructor(private http: HttpClient) { }\n\n  public changeImageDetails(imageToUpdate: ImageModel): Observable<any> {\n    console.log(imageToUpdate);\n    return this.http.post(\n      this.UPDATE_IMAGE_DETAILS_URL,\n      imageToUpdate,\n      {observe: 'response'});\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {BaseUserDetails} from \"../shared/domain/userModel/user-details.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdateUserService {\r\n  private readonly UPLOAD_PROFILE_IMAGE = environment.apiUrl + \"user/set/profile-image/\";\r\n  private readonly ADD_USER_LIKE = environment.apiUrl + \"user/set/likes/\";\r\n  private readonly CHANGE_USER_EMAIL = environment.apiUrl + \"user/set/email/\";\r\n  private readonly CHANGE_USER_PASSWORD = environment.apiUrl + \"user/set/password/\";\r\n  private readonly CHANGE_USER_PASSWORD_FROM_TOKEN = environment.apiUrl + \"reset/password/from-redirect/\";\r\n  private readonly DELETE_USER_ACCOUNT = environment.apiUrl + \"user/set/deleteAccount/\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  public changeUserPasswordByToken(userId: string, password: string, tokenId: string ): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_PASSWORD_FROM_TOKEN,\r\n      {\r\n        userId: userId,\r\n        password: password,\r\n        tokenId: tokenId\r\n      },\r\n      {observe: 'response'});\r\n  }\r\n\r\n\r\n  public changeUserPassword(userId: string, changePassword: { oldPassword: string, newPassword: string } ): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_PASSWORD,\r\n      {\r\n        userId,\r\n        oldPassword: changePassword.oldPassword,\r\n        newPassword: changePassword.newPassword\r\n      },\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public deleteUserAccount( changePasswordRequest: { userId: string, password: string }  ): Observable<any> {\r\n    return this.http.post(\r\n      this.DELETE_USER_ACCOUNT,\r\n      changePasswordRequest,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public setUserProfile(userId: string, image: FormData): Observable<any> {\r\n    return this.http.post(\r\n      this.UPLOAD_PROFILE_IMAGE + userId, image,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public addUserLike(imageId: string, userId: string): Observable<any> {\r\n    return this.http.post(\r\n      this.ADD_USER_LIKE + imageId + \"/\" + userId,\r\n      {observe: 'response'});\r\n  }\r\n\r\n  public changeUserEmail(user: BaseUserDetails): Observable<any> {\r\n    return this.http.post(\r\n      this.CHANGE_USER_EMAIL,\r\n      {\r\n        userId: user.userId,\r\n        email: user.email,\r\n        password: user.password,\r\n        username: user.username,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        profileImgPath: user.profileImgPath\r\n      },\r\n      {observe: 'response', responseType: \"json\"});\r\n  }\r\n}\r\n","import {Injectable, OnInit} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BaseUserDetails, UserDetailsImpl, UserRegistrationModel} from \"../shared/domain/userModel/user-details.model\";\r\nimport {BehaviorSubject, Observable, throwError} from \"rxjs\";\r\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\r\nimport {IUserLoginModel, LoggedInUserModel, UserLoginModel} from \"../shared/domain/userModel/UserLoginModel\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {SignupState} from \"../shared/app-state/states/signup.state\";\r\nimport {AuthenticationActions} from \"../shared/app-state/actions/authentication-action\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {ValidateTokenRequestUrl} from \"../shared/domain/Validate-Token-Request-Url\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAuthenticationService {\r\n  private readonly USER_SIGNUP = \"http://localhost:8880/image-app/users/signUp\";\r\n  public static readonly USER_LOGIN = environment.apiUrl + \"users/login\";\r\n  private readonly USER_LOGOUT = environment.apiUrl + \"logout\";\r\n  private readonly AUTH_STATUS = environment.apiUrl + \"auth/identify/user\";\r\n  public static readonly USER_DETAILS = environment.apiUrl + \"user/details/\";\r\n  public static readonly GOOGLE_LOGIN = environment.apiUrl + \"users/oauth/login\";\r\n  public static readonly RENEW_TOKEN = environment.apiUrl + \"auth/renew/accountToken\";\r\n  public static readonly VERIFY_TOKEN_REQUEST = environment.apiUrl + 'verify/show-validated-token/';\r\n  public static readonly RESET_PASSWORD = environment.apiUrl + 'reset/password/request-token';\r\n  public static readonly RESET_PASSWORD_VALIDATE_TOKEN_ID = environment.apiUrl + 'reset/password/validate-tokenId/';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n\r\n\r\n  public validatePasswordTokenId(req: { tokenId: string }): Observable<{tokenId: string; userId: string}> {\r\n    return this.http.post<{tokenId: string; userId: string}>\r\n    (UserAuthenticationService.RESET_PASSWORD_VALIDATE_TOKEN_ID,\r\n      {tokenId: req.tokenId},\r\n      {observe: 'body'});\r\n  }\r\n\r\n  public requestResetPasswordToken(req: { email: string }): Observable<any> {\r\n    return this.http.post<any>\r\n    (UserAuthenticationService.RESET_PASSWORD,\r\n      req,\r\n      {observe: 'body'});\r\n  }\r\n\r\n  public validateRequestTokenUrl(req: ValidateTokenRequestUrl): Observable<{ status: boolean; alreadyProcessed: boolean}> {\r\n    return this.http.post<{ status: boolean; alreadyProcessed: boolean}>\r\n    (UserAuthenticationService.VERIFY_TOKEN_REQUEST,\r\n      req,\r\n      {responseType: \"json\"});\r\n  }\r\n\r\n\r\n  public renewToken(userLoginModel: IUserLoginModel): Observable<any> {\r\n    console.log('who pressed me ?');\r\n    console.log(userLoginModel);\r\n    return this.http.post<{email: string, password: string}>(UserAuthenticationService.RENEW_TOKEN,\r\n      userLoginModel,\r\n      {observe: 'response', responseType: 'json'});\r\n  }\r\n\r\n  public getUserDetails(userId: string): Observable<BaseUserDetails> {\r\n    return this.http.get<BaseUserDetails>\r\n    (UserAuthenticationService.USER_DETAILS + userId, {responseType: \"json\"});\r\n  }\r\n\r\n\r\n  public createNewUser(userSignupModel: UserRegistrationModel): Observable<LoggedInUserModel> {\r\n    return this.http\r\n      .post<LoggedInUserModel>(this.USER_SIGNUP, userSignupModel, {observe: \"body\" , responseType: \"json\"});\r\n  }\r\n\r\n  public login(userLoginModel: IUserLoginModel, loginMethod: string): Observable<any> {\r\n    console.log('who pressed me ?');\r\n    const URL = loginMethod === \"GOOGLE\" ? UserAuthenticationService.GOOGLE_LOGIN : UserAuthenticationService.USER_LOGIN;\r\n    console.log(userLoginModel);\r\n    return this.http.post<any>(URL, userLoginModel, {observe: 'response'});\r\n  }\r\n\r\n  public isLoggedIn(): Observable<any> {\r\n    return this.http.get(this.AUTH_STATUS, {responseType: \"json\", observe: 'response'})\r\n      .pipe(\r\n        map(value => {\r\n          console.log(value)\r\n          return value;\r\n        })\r\n      );\r\n  }\r\n\r\n  public logout(): Observable<any> {\r\n    return this.http.post(this.USER_LOGOUT, {responseType: \"json\"});\r\n  }\r\n\r\n}\r\n","import {Observable} from \"rxjs\";\r\n\r\nexport class GetZipCodesAndCitiesByRegion {\r\n  static readonly type = '[AddressValidation] Get Zipcodes and Cities'\r\n  constructor(public zipcode: Observable<string>,\r\n              public region: string) { }\r\n}\r\n\r\nexport class GetCountriesAction {\r\n  static readonly type = '[AddressValidation] Get Countries'\r\n  constructor() { }\r\n}\r\n\r\nexport class GetRegionsAction {\r\n  static readonly type = '[AddressValidation] Get Regions'\r\n  constructor(public countryName: string) { }\r\n}\r\n\r\n\r\n","import {IUserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\n\r\nexport namespace AuthenticationActions {\r\n  export class LoginAction {\r\n    static readonly type = '[Authentication] Login';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class LogoutAction {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor(public userLoginModel: IUserLoginModel) { }\r\n  }\r\n\r\n  export class SignUpAction {\r\n    static readonly type = '[Authentication] Signup';\r\n    constructor(public userRegistration: UserRegistrationModel) { }\r\n  }\r\n\r\n  export class IsLoggedIn {\r\n    static readonly type = '[Authentication] Is logged in';\r\n    constructor() { }\r\n  }\r\n\r\n  export class Logout {\r\n    static readonly type = '[Authentication] Logout';\r\n    constructor() { }\r\n  }\r\n\r\n  export class LoggedUserDetails {\r\n    static readonly type = '[Authentication] Logged userDetails';\r\n    constructor(public userId: string) { }\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {ImagesByTagName, ImagesByTagNameQueryImpl} from \"../../domain/imageModel/ImagesByTagNameQuery\";\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\nimport {ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\n\nexport class ImagesByUserIDAction {\n  static readonly type = '[ImageAPI] Images by userId';\n  constructor(public userId: string) { }\n}\n\nexport class ImagesByTagsAction {\n  static readonly type = '[ImageAPI] ImagesByTagsAction';\n  constructor(public imagesByTag: ImagesByTagName) { }\n}\n\nexport class ImagesNextPageAction {\n  static readonly type = '[ImageAPI] NextImagePage';\n  constructor(public imageResponseModel: ImageModel[]) { }\n}\n\nexport class UploadImage {\n  static readonly type = '[ImageAPI] Upload image';\n  constructor(public uploadModel: UploadImageModel) { }\n}\n\nexport class FilterByDate {\n  static readonly type = '[ImageAPI] Filter image'\n  constructor(public limit: number) { }\n}\n\nexport class DeleteImage {\n  static readonly type = '[ImageAPI] Delete image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class SelectImage {\n  static readonly type = '[ImageAPI] Select image';\n  constructor(public image: ImageModel) { }\n}\n\nexport class GetDownloadDetails {\n  static readonly type = '[ImageAPI] Get download details';\n  constructor(public imageId: string, public imageFileDetail: ImageFileDetails) { }\n}\n\nexport class GetImageByImageId {\n  static readonly type = '[ImageAPI] Get image by imageId';\n  constructor(public imageId: string) { }\n}\n\nexport class GetRelatedImagesByTagIDs {\n  static readonly type = '[ImageAPI] Related images';\n  constructor(public tagIds: TagModel[]) { }\n}\n\n\nexport class GetImageAsByse64 {\n  static readonly type = '[ImageAPI] Get image bytes';\n  constructor(public imageId: string) { }\n}\n\nexport class CropAndDownload {\n  static readonly type = '[ImageAPI] Crop and download';\n  constructor(public base64: string) { }\n}\n\nexport class CropDownloadViewImage {\n  static readonly type = '[ImageAPI] Crop download view image';\n  constructor(public data: string) { }\n}\n\nexport class CropGalleryViewImage {\n  static readonly type = '[ImageAPI] Crop gallery view image';\n  constructor(public data: string) { }\n}\n\nexport class AsignBase64ToOriginalImage {\n  static readonly type = '[ImageAPI] Crop gallery temp view image';\n  constructor(public data: string) { }\n}\n\nexport class SetCroppedOffsetValues {\n  static readonly type = '[ImageAPI] Set cropped image values';\n  constructor(public imgId: string,\n              public offsetX: number, public offsetY: number,\n              public subImageWidth: number,public subImageHeight: number) { }\n}\n\nexport class AssignCropperPosToImageUpload {\n  static readonly type = '[ImageAPI] Set cropped image values';\n  constructor(public imgId: string,\n              public offsetX: number, public offsetY: number,\n              public subImageWidth: number,public subImageHeight: number) { }\n}\n\n\n","import {RequestStatus} from \"../../domain/request-status\";\r\n\r\nexport class PassDataToDialogAction {\r\n  static readonly type = '[Dialog] Pass data to dialog';\r\n  constructor(public data: DialogCropperData) {}\r\n}\r\n\r\nexport interface DialogCropperData {\r\n  imgData: any;\r\n  resizeWidth: number;\r\n  resizeHeight: number;\r\n  viewName: string;\r\n  imgDimensions: { originalWidth: number, originalHeight: number };\r\n}\r\n","import {Observable} from \"rxjs\";\n\nexport class QueryTagAction {\n  static readonly type = '[Tag] Query tags';\n  constructor(public searchTerm: Observable<string>) {}\n}\n","import {Observable} from \"rxjs\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\n\r\nexport class RequestMessageAction {\r\n  static readonly type = '[Request] Check request status';\r\n  constructor(public requestStatus: RequestStatus) {}\r\n}\r\n\r\n","export namespace UpdateUserProfileActions {\r\n  export class UploadUserProfileImg {\r\n    static readonly type = '[Update profile] Set user profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n}\r\n","import {UserRegistrationModel} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\nexport namespace UserDetailsActions {\r\n  export class UploadUserProfile {\r\n    static readonly type = '[User Action] Upload user-profile';\r\n    constructor(public userId: string, public file: FormData) { }\r\n  }\r\n\r\n  export class GetUserDetails {\r\n    static readonly type = '[User Action] Get user details';\r\n    constructor(public userId: string) { }\r\n  }\r\n\r\n  export class ValidResetPasswordTokenResponse {\r\n    static readonly type = '[User Action] Reset Password';\r\n    constructor(public tokenId: string) {}\r\n  }\r\n\r\n\r\n  export class SearchUsers {\r\n    static readonly type = '[User Action] Get user profiles';\r\n    constructor(public searchTerm: Observable<string>) {}\r\n  }\r\n}\r\n\r\nexport interface ValidResetPasswordToken {\r\n  tokenId: string;\r\n  userId: string;\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'UserDetails',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class UserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static profileImgPath(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static firstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static getState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserImages(state: BaseUserDetails): ImageModel[] {\r\n    return state.images;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserLikes(state: BaseUserDetails): ImageModel[] {\r\n    return state.likes;\r\n  }\r\n\r\n  @Action(UserDetailsActions.GetUserDetails)\r\n  userDetails(ctx: StateContext<BaseUserDetails>,\r\n              action: UserDetailsActions.GetUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log(response)\r\n          const state = ctx.getState();\r\n          console.log(response)\r\n          console.log(response.images);\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username,\r\n            likes: response.likes,\r\n            images: response.images\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserDetailsActions, ValidResetPasswordToken} from \"../actions/user-details.action\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport ValidResetPasswordTokenResponse = UserDetailsActions.ValidResetPasswordTokenResponse;\r\nimport {Observable, of} from \"rxjs\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\n\r\n@State<ValidResetPasswordToken>({\r\n  name: 'ResetPassword',\r\n  defaults: {\r\n    tokenId: '',\r\n    userId: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class ValidPasswordTokenState {\r\n  constructor(private authService: UserAuthenticationService) { }\r\n\r\n  @Selector()\r\n  static getTokenId(state: ValidResetPasswordToken): string {\r\n    return state.tokenId;\r\n  }\r\n\r\n  @Selector()\r\n  static getUserId(state: ValidResetPasswordToken): string {\r\n    return state.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static getRequest(state: ValidResetPasswordToken): ValidResetPasswordToken {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(ValidResetPasswordTokenResponse)\r\n  setTokenState(ctx: StateContext<ValidResetPasswordToken>, action: ValidResetPasswordTokenResponse): Observable<ValidResetPasswordToken> {\r\n    return this.authService\r\n      .validatePasswordTokenId({tokenId: action.tokenId})\r\n      .pipe(switchMap(response => {\r\n        ctx.patchState({userId: response.userId, tokenId: response.tokenId});\r\n        return of(ctx.getState());\r\n      }));\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {Country, Region, ZipCodeAndCity} from \"../../domain/address-model/addres.view.model\";\r\nimport {AddCommand} from \"@angular/cli/commands/add-impl\";\r\nimport {AddressValidationService} from \"../../service/address-validation.service\";\r\nimport {ImagesByTagsAction} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {GetZipCodesAndCitiesByRegion, GetCountriesAction, GetRegionsAction} from \"../actions/address-validation-action\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<AddressViewListState>({\r\n  name: 'AddressValidation'\r\n})\r\n@Injectable()\r\nexport class AddressValidationState {\r\n  constructor(private addressService: AddressValidationService) { }\r\n\r\n  @Selector()\r\n  static zipCodesAndCities(state: AddressViewListState): ZipCodeAndCity[] {\r\n    return state.zipCodesAndCity;\r\n  }\r\n\r\n  @Selector()\r\n  static regions(state: AddressViewListState): Region[] {\r\n    return state.regions;\r\n  }\r\n\r\n  @Selector()\r\n  static countries(state: AddressViewListState): Country[] {\r\n    return state.name;\r\n  }\r\n\r\n  @Action(GetCountriesAction)\r\n  getCountries(ctx: StateContext<AddressViewListState>,\r\n               action: GetCountriesAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getCountries()\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              name: res\r\n            }\r\n          )\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  @Action(GetRegionsAction)\r\n  getRegionsByCountry(ctx: StateContext<AddressViewListState>,\r\n                      action: GetRegionsAction) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getRegionsByCountry(action.countryName)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(\"Du Hund du\")\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              regions: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(GetZipCodesAndCitiesByRegion)\r\n  getZipCodesAndCitiesByRegion(ctx: StateContext<AddressViewListState>,\r\n                      action: GetZipCodesAndCitiesByRegion) {\r\n    const state = ctx.getState();\r\n    return this.addressService\r\n      .getZipCodesAndCitiesByRegion2(action.zipcode, action.region)\r\n      .pipe(\r\n        tap(res => {\r\n          console.log(res)\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              zipCodesAndCity: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {CropDownloadViewImage, CropGalleryViewImage, AsignBase64ToOriginalImage} from \"../actions/image.action\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\n\r\n@State<CropImageModel>({\r\n  name: 'cropImage',\r\n  defaults: {\r\n    data: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class CropImageState {\r\n  constructor() {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getCroppedDownloadImage(state: CropImageModel): string {\r\n    return state.downloadViewFile;\r\n  }\r\n\r\n  @Selector()\r\n  static getTemp(state: CropImageModel): string {\r\n    return state.tempFile;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getData(state: CropImageModel): string {\r\n    return state.data;\r\n  }\r\n\r\n  @Selector()\r\n  static getGalleryFile(state: CropImageModel): string {\r\n    return state.galleryFile;\r\n  }\r\n\r\n  @Action(AsignBase64ToOriginalImage)\r\n  cropTempImage(ctx: StateContext<CropImageModel>, action: CropGalleryViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      data: action.data\r\n    })\r\n  }\r\n\r\n\r\n  @Action(CropGalleryViewImage)\r\n  cropImage(ctx: StateContext<CropImageModel>, action: CropGalleryViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      galleryFile: action.data\r\n    })\r\n  }\r\n\r\n  @Action(CropDownloadViewImage)\r\n  cropDownloadViewImage(ctx: StateContext<CropImageModel>, action: CropDownloadViewImage) {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      downloadViewFile: action.data\r\n    })\r\n  }\r\n}\r\n","import {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {DeleteImageService} from \"../../../serviceV2/delete-image.service\";\r\nimport {DeleteImage} from \"../actions/image.action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'Delete'\r\n})\r\n@Injectable()\r\nexport class DeleteImageState {\r\n    constructor(private deleteService: DeleteImageService) { }\r\n\r\n    @Action(DeleteImage)\r\n    public deleteUserImage(ctx: StateContext<ImageModel>, action: DeleteImage): Observable<any> {\r\n      return this.deleteService\r\n        .deleteImage(action.image)\r\n        .pipe(map(response => {\r\n          return response;\r\n        }))\r\n    }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {\r\n  ImageFileDetails,\r\n  ImageDownloadResponse,\r\n  ImageDetailsViewModel\r\n} from \"../../domain/imageModel/image-file-details\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {CropGalleryViewImage, GetDownloadDetails} from \"../actions/image.action\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@State<ImageDetailsViewModel>({\r\n  name: 'downloadDetails',\r\n})\r\n@Injectable()\r\nexport class DownloadDetailsState {\r\n  constructor(private downloadService: ImageDownloadService) { }\r\n\r\n  @Selector()\r\n  static getFile(state: ImageDetailsViewModel): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getDetails(state: ImageDetailsViewModel): ImageFileDetails {\r\n    return state.fileDetails;\r\n  }\r\n\r\n  @Action(GetDownloadDetails)\r\n  public getDownloadDetails(ctx: StateContext<ImageFileDetails>, action: GetDownloadDetails): Observable<ImageFileDetails> {\r\n    const state = ctx.getState();\r\n    return this.downloadService\r\n      .downloadImage(action.imageId, action.imageFileDetail)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        ctx.setState({\r\n          ...state,\r\n          downloadLink: res.downloadLink,\r\n          width: res.width,\r\n          height: res.height,\r\n          size: res.size,\r\n          contentType: res.contentType\r\n        })\r\n        return res;\r\n      }))\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {CropAndDownload, CropGalleryViewImage, GetImageAsByse64} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\nexport interface CropAndDownloadStateModel {\r\n  base64: string;\r\n}\r\n\r\n@State<CropAndDownloadStateModel>({\r\n  name: 'CropAndDownload',\r\n  defaults: {\r\n    base64: ''\r\n  }\r\n})\r\n@Injectable()\r\nexport class GetBase64ForDownloadCropperState {\r\n\r\n  constructor(private service: ImageRequestService) {\r\n\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getBase64(state: CropAndDownloadStateModel): string {\r\n    return state.base64;\r\n  }\r\n\r\n  @Selector()\r\n  public static getModel(state: CropAndDownloadStateModel): CropAndDownloadStateModel {\r\n    return state;\r\n  }\r\n\r\n  @Action(GetImageAsByse64)\r\n  getDataAsBytes(ctx: StateContext<CropAndDownloadStateModel>, action: GetImageAsByse64): Observable<CropAndDownloadStateModel> {\r\n    return this.service\r\n      .getImageBytes(action.imageId)\r\n      .pipe(map(byteArray => {\r\n        let blob = new Blob([byteArray],{type:'application/octet-binary'});\r\n        let reader = new FileReader();\r\n        let state = ctx.getState();\r\n        reader.onload = (evt: any) => {\r\n          ctx.patchState({\r\n            ...state,\r\n            base64: evt.target.result\r\n          })\r\n        };\r\n        reader.readAsDataURL(blob);\r\n        return GetBase64ForDownloadCropperState.getModel(state);\r\n      }))\r\n  }\r\n\r\n  @Action(CropAndDownload)\r\n  getData(ctx: StateContext<CropAndDownloadStateModel>, action: CropAndDownload): Observable<CropAndDownloadStateModel> {\r\n    let state = ctx.getState();\r\n    console.log(state);\r\n    ctx.patchState({\r\n      ...state,\r\n      base64: action.base64\r\n    })\r\n    return of(ctx.getState());\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CropImageModel, ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDetailsViewModel, ImageFileDetails} from \"../../domain/imageModel/image-file-details\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {GetImageByImageId} from \"../actions/image.action\";\r\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\n\r\n@State<ImageModel>({\r\n  name: 'modelDetails',\r\n})\r\n@Injectable()\r\nexport class GetImageByIdState {\r\n  constructor(private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getImageDetail(state: ImageModel): ImageModel {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  public static getFileDetails(state: ImageModel): ImageFileDetails {\r\n    return state.imageDetails[0];\r\n  }\r\n\r\n  @Selector()\r\n  public static getRatioAsString(state: ImageModel): number {\r\n    return state.imageDetails[0].width /state.imageDetails[0].height;\r\n  }\r\n\r\n  @Action(GetImageByImageId)\r\n  getImageById(ctx: StateContext<ImageModel>, action: GetImageByImageId): Observable<ImageModel> {\r\n    return this.imgReqService\r\n      .getImagesByImgId(action.imageId)\r\n      .pipe(map(req => {\r\n          let state = ctx.getState();\r\n        const newState = {\r\n          imageId: req.imageId,\r\n          link: req.link,\r\n          name: req.name,\r\n          profileImg: req.profileImg,\r\n          linkReference: req.linkReference,\r\n          isPublic: req.isPublic,\r\n          tags: req.tags,\r\n          user: req.user,\r\n          downloaded: req.downloaded,\r\n          liked: req.liked,\r\n          imageDetails: req.imageDetails,\r\n          mobileImgPath: req.mobileImgPath\r\n        };\r\n        ctx.setState(newState)\r\n        return newState;\r\n        })\r\n      )\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\nimport {Injectable} from \"@angular/core\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {ImagesByTagsAction, ImagesNextPageAction} from \"../actions/image.action\";\nimport {map, switchMap, tap} from \"rxjs/operators\";\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\n\n\n@State<ImagesByTagNameStateModel>({\n  name: 'image',\n  defaults: {\n    page: 0,\n    searchTerm: \"\",\n    imagResponseList: null\n  }\n\n})\n@Injectable()\nexport class ImagesByTagState {\n  constructor(private imageRequestService: ImageRequestService) {\n  }\n\n\n  @Selector()\n  static getData(state: ImagesByTagNameStateModel): ImageModel[] {\n    return state.imagResponseList;\n  }\n\n\n\n  @Action(ImagesByTagsAction)\n  searchByTags(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesByTagsAction): Observable<ImageModel[]> {\n    const state = ctx.getState();\n    const term = action.imagesByTag.searchTerm;\n    console.log(action.imagesByTag.filterOpt);\n\n    let dayFilterVal;\n\n    if (action.imagesByTag\n      .filterOpt && action.imagesByTag\n      .filterOpt.timeFilterOptions) {\n      dayFilterVal = action.imagesByTag\n        .filterOpt\n        .timeFilterOptions\n        .filter(value => value.checked)\n        .map(filterByDays => filterByDays.value);\n    }\n\n\n    console.log(dayFilterVal);\n    let page = state.page;\n    page = term !== state.searchTerm ? 0 : page;\n    return this.imageRequestService\n      .getImagesByTag(\n        {\n          tagName: term,\n          filterByDays: dayFilterVal !== undefined ? dayFilterVal[0] : null,\n          mostDownloaded: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostDownloads.checked : null,\n          mostLiked: action.imagesByTag.filterOpt !== null ? action.imagesByTag.filterOpt.mostLiked.checked : null\n        },\n        page)\n      .pipe(\n        map(res => {\n          ctx.patchState(\n            {\n              ...state,\n              page: page,\n              searchTerm: term,\n              imagResponseList: res\n            }\n          )\n          return state.imagResponseList;\n        })\n      )\n  }\n\n  // @Selector()\n  // static getImageData(state: ImagesByTagNameQuery): ImageModelList {\n  //   return state.imagResponseList;\n  // }\n\n  /*@Action(ImagesNextPageAction)\n  getNextPage(ctx: StateContext<ImagesByTagNameStateModel>, action: ImagesNextPageAction) {\n    const state = ctx.getState();\n    const nextPage = state.page + 1;\n\n    return this.imageRequestService\n      .getImagesByTag(state.searchTerm, nextPage)\n      .pipe(\n        tap(res => {\n          console.log(res.length);\n          ctx.setState(\n            {\n              ...state,\n              page: nextPage,\n              searchTerm: state.searchTerm,\n              imagResponseList: res.length === 0 ? state.imagResponseList :\n                state.imagResponseList.concat(res)\n            }\n          )\n        })\n      )\n  }*/\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImagesByTagNameStateModel} from \"../../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {ImagesByTagsAction, ImagesByUserIDAction, ImagesNextPageAction} from \"../actions/image.action\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\n\r\n@State<ImageModelList>({\r\n  name: 'ImagesByUserId'\r\n})\r\n@Injectable()\r\nexport class ImagesByUserIdState {\r\n  constructor(private imageRequestService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getData(state: ImageModelList): ImageModel[] {\r\n    return state.models;\r\n  }\r\n\r\n  @Action(ImagesByUserIDAction)\r\n  searchByTags(ctx: StateContext<ImageModelList>, action: ImagesByUserIDAction) {\r\n    const state = ctx.getState();\r\n    return this.imageRequestService\r\n      .getImagesByUserId(action.userId)\r\n      .pipe(\r\n        tap(res => {\r\n          ctx.setState(\r\n            {\r\n              ...state,\r\n              models: res\r\n            }\r\n          )\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext, Store} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {map, switchMap, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'LoggedDetails'\r\n})\r\n@Injectable()\r\nexport class LoggedUserDetailsState {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private imageRequestService: UpdateUserService,\r\n              private store: Store) {\r\n  }\r\n\r\n  @Selector()\r\n  static getProfile(state: BaseUserDetails): string {\r\n    return state.profileImgPath;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUserId(state: BaseUserDetails): string {\r\n    return state.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstLastName(state: BaseUserDetails): string {\r\n    return state.firstName + \" \" + state.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedUsername(state: BaseUserDetails): string {\r\n    return state.username;\r\n  }\r\n\r\n  @Selector()\r\n  static getLoggedState(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoggedUserDetails)\r\n  getUserDetails(ctx: StateContext<BaseUserDetails>,\r\n                 action: AuthenticationActions.LoggedUserDetails): Observable<BaseUserDetails> {\r\n    return this.authService.getUserDetails(action.userId)\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: response.firstName,\r\n            lastName: response.lastName,\r\n            email: response.email,\r\n            userId: response.userId,\r\n            profileImgPath: response.profileImgPath,\r\n            username: response.username\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(UserDetailsActions.UploadUserProfile)\r\n  uploadProfileImage(ctx: StateContext<BaseUserDetails>,\r\n                     action: UserDetailsActions.UploadUserProfile): Observable<any> {\r\n    return this.imageRequestService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(map(res => {\r\n        if (res.status === 200) {\r\n          console.log(res.body);\r\n          const state = ctx.getState();\r\n          return this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n        }\r\n      }))\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {IUserAuthState, UserAuthStateModel} from \"../../domain/UserAuthStateModel\";\r\nimport {IUserLoginModel, LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {QueryTagAction} from \"../actions/query-tag-action\";\r\nimport {catchError, map, retry, tap} from \"rxjs/operators\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {BehaviorSubject, Observable, Subject, throwError} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {BaseUserDetails, UserDetailsImpl} from \"../../domain/userModel/user-details.model\";\r\n\r\n@State<IUserAuthState>({\r\n  name: 'Authentication',\r\n  defaults: {\r\n    user: undefined,\r\n    status: false\r\n  }\r\n})\r\n@Injectable()\r\nexport class LoginStateModel {\r\n  constructor(private authService: UserAuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static loggedUserId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static isLoggedIn(state: IUserAuthState): boolean {\r\n    return state.status;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedInUser(state: IUserAuthState): BaseUserDetails {\r\n    return state.user;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedFirstName(state: IUserAuthState): string {\r\n    return state.user.firstName;\r\n  }\r\n\r\n  @Selector()\r\n  static loggedLastName(state: IUserAuthState): string {\r\n    return state.user.lastName;\r\n  }\r\n\r\n  @Selector()\r\n  static userName(state: IUserAuthState): string {\r\n    return state.user.username;\r\n  }\r\n\r\n  @Selector()\r\n  static loginType(state: IUserAuthState): boolean {\r\n    return state.thirdPartyLogin;\r\n  }\r\n\r\n  @Selector()\r\n  static userId(state: IUserAuthState): string {\r\n    return state.user.userId;\r\n  }\r\n\r\n  @Selector()\r\n  static profileImg(state: IUserAuthState): string {\r\n    return state.user.profileImgPath;\r\n  }\r\n\r\n  @Action(AuthenticationActions.LoginAction)\r\n  login(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.LoginAction) {\r\n    const loginType = action.userLoginModel.password === undefined ? \"GOOGLE\" : \"DEFAULT\";\r\n    return this.authService.login(action.userLoginModel, loginType)\r\n      .pipe(\r\n        tap(response => {\r\n          console.log('who triggered me??');\r\n          const status = response.status === 200;\r\n          const userId = response.headers.get(\"UserId\");\r\n          const state = ctx.getState();\r\n          console.log(response);\r\n          const body = response.body;\r\n          console.log(body)\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email,\r\n            },\r\n            status: status,\r\n            thirdPartyLogin: body.thirdPartyLogin\r\n          });\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.IsLoggedIn)\r\n  isLoggedIn(ctx: StateContext<IUserAuthState>,\r\n             action: AuthenticationActions.IsLoggedIn): Observable<boolean> {\r\n    return this.authService.isLoggedIn()\r\n      .pipe(\r\n        map(response => {\r\n          const status = response.status === 200;\r\n          const state = ctx.getState();\r\n          const body = response.body;\r\n          ctx.patchState({\r\n            ...state,\r\n            user: {\r\n              userId: body.userId,\r\n              username: body.username,\r\n              firstName: body.firstName,\r\n              lastName: body.lastName,\r\n              profileImgPath: body.profileImgPath,\r\n              email: body.email\r\n            },\r\n            status: status,\r\n            thirdPartyLogin: body.thirdPartyLogin\r\n          })\r\n          return status;\r\n        }), retry(1), catchError(err => {\r\n          console.log(\"Error in isLoggedin\");\r\n          return throwError(err);\r\n        })\r\n      )\r\n  }\r\n\r\n  @Action(AuthenticationActions.Logout)\r\n  logout(ctx: StateContext<IUserAuthState>, action: AuthenticationActions.Logout) {\r\n    return this.authService.logout()\r\n      .pipe(\r\n        tap(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            user: null,\r\n            status: false\r\n          })\r\n        })\r\n      )\r\n  }\r\n\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {DialogCropperData, PassDataToDialogAction} from \"../actions/pass-data-to-dialog.action\";\r\nimport {CroppedDownloadRequest} from \"../../domain/http/req/CroppedDownloadRequest\";\r\nimport {SetCroppedOffsetValues} from \"../actions/image.action\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\n\r\n@State<DialogCropperData>({\r\n  name: 'PassDataToDialog'\r\n\r\n})\r\n@Injectable()\r\nexport class PassDataToCropperDialogState {\r\n  constructor() {  }\r\n\r\n\r\n  @Selector()\r\n  static getComponentData(state: DialogCropperData): DialogCropperData {\r\n    return state;\r\n  }\r\n\r\n  @Action(PassDataToDialogAction)\r\n  public passData(ctx: StateContext<DialogCropperData>,\r\n                  action: PassDataToDialogAction): Observable<DialogCropperData> {\r\n    ctx.patchState(action.data);\r\n    return of(ctx.getState());\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {CroppedDownloadRequest} from \"../../domain/http/req/CroppedDownloadRequest\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageDownloadService} from \"../../../serviceV2/image-download.service\";\r\nimport {AssignCropperPosToImageUpload, SetCroppedOffsetValues} from \"../actions/image.action\";\r\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {flatMap, map, mergeMap, switchMap, tap} from \"rxjs/operators\";\r\n\r\n@State<CroppedDownloadRequest>({\r\n  name: 'prepareForCroppedDownloadRequest'\r\n})\r\n@Injectable()\r\nexport class PrepareCroppedForDownloadState {\r\n  constructor(private downloadService: ImageDownloadService,\r\n              private imgReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  public static getCroppedValues(state: CroppedDownloadRequest): CroppedDownloadRequest {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Action(AssignCropperPosToImageUpload)\r\n  public prepareCropperValuesForUpload(\r\n    ctx: StateContext<CroppedDownloadRequest>,\r\n    action: AssignCropperPosToImageUpload): Observable<CroppedDownloadRequest> {\r\n    ctx.patchState({\r\n      ...ctx.getState(),\r\n      offsetX: action.offsetX,\r\n      offsetY: action.offsetY,\r\n      subImageWidth: action.subImageWidth,\r\n      subImageHeight: action.subImageHeight\r\n    });\r\n    return new BehaviorSubject(ctx.getState());\r\n  }\r\n\r\n\r\n  @Action(SetCroppedOffsetValues)\r\n  public setCroppedOffsetValues(ctx: StateContext<CroppedDownloadRequest>,\r\n                                action: SetCroppedOffsetValues): Observable<CroppedDownloadRequest> {\r\n    const subImageWidth = action.subImageWidth;\r\n    const subImageHeight = action.subImageHeight;\r\n\r\n    let possibleResolutions: Array<string> = [];\r\n\r\n\r\n    // put cropped image resolution into the resolutionList\r\n    possibleResolutions.push(subImageWidth.toFixed(0) + \" x \" + subImageHeight.toFixed(0))\r\n\r\n    // get possible app resolution array from endpoint\r\n    return this.imgReqService\r\n      .getResolutions()\r\n      .pipe(switchMap(response => {\r\n        let state = ctx.getState();\r\n        const ratio = subImageWidth / subImageHeight;\r\n\r\n        // check if querformat or hochformat\r\n        if (subImageWidth > subImageHeight) {\r\n          response.widthList\r\n            .forEach(widthResolution => {\r\n              if (subImageWidth > widthResolution) {\r\n                const height = widthResolution / ratio;\r\n                possibleResolutions.push(widthResolution + \" x \" + height.toFixed(0));\r\n              }\r\n            })\r\n\r\n          // only take lower resolutions from response array\r\n        } else if (subImageHeight > subImageWidth) {\r\n          response.heightList\r\n            .forEach(heightResolution => {\r\n              if (subImageHeight > heightResolution) {\r\n                const width = heightResolution * ratio;\r\n                possibleResolutions.push(width.toFixed(0) + \" x \" + heightResolution.toFixed(0));\r\n              }\r\n            })\r\n\r\n        }\r\n        ctx.patchState({\r\n          ...state,\r\n          offsetX: action.offsetX,\r\n          offsetY: action.offsetY,\r\n          subImageWidth: subImageWidth,\r\n          subImageHeight: subImageHeight,\r\n          possibleResolutions: possibleResolutions\r\n        })\r\n        return of(ctx.getState());\r\n      }));\r\n  }\r\n}\r\n\r\n\r\nexport interface ResolutionsResponse {\r\n  widthList: Array<number>;\r\n  heightList: Array<number>;\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map, tap} from \"rxjs/operators\";\r\nimport {GetRelatedImagesByTagIDs} from \"../actions/image.action\";\r\n\r\n@State<RelatedImagesModel>({\r\n  name: 'RelatedImages'\r\n})\r\n@Injectable()\r\nexport class RelatedImagesState {\r\n  constructor(private imageReqService: ImageRequestService) {\r\n  }\r\n\r\n  @Selector()\r\n  static getRelatedImages(state: RelatedImagesModel): ImageModel[] {\r\n    return state.data;\r\n  }\r\n\r\n  @Action(GetRelatedImagesByTagIDs)\r\n  userDetails(ctx: StateContext<RelatedImagesModel>,\r\n              action: GetRelatedImagesByTagIDs): Observable<ImageModel[]> {\r\n    return this.imageReqService.getRelatedImagesByTagList(action.tagIds)\r\n      .pipe(\r\n        map(response => {\r\n          console.log(response)\r\n          let state = ctx.getState();\r\n          state.data = response;\r\n          ctx.setState({\r\n            data: response\r\n          })\r\n          return response;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport interface RelatedImagesModel {\r\n  data: ImageModel[]\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {RequestStatus} from \"../../domain/request-status\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\nimport {ImageModelList} from \"../../domain/imageModel/image-model-list\";\r\nimport {ImageModel} from \"../../domain/imageModel/image.model\";\r\n\r\n@State<RequestStatus>({\r\n  name: 'RequestStatus'\r\n})\r\n@Injectable()\r\nexport class RequestStatusState {\r\n\r\n  @Selector()\r\n  static getStatus(state: RequestStatus): RequestStatus {\r\n    return state;\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static getStatusCode(state: RequestStatus): number {\r\n    return state.status;\r\n  }\r\n\r\n\r\n  @Action(RequestMessageAction)\r\n  getRequestStatus(ctx: StateContext<RequestStatus>, action: RequestMessageAction) {\r\n    let state = ctx.getState();\r\n    state.message = '';\r\n    if (action.requestStatus !== null) {\r\n      ctx.setState({\r\n        message: action.requestStatus.message,\r\n        status: action.requestStatus.status !== null ?\r\n          action.requestStatus.status : null\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {Injectable} from \"@angular/core\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagRequestService} from \"../../../serviceV2/tag-request.service\";\nimport {tap} from \"rxjs/operators\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\n\n@State<TagQueryList>({\n  name: 'tag'\n})\n@Injectable()\nexport class SearchByTagState {\n  constructor(public tagService: TagRequestService) {\n  }\n\n  @Selector()\n  static tags(state: TagQueryList): TagQueryList {\n    return state;\n  }\n\n  @Selector()\n  static getFetchedTagListAsOption(state: TagQueryList): SearchViewModel[] {\n    return state.result\n      .map(val => {\n        return {\n          value: val.tag\n        }\n      });\n  }\n\n  @Selector()\n  static getFetchedTagList(state: TagQueryList): TagModel[] {\n    return state.result;\n  }\n\n  @Action(QueryTagAction)\n  queryTags(ctx: StateContext<TagQueryList>, action: QueryTagAction) {\n    return this.tagService\n      .searchByTagName(action.searchTerm)\n      .pipe(\n        tap(res => {\n          const state = ctx.getState();\n          //ctx.patchState({result: res})\n          ctx.setState({\n            ...state,\n            result: res\n          })\n        })\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SearchByUsersService} from \"../../../serviceV2/search-by-users.service\";\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\nimport {QueryTagAction} from \"../actions/query-tag-action\";\nimport {TagQueryList} from \"../../domain/tagModel/tag-query-list\";\nimport {map, tap} from \"rxjs/operators\";\nimport {UserDetailsActions} from \"../actions/user-details.action\";\nimport SearchUsers = UserDetailsActions.SearchUsers;\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\nimport {TagModel} from \"../../domain/tagModel/tag-model\";\nimport {SearchViewModel} from \"../../../public/search-toolbar/search-view.model\";\nimport {Observable} from \"rxjs\";\n\n@State<UserSearchModel>({\n  name: 'users'\n})\n@Injectable()\nexport class SearchByUsersState {\n\n  constructor(public userSearchService: SearchByUsersService) { }\n\n  @Selector()\n  static getFetchedUsersAsOptions(state: UserSearchModel): SearchViewModel[] {\n    console.log(state.data);\n    return state.data.map(val => {\n      return {\n        value: val.username\n      }\n    });\n  }\n\n\n  @Selector()\n  static getFetchedUsers(state: UserSearchModel): BaseUserDetails[] {\n    console.log(state.data);\n    return state.data;\n  }\n\n  @Action(SearchUsers)\n  queryTags(ctx: StateContext<UserSearchModel>, action: SearchUsers): Observable<UserSearchModel> {\n    return this.userSearchService\n      .searchByEmail(action.searchTerm)\n      .pipe(map(response => {\n        console.log(response)\n        const users = {data: response};\n        const state = ctx.getState();\n        ctx.patchState({\n          ...state,\n          data: response\n        })\n        return ctx.getState();\n      }))\n  }\n}\n\nexport interface UserSearchModel {\n  data: BaseUserDetails[];\n}\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {ImageModel, SelectedImage} from \"../../domain/imageModel/image.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {GetImageByImageId, SelectImage} from \"../actions/image.action\";\r\n\r\n\r\n\r\n\r\n@State<SelectedImage> ( {\r\n  name: 'SelectImage'\r\n} )\r\n@Injectable()\r\nexport class SelectImageState {\r\n  constructor() { }\r\n\r\n  @Selector()\r\n  static getSelectedImage(state: SelectImage): ImageModel {\r\n    return state.image;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageUrlReference(state: SelectImage): string {\r\n    return state.image.linkReference;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedImageId(state: SelectImage): string {\r\n    return state.image.imageId;\r\n  }\r\n\r\n  @Selector()\r\n  static getSelectedLink(state: ImageModel): string {\r\n    return state.link;\r\n  }\r\n\r\n  @Selector()\r\n  static getIsPublic(state: SelectImage): boolean {\r\n    return state.image.isPublic;\r\n  }\r\n\r\n  @Action(SelectImage)\r\n  selectImage(ctx: StateContext<SelectedImage>, action: SelectImage) {\r\n    const state = ctx.getState();\r\n    ctx.setState( {\r\n      ...state,\r\n      image: action.image\r\n    } )\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {IUserAuthState} from \"../../domain/UserAuthStateModel\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {catchError, map, switchMap, tap} from \"rxjs/operators\";\r\nimport {LoggedInUserModel, UserLoginModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {EMPTY, Observable} from \"rxjs\";\r\nimport {AddressViewListState} from \"../../domain/address-model/address-view.list.state\";\r\nimport {Country} from \"../../domain/address-model/addres.view.model\";\r\nimport {RequestMessageAction} from \"../actions/request-message.action\";\r\n\r\n\r\n@State<BaseUserDetails>({\r\n  name: 'Signup',\r\n  defaults: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    address: undefined\r\n  }\r\n})\r\n@Injectable()\r\nexport class SignupState {\r\n  constructor(private authService: UserAuthenticationService) {\r\n  }\r\n\r\n  @Selector()\r\n  static registrationModel(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n\r\n\r\n  @Action(AuthenticationActions.SignUpAction)\r\n  createNewUser(ctx: StateContext<BaseUserDetails>,\r\n                action: AuthenticationActions.SignUpAction): Observable<LoggedInUserModel> {\r\n    return this.authService.createNewUser(action.userRegistration)\r\n      .pipe(\r\n        map(response => {\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            firstName: action.userRegistration.firstName,\r\n            lastName: action.userRegistration.lastName,\r\n            email: action.userRegistration.email,\r\n            password: action.userRegistration.password,\r\n            address: action.userRegistration.address\r\n          })\r\n\r\n          return response;\r\n        }), catchError(err => {\r\n          ctx.dispatch(new RequestMessageAction({ status: err.status, message: err.error.message}))\r\n          return EMPTY;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import {Action, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {UpdateUserService} from \"../../../serviceV2/update-user.service\";\r\nimport {UpdateUserProfileActions} from \"../actions/update-user-profile.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'foo'\r\n})\r\n@Injectable()\r\nexport class UpdateUserProfileImageState {\r\n  constructor(private updateProfileService: UpdateUserService) { }\r\n\r\n  @Action(UpdateUserProfileActions.UploadUserProfileImg)\r\n  setProfile(ctx: StateContext<UploadImageModel>,\r\n             action: UpdateUserProfileActions.UploadUserProfileImg) {\r\n    return this.updateProfileService\r\n      .setUserProfile(action.userId, action.file)\r\n      .pipe(tap(response => {\r\n        const state = ctx.getState();\r\n        state.file = action.file;\r\n        state.userId = action.userId;\r\n        ctx.patchState({...state})\r\n      }))\r\n\r\n  }\r\n\r\n}\r\n","import {Action, Selector, State, StateContext} from \"@ngxs/store\";\r\nimport {BaseUserDetails} from \"../../domain/userModel/user-details.model\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UserAuthenticationService} from \"../../../serviceV2/user-authentication.service\";\r\nimport {AuthenticationActions} from \"../actions/authentication-action\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LoggedInUserModel} from \"../../domain/userModel/UserLoginModel\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ImageRequestService} from \"../../../serviceV2/image-request.service\";\r\nimport {UploadImage} from \"../actions/image.action\";\r\nimport {UploadImageModel} from \"../../domain/imageModel/upload-image.model\";\r\nimport {UserDetailsActions} from \"../actions/user-details.action\";\r\nimport {ImageUploadService} from \"../../../serviceV2/image-upload.service\";\r\n\r\n@State<UploadImageModel>({\r\n  name: 'Upload'\r\n\r\n})\r\n@Injectable()\r\nexport class UploadImageState {\r\n  constructor(private uploadService: ImageUploadService) {\r\n  }\r\n\r\n  @Selector()\r\n  static userDetails(state: BaseUserDetails): BaseUserDetails {\r\n    return state;\r\n  }\r\n\r\n  @Action(UploadImage)\r\n  uploadImage(ctx: StateContext<UploadImageModel>,\r\n              action: UploadImage): Observable<any> {\r\n\r\n    // const userId = action.uploadModel.userId;\r\n    // const image = action.uploadModel.file;\r\n    return this.uploadService\r\n      .addToUserLibrary(action.uploadModel)\r\n      .pipe(\r\n        tap(response => {\r\n          // console.log(response.status)\r\n          const state = ctx.getState();\r\n          ctx.setState({\r\n            ...state,\r\n            userId: action.uploadModel.userId,\r\n            orgFile: action.uploadModel.orgFile,\r\n            galleryFile: action.uploadModel.galleryFile,\r\n            downloadFile: action.uploadModel.downloadFile,\r\n            status: response.status === 200\r\n          })\r\n        })\r\n      )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {SignupComponent} from \"../signup/signup.component\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {Store} from \"@ngxs/store\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\n\n@Component({\n  selector: 'app-dialog-wrapper',\n  templateUrl: './login-dialog-wrapper.component.html',\n  styleUrls: ['./login-dialog-wrapper.component.scss']\n})\nexport class LoginDialogWrapperComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              private store: Store) { }\n\n  ngOnInit(): void {\n    const ref = new MatDialogConfig();\n    this.dialog.open(LoginComponent,\n      {\n        width: '750px',\n        height: '600px',\n        disableClose: true,\n        autoFocus: false\n      });\n  }\n\n}\n","<app-search-toolbar></app-search-toolbar>\n\n","export class UserAddressModel {\r\n  street: string;\r\n  region: string;\r\n  zipcode: string;\r\n  country: string;\r\n\r\n\r\n  constructor(street: string,\r\n              region: string,\r\n              zipcode: string,\r\n              country: string) {\r\n    this.street = street;\r\n    this.region = region;\r\n    this.zipcode = zipcode;\r\n    this.country = country;\r\n  }\r\n}\r\n","import {ImageModel} from \"./image.model\";\r\nimport {FilterCheckBox} from \"../../../public/search-toolbar/search.toolbar.component\";\r\n\r\nexport interface ImagesByTagName {\r\n  page?: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n  filterOpt?: FilterCheckBox;\r\n}\r\n\r\nexport class FilterName {\r\n  public static readonly FILTER_BY_DATE_WEEK = \"WEEK\";\r\n  public static readonly FILTER_BY_DATE_MONTH = \"MONTH\";\r\n  public static readonly FILTER_BY_DATE_YEAR = \"YEAR\";\r\n  public static readonly FILTER_BY_MOST_DOWNLOADS = \"DOWNLOADS\";\r\n  public static readonly FILTER_BY_MOST_LIKES = \"LIKES\";\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterArgs implements ImagesByTagName{\r\n  searchTerm: string;\r\n  filters: Map<string, boolean>;\r\n\r\n  constructor(searchTerm: string, filters: Map<string, boolean>) {\r\n    this.searchTerm = searchTerm;\r\n    this.filters = filters;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameWithFilterOpt implements ImagesByTagName{\r\n  filterOpt: FilterCheckBox;\r\n  searchTerm: string;\r\n\r\n\r\n  constructor(filterOpt: FilterCheckBox, searchTerm: string) {\r\n    this.filterOpt = filterOpt;\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\n\r\nexport class ImagesByTagNameQueryImpl implements ImagesByTagName{\r\n  searchTerm: string;\r\n\r\n  constructor(searchTerm: string) {\r\n    this.searchTerm = searchTerm;\r\n  }\r\n}\r\n\r\nexport class ImagesByTagNameStateModel implements ImagesByTagName{\r\n  page: number;\r\n  searchTerm: string;\r\n  imagResponseList?: ImageModel[];\r\n\r\n  constructor(page: number,\r\n              searchTerm: string,\r\n              imagResponseList: ImageModel[]) {\r\n    this.page = page;\r\n    this.searchTerm = searchTerm;\r\n    this.imagResponseList = imagResponseList;\r\n  }\r\n}\r\n","export interface IUserLoginModel {\n  userId?: string;\n  email: string;\n  password?: string;\n  firstName?: string;\n  lastName?: string;\n  profileImg?: string;\n  tokenId?: string;\n}\n\nexport class UserLoginModel implements IUserLoginModel{\n  email: string;\n  password: string;\n\n  constructor(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n  }\n}\n\nexport class LoggedInUserModel implements IUserLoginModel {\n  email: string;\n  userId: string;\n\n  constructor(userId: string, email: string) {\n    this.email = email;\n    this.userId = userId;\n  }\n}\n\nexport class GoogleUserLogin implements IUserLoginModel {\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileImg: string;\n  tokenId: string;\n\n\n  constructor(email: string, firstName: string, lastName: string, profileImg: string, tokenId: string) {\n    this.email = email;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.profileImg = profileImg;\n    this.tokenId = tokenId;\n  }\n}\n","import {UserAddressModel} from \"../address-model/user-address-model\";\r\nimport {ImageModel} from \"../imageModel/image.model\";\r\n\r\nexport interface BaseUserDetails {\r\n  userId?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  username?: string;\r\n  likes?: ImageModel[];\r\n  images?: ImageModel[];\r\n  profileImgPath?: string;\r\n  password?: string;\r\n  address?: UserAddressModel;\r\n}\r\n\r\nexport class UserRegistrationModel implements BaseUserDetails{\r\n  address?: UserAddressModel;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: string;\r\n\r\n  constructor(firstName: string, lastName: string,\r\n              email: string, password: string,\r\n              street: string, region: string,\r\n              zipcode: string, country:string) {\r\n    this.address = new UserAddressModel(street, region, zipcode, country);\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.password = password;\r\n  }\r\n}\r\n\r\nexport class UserDetailsImpl implements BaseUserDetails{\r\n  userId: string\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImgPath: string;\r\n  username: string;\r\n\r\n\r\n  constructor(userId: string, email: string,\r\n              firstName: string, lastName: string,\r\n              profileImgPath: string, username: string) {\r\n    this.userId = userId;\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.profileImgPath = profileImgPath;\r\n    this.username = username;\r\n  }\r\n}\r\n\r\n\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {CdkVirtualScrollViewport} from \"@angular/cdk/scrolling\";\r\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\r\nimport {ImageModelList} from \"../domain/imageModel/image-model-list\";\r\nimport {ImageModel, ImageViewModel} from \"../domain/imageModel/image.model\";\r\nimport {map, switchMap, tap, throttleTime} from \"rxjs/operators\";\r\nimport {ImageTile} from \"./image-tile\";\r\nimport {TileRandomizer} from \"./tile-randomizer\";\r\nimport {Tile} from \"./tile\";\r\nimport {ImageRequestService} from \"../../serviceV2/image-request.service\";\r\nimport {\r\n  GetDownloadDetails,\r\n  GetImageByImageId, GetRelatedImagesByTagIDs,\r\n  ImagesByTagsAction,\r\n  ImagesByUserIDAction,\r\n  ImagesNextPageAction,\r\n  SelectImage\r\n} from \"../app-state/actions/image.action\";\r\nimport {ImagesByTagNameQueryImpl, ImagesByTagNameWithFilterOpt} from \"../domain/imageModel/ImagesByTagNameQuery\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {SignupComponent} from \"../signup/signup.component\";\r\nimport {ImageDetailViewComponent} from \"../image-detail-view/image-detail-view.component\";\r\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\r\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\r\n\r\n@Component({\r\n  selector: 'app-image-content',\r\n  templateUrl: './image-content.component.html',\r\n  styleUrls: ['./image-content.component.scss']\r\n})\r\nexport class ImageContentComponent implements OnInit {\r\n\r\n  @Input('data') models: Observable<ImageModel[]>;\r\n  @Input('dataArray') models2: ImageModel[];\r\n  @Input('isProfile') isProfile: boolean;\r\n\r\n\r\n  @Input() cols = 3;\r\n  @Input() rowHeight = 15;\r\n  @Input() gutterSize = 40;\r\n\r\n  panelOpenState = false;\r\n  //fetched data\r\n  public data: ImageModel[];\r\n  @Select(ImagesByTagState.getData) fData$: Observable<ImageModel[]>;\r\n  @Select(LoginStateModel.loggedUserId) $loggedUserId;\r\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\r\n  @Select(ImagesByUserIdState.getData) $imageData;\r\n  loggedUserState: BaseUserDetails;\r\n  hover: boolean = false;\r\n  editable: boolean = false;\r\n\r\n\r\n  //AutoScroll\r\n  @ViewChild(CdkVirtualScrollViewport)\r\n  viewport: CdkVirtualScrollViewport;\r\n  test = new Array<string>();\r\n  end = false;\r\n  offset = new Subject();\r\n  evenRowLimit = new Subject<boolean>();\r\n  infinite: Observable<any[]>;\r\n  showLoadBtn: boolean;\r\n  dataEvenRowSize: number;\r\n  breakpoint: any;\r\n  downloadLink: any;\r\n  rows = new Subject<ImageRowView[]>();\r\n  imageViewModel: ImageViewModel[];\r\n  device: string = '';\r\n\r\n  constructor(private store: Store,\r\n              public imgReqService: ImageRequestService,\r\n              private router: Router,\r\n              private updateUserService: UpdateUserService,\r\n              private dialog: MatDialog,\r\n              private downloadService: ImageDownloadService,\r\n              public deviceObserverService: DeviceObserverService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.models.subscribe(value => {\r\n      const imageRowViews: ImageRowView[] = ImageRowMapper.mapToImageRow(value);\r\n      // if (imageRowViews) console.log(imageRowViews.length);\r\n      this.rows.next(imageRowViews);\r\n    })\r\n\r\n    this.$loggedUserId.subscribe(id => {\r\n      console.log(id);\r\n      this.models.subscribe(data => {\r\n        if (data) {\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (data[i].user.userId !== id) {\r\n              // console.log(data[i]);\r\n              // console.log(id);\r\n              this.editable = false;\r\n              break;\r\n            } else {\r\n              this.editable = true;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log(this.editable);\r\n\r\n    this.deviceObserverService\r\n      .getActiveDevice()\r\n      .subscribe(value => this.device = value);\r\n\r\n\r\n  }\r\n\r\n  public nextBatch(e, offset) {\r\n    if (this.end) { return; }\r\n    const end = this.viewport.getRenderedRange().end;\r\n    var total = this.viewport.getDataLength();\r\n    console.log(total);\r\n    console.log(end);\r\n    this.offset.subscribe(value => console.log(value));\r\n    if (end == total) this.offset.next(offset);\r\n  }\r\n\r\n  public getBatch(lastSeen: string) {\r\n\r\n  }\r\n\r\n  onResize($event: any) {\r\n\r\n  }\r\n\r\n  enter() {\r\n    this.hover = true;\r\n    console.log(this.hover);\r\n  }\r\n\r\n  leave() {\r\n    this.hover = false;\r\n    console.log(this.hover);\r\n  }\r\n\r\n  download(img: ImageModel): void {\r\n    console.log(img)\r\n    this.store.dispatch(new GetImageByImageId(img.imageId))\r\n    this.router.navigate(['image', { imageId: img.imageId }]);\r\n  }\r\n\r\n  clickedTag(tag: string) {\r\n    this.store.dispatch(new ImagesByTagsAction(\r\n      new ImagesByTagNameWithFilterOpt(null, tag)))\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        console.log(\"Search pressed..\");\r\n        this.router.navigate(['/image-by-tags']);\r\n      });\r\n    /*this.store.dispatch(\r\n      new ImagesByTagsAction(new ImagesByTagNameQueryImpl(tag))\r\n    ).subscribe(value => {\r\n      /!*this.store.dispatch(new Navigate(['/image-by-tags']))*!/\r\n      this.router.navigate(['image-by-tags'])\r\n    });*/\r\n\r\n  }\r\n\r\n  reachedLastEvenElement(val) {\r\n    console.log(val)\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return index;\r\n  }\r\n\r\n  loadNextPage() {\r\n    this.store.dispatch(new ImagesNextPageAction(this.data))\r\n  }\r\n\r\n  navigateToUser(item: ImageModel): void {\r\n    console.log(item.user.userId);\r\n    this.store.dispatch(\r\n      new Navigate(['profile', {userId: item.user.userId}])\r\n    )\r\n  }\r\n\r\n  showFullscreenImage(item: ImageModel): void {\r\n    this.store.dispatch(new SelectImage(item))\r\n      .subscribe(value => {\r\n        const ref = new MatDialogConfig();\r\n        this.dialog.open(ImageDetailViewComponent,\r\n          {\r\n          height: '100%',\r\n          width: '100vw',\r\n          maxWidth: '100vw',\r\n            data: item,\r\n            panelClass: 'show-fullscreen-img'\r\n            // disableClose: true,\r\n            // autoFocus: false\r\n          });\r\n      })\r\n\r\n  }\r\n\r\n  changeImageDetails(item: ImageModel): void {\r\n    if (this.isProfile && this.editable) {\r\n      this.store.dispatch(new SelectImage(item))\r\n      this.dialog.open(ChangeImageDetailsDialogComponent,\r\n        {\r\n          width: '780px',\r\n          height: '780px',\r\n          data: item,\r\n          panelClass: 'change-img-details'\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  showAddTagsDialog(item: ImageModel): void {\r\n    const ref = new MatDialogConfig();\r\n    // ref.disableClose = true;\r\n    this.store.dispatch(new SelectImage(item))\r\n    this.dialog.open(AddTagsDialogComponent,\r\n      {\r\n        width: '435px',\r\n        height: '600px',\r\n        data: item,\r\n        panelClass: 'add-tag-dialog'\r\n      }\r\n    );\r\n\r\n    this.dialog.afterAllClosed\r\n      .subscribe(value => {\r\n        console.log(\"FOO\")\r\n        this.store.dispatch(new Navigate(['profile', {userId: item.user.userId}]))\r\n      })\r\n  }\r\n\r\n  // when not logged user likes image then redirect to login page\r\n\r\n\r\n  likeImage(item: ImageModel, userId: string): void {\r\n    console.log(this.store.selectSnapshot(LoginStateModel.loggedUserId));\r\n    this.store.dispatch(new IsLoggedIn())\r\n      .subscribe(value1 => {\r\n        this.updateUserService.addUserLike(item.imageId, value1.Authentication.user.userId)\r\n          .subscribe(value => console.log(value));\r\n        this.store.dispatch(new UserDetailsActions.GetUserDetails(userId))\r\n      });\r\n  }\r\n\r\n  fooTest() {\r\n    console.log(\"FOOOOOOOOOOOO\")\r\n  }\r\n}\r\n\r\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\r\nimport {LoginComponent} from \"../login/login.component\";\r\nimport {AddTagsDialogComponent} from \"../../private/add-tags-dialog/add-tags-dialog.component\";\r\n\r\n\r\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\r\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\r\nimport {ImageRowView} from \"../domain/ImageRowView\";\r\nimport {ImageRowMapper} from \"../image-row-mapper\";\r\nimport {UpdateUserService} from \"../../serviceV2/update-user.service\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport IsLoggedIn = AuthenticationActions.IsLoggedIn;\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport {ImageDownloadService} from \"../../serviceV2/image-download.service\";\r\nimport {ChangeImageDetailsDialogComponent} from \"../../private/change-image-details-dialog/change-image-details-dialog.component\";\r\nimport {FileSaverService} from \"ngx-filesaver\";\r\nimport {DeviceObserverService} from \"../../serviceV2/device-observer.service\";\r\n","<mat-grid-list class=\"img-list\" [cols]=\"device === 'sm' || device === 'md' ? 2 : device === 'xs' ? 1 : 4\"\r\n               [rowHeight]=\"10\"\r\n               [gutterSize]=\"20+'px'\" >\r\n  <mat-grid-tile class=\"grid-tile\" [rowspan]=\"item.rows\"\r\n                 *ngFor=\"let imgItem of ((models | async) ? (models | async) : models); index as i; trackBy: track\" >\r\n      <app-image-item class=\"img-item\" #item [image]=\"imgItem\"\r\n                      [rowHeight]=\"10\"\r\n                      [gutterSize]=\"20\">\r\n\r\n      </app-image-item>\r\n\r\n      <div (click)=\"fooTest()\" class=\"item-container\">\r\n          <button mat-icon-button *ngIf=\"imgItem.user.profileImgPath\" class=\"account-btn profile-icon\" (click)=\"navigateToUser(imgItem)\">\r\n            <img class=\"shadow3 user-profile-img\" id=\"img-profile\" [src]=\"imgItem.user.profileImgPath\" alt=\"\">\r\n          </button>\r\n        <span class=\"user-name\" id=\"user-txt\">{{ imgItem.user.email.substr(0, imgItem.user.email.indexOf('@')) }}</span>\r\n\r\n          <a class=\"img-download\"\r\n             matTooltip=\"Click to download this image\"\r\n             mat-icon-button\r\n             (click)=\"download(imgItem)\">\r\n            <mat-icon style=\"font-weight: bolder\" class=\"img-download white-icon\">save_alt</mat-icon>\r\n          </a>\r\n\r\n\r\n\r\n\r\n        <!--<img class=\"fullscreen-img\" src=\"assets/arrows_fullscreen_icon_160438.png\" alt=\"\">-->\r\n\r\n\r\n\r\n\r\n        <a (click)=\"showFullscreenImage(imgItem)\" class=\"fullscreen-icon\"\r\n           matTooltip=\"Click to view full screen\"\r\n           mat-icon-button>\r\n          <!--<mat-icon class=\"fullscreen-icon\" style=\"font-weight: bolder; color: white\">fullscreen</mat-icon>-->\r\n          <img class=\"expand-icon\"\r\n               matTooltip=\"Click to view full screen\"\r\n               src=\"assets/expand-512.png\" alt=\"\">\r\n        </a>\r\n\r\n\r\n\r\n        <div *ngIf=\"!imgItem.user.profileImgPath\" class=\"profile-icon\">\r\n          <button class=\"btn\" mat-icon-button>\r\n            <mat-icon style=\"font-size: 70px; color: white\">account_circle</mat-icon>\r\n          </button>\r\n          <a mat-button *ngIf=\"!imgItem.user.profileImgPath\" class=\"header\"\r\n             (click)=\"navigateToUser(imgItem)\">\r\n            {{ imgItem.user.email.substr(0, imgItem.user.email.indexOf('@')) }}\r\n          </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"editable && isProfile\" class=\"img-settings\">\r\n          <a mat-icon-button>\r\n            <mat-icon class=\"setting-icon icon white-icon mobile-icon\"\r\n                      matTooltip=\"Open settings menu\"\r\n                      (click)=\"changeImageDetails(imgItem)\"\r\n                      *ngIf=\"imgItem.isPublic\">settings\r\n            </mat-icon>\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"likes-box\">\r\n          <div class=\"likes\">\r\n            <a class=\"thumbUp\" (click)=\"likeImage(imgItem, imgItem.userId)\"\r\n               mat-icon-button>\r\n              <mat-icon class=\"white-icon icon mobile-icon\" style=\"\">thumb_up</mat-icon>\r\n            </a>\r\n          </div>\r\n\r\n          <!--<button mat-icon-button (click)=\"download(imgItem)\">\r\n            <mat-icon class=\"white-icon icon-size\">save_alt</mat-icon>\r\n          </button>-->\r\n        </div>\r\n\r\n        <a *ngIf=\"imgItem.linkReference !== 'null' && imgItem.linkReference.length > 0\"\r\n           class=\"actions\"\r\n           matTooltip=\"{{'Go to ' + imgItem.linkReference}}\"\r\n           mat-menu-item\r\n           [href]=\"imgItem.linkReference\">\r\n        <img class=\"expand-icon\"\r\n             src=\"assets/link-5-512.png\" alt=\"\">\r\n        </a>\r\n\r\n        <!--<div class=\"actions\">\r\n          <button matTooltip=\"Click to open menu\"\r\n                  style=\"color: white;\"\r\n                  mat-icon-button\r\n                  [matMenuTriggerFor]=\"menu\"\r\n                  aria-label=\"Example icon-button with a menu\">\r\n            <mat-icon class=\"action_icon icon white-icon mobile-icon\" style=\"\">more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"editable && isProfile\"\r\n                    (click)=\"showAddTagsDialog(imgItem)\"\r\n                    mat-menu-item>\r\n              <mat-icon>edit</mat-icon>\r\n              <span>Add tags</span>\r\n            </button>\r\n            &lt;!&ndash;<button (click)=\"showFullscreenImage(imgItem)\" mat-menu-item>\r\n              <mat-icon>fullscreen</mat-icon>\r\n              <span>Fullscreen</span>\r\n            </button>&ndash;&gt;\r\n            &lt;!&ndash;<a mat-menu-item (click)=\"download(imgItem)\">\r\n              <mat-icon>save_alt</mat-icon>\r\n              <span>Download image</span>\r\n            </a>&ndash;&gt;\r\n            <a matTooltip=\"Go to {{imgItem.linkReference}}\"\r\n               mat-menu-item\r\n               [href]=\"imgItem.linkReference\">\r\n              <mat-icon>public</mat-icon>\r\n              <span>Go to source</span>\r\n            </a>\r\n          </mat-menu>\r\n        </div>-->\r\n        <!--<a *ngIf=\"imgItem.linkReference !== 'null'\" class=\"link-reference\" matTooltip=\"Go to {{imgItem.linkReference}}\"\r\n           mat-menu-item\r\n           [href]=\"imgItem.linkReference\">\r\n          <mat-icon style=\"color: white\">public</mat-icon>\r\n        </a>-->\r\n      </div>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Select} from \"@ngxs/store\";\r\nimport {SelectImageState} from \"../app-state/states/select-image.state\";\r\nimport {ImageModel} from \"../domain/imageModel/image.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-image-detail-view',\r\n  templateUrl: './image-detail-view.component.html',\r\n  styleUrls: ['./image-detail-view.component.scss']\r\n})\r\nexport class ImageDetailViewComponent implements OnInit {\r\n\r\n  @Select(SelectImageState.getSelectedLink) selectedImage: Observable<string>;\r\n  link: string = '';\r\n  panelOpenState: boolean;\r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<ImageDetailViewComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: ImageModel) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /*closeFullscreen() {\r\n    this.dialogRef.close();\r\n  }*/\r\n  closeFullscreen() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"content\">\r\n    <button style=\"background-color: black\" (click)=\"closeFullscreen()\" mat-icon-button>\r\n      <mat-icon class=\"icon\">close</mat-icon>\r\n    </button>\r\n    <img class=\"img-content\" [src]=\"data.originalImgPath\" alt=\"\">\r\n  </div>\r\n</div>\r\n","import {ImageModel} from \"./domain/imageModel/image.model\";\r\nimport {ImageRowView} from \"./domain/ImageRowView\";\r\n\r\nexport class ImageRowMapper {\r\n  public static mapToImageRow(imageModels: ImageModel[]): ImageRowView[] {\r\n    let countRow: number = 0;\r\n    let countItem: number = 0;\r\n    let rowModels: ImageRowView[] = [];\r\n    let temp: ImageModel[] = [];\r\n    let test: ImageRowView = {row: null, content: []};\r\n    if (imageModels !== undefined && imageModels !== null) {\r\n      imageModels.forEach((value1, index) => {\r\n        countItem++;\r\n        if (countItem <= 3) temp.push(value1);\r\n        if (countItem == 3) {\r\n          countItem = 0;\r\n          rowModels.push({row: countRow, content: temp});\r\n          temp = [];\r\n          countRow++;\r\n        }\r\n        if (index == imageModels.length - 1) {\r\n          rowModels.push({row: countRow, content: temp});\r\n        }\r\n      })\r\n      return rowModels;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormControl} from \"@angular/forms\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport {GoogleUserLogin, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {Navigate} from \"@ngxs/router-plugin\";\r\nimport {Location} from \"@angular/common\";\r\nimport LoggedUserDetails = AuthenticationActions.LoggedUserDetails;\r\nimport {log} from \"util\";\r\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\r\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\nimport {RenewExpiredAccountTokenComponent} from \"../../public/renew-expired-account-token/renew-expired-account-token.component\";\r\nimport {ShowEmailWasSentDialog} from \"../util/ShowEmailWasSentDialog\";\r\nimport {\r\n  CdkConnectedOverlay,\r\n  CdkOverlayOrigin, ConnectedPosition,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayPositionBuilder\r\n} from \"@angular/cdk/overlay\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  public formGroup;\r\n  public emailFormField = new FormControl('');\r\n  public passwordFormField = new FormControl('');\r\n  public pressedLogin = false;\r\n  forgotPasswordPressed = false;\r\n\r\n  @ViewChild(CdkConnectedOverlay) testing;\r\n\r\n  closeToolTip: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  isOpen = false;\r\n\r\n  openToolTip: Subject<boolean> = new Subject<boolean>();\r\n\r\n  connectedPosition: ConnectedPosition[] = [{\r\n    originX: 'end',\r\n    originY: 'bottom',\r\n    overlayX: 'end',\r\n    overlayY: 'top',\r\n  }];\r\n\r\n  variable: FlexibleConnectedPositionStrategy;\r\n\r\n  closeTooltip: Subject<boolean> = new Subject<boolean>();\r\n\r\n  closeToolTipFunc($event) {\r\n    this.isOpen = !$event;\r\n    console.log($event);\r\n    console.log(this.isOpen);\r\n  }\r\n\r\n\r\n  @Select(RequestStatusState.getStatus) $requestStatus;\r\n  @Select(RequestStatusState.getStatusCode) $requestStatusCode;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              public store: Store,\r\n              private dialogRef: MatDialogRef<LoginComponent>,\r\n              private authService: UserAuthenticationService,\r\n              private location: Location,\r\n              private googleAuthService: SocialAuthService,\r\n              private dialog: MatDialog,\r\n              private overlay: Overlay,\r\n              private overlayPositionBuilder: OverlayPositionBuilder,\r\n              private elementRef: ElementRef,) {\r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setStatusToNull();\r\n\r\n    this.variable = this.overlayPositionBuilder\r\n      // Create position attached to the elementRef\r\n      .flexibleConnectedTo(this.elementRef)\r\n      // Describe how to connect overlay to the elementRef\r\n      // Means, attach overlay's center bottom point to the\r\n      // top center point of the elementRef.\r\n      .withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'bottom',\r\n      }]);\r\n\r\n    this.setStatusToNull();\r\n\r\n    /*this.$requestStatusCode.subscribe(val => {\r\n      console.log(val);\r\n      this.isOpen = val === 423;\r\n    })*/\r\n\r\n\r\n    /*this.$requestStatusCode.subscribe(value => {\r\n      if (value !== undefined && value === 423 && this.mail.length > 0 && this.pwd.length > 0) {\r\n        this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n          width: '450px',\r\n          maxWidth: '450px',\r\n          minWidth: '280px',\r\n          height: '300px',\r\n          minHeight: '300px',\r\n          maxHeight: '300px',\r\n          data: {email: this.mail, password: this.pwd}\r\n        });\r\n      }\r\n    })*/\r\n\r\n  }\r\n\r\n  public setStatusToNull() {\r\n    this.isOpen = false;\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n  }\r\n\r\n  get mail(): string {\r\n    return this.formGroup.get('email').value;\r\n  }\r\n\r\n  get pwd(): string {\r\n    return this.formGroup.get('password').value;\r\n  }\r\n\r\n  public login(): void {\r\n    this.openToolTip.next(this.store.selectSnapshot(RequestStatusState.getStatusCode) === 423)\r\n    this.setStatusToNull();\r\n    console.log(this.testing);\r\n    this.pressedLogin = !this.pressedLogin;\r\n    const email = this.formGroup.get('email').value\r\n    const password = this.formGroup.get('password').value;\r\n    console.log(\"HALLLOOOO\");\r\n    this.store\r\n      .dispatch(\r\n        new AuthenticationActions.LoginAction(\r\n          new UserLoginModel(\r\n            email,\r\n            password\r\n          )\r\n        )).subscribe(value => {\r\n\r\n      console.log(\"HHHHHHHHHHHHHHHHHHHHHH66666\");\r\n      console.log(this.store.selectSnapshot(RequestStatusState.getStatusCode));\r\n      this.authService.isLoggedIn()\r\n        .subscribe(value1 => {\r\n          console.log(value1);\r\n\r\n          this.store.dispatch(new LoggedUserDetails(value1.body.userId));\r\n          this.close();\r\n        })\r\n    }, error => {\r\n      console.log(\"HHHHHHHHHHHHHHHHHHHHHH666668899\");\r\n    });\r\n  }\r\n\r\n  googleLogin(): void {\r\n    this.googleAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\r\n      .then(value => {\r\n        this.store.dispatch(new AuthenticationActions.LoginAction(\r\n          new GoogleUserLogin(value.email,\r\n            value.firstName, value.lastName,\r\n            value.photoUrl, value.idToken)\r\n        )).subscribe(value1 => {\r\n          this.store.dispatch(new AuthenticationActions.IsLoggedIn())\r\n            .subscribe(value2 =>\r\n              this.store.dispatch(\r\n                new LoggedUserDetails(value2.Authentication.user.userId))\r\n            )\r\n\r\n        });\r\n      });\r\n    this.close();\r\n  }\r\n\r\n  public close(): void {\r\n    this.closeTooltip.next(true);\r\n    // this.store.dispatch(new Navigate(['welcome']))\r\n    this.dialogRef.close();\r\n    this.store\r\n      .dispatch(new RequestMessageAction({message: '', status: 0}));\r\n  }\r\n\r\n  openRenewDialog() {\r\n    console.log(\"Na da schau her du beidl\");\r\n    this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n      data: {email: this.mail, password: this.pwd}\r\n    });\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.authService\r\n      .requestResetPasswordToken({email: this.mail})\r\n      .subscribe(value => new ShowEmailWasSentDialog(this.dialog, value));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setStatusToNull();\r\n  }\r\n}\r\n\r\n\r\nexport interface RenewAccountVerificationToken {\r\n  email?: string;\r\n  password?: string;\r\n  tokenError?: boolean;\r\n  message?: string;\r\n}\r\n","<div class=\"header-container shadow\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n  <div class=\"header\">\r\n    <strong>Login</strong>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"logo-container\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\r\n    <a (click)=\"close()\" mat-icon-button class=\"home_button\">\r\n      <!--<img width=\"40px\" height=\"40px\" style=\"margin-top: 0px\"  src=\"assets/Specshots-Logo.png\">-->\r\n      <mat-icon style=\"color: white\">close</mat-icon>\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"logo-container2 shadow\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <img class=\"logo-image\" width=\"40px\" height=\"40px\" style=\"margin-top: 0px\" src=\"assets/Specshots-Logo.png\">\r\n</div>\r\n<div style=\"margin-top: 10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <span fxLayout=\"column\" class=\"logo-name\" fxLayoutAlign=\"center center\">\r\n    <span style=\"font-size: 18px;\">Sign In with</span>\r\n    <span><strong>SpecShots</strong></span>\r\n  </span>\r\n</div>\r\n<!--<mat-divider style=\"color: black\"></mat-divider>-->\r\n\r\n<div (click)=\"isOpen = false\" class=\"content\"\r\n     [formGroup]=\"formGroup\"\r\n     fxLayout=\"column\"\r\n     fxLayoutAlign=\"center space-evenly\" fxLayoutGap=\"20px\">\r\n  <!--  <div class=\"icon\" >-->\r\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\r\n  <!--    -->\r\n  <!--  </div>-->\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Email</mat-label>\r\n      <input type=\"email\"\r\n             matInput [formControl]=\"emailFormField\">\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\" *ngIf=\"forgotPasswordPressed === false\">\r\n      <mat-label>Password</mat-label>\r\n      <input type=\"password\"\r\n             matInput [formControl]=\"passwordFormField\">\r\n    </mat-form-field>\r\n  </p>\r\n  <!--  <mat-grid-list gutterSize=\"10px\" cols=\"1\" rowHeight=\"220px\">-->\r\n  <!--    <mat-grid-tile>-->\r\n  <!--      <div class=\"container2\">-->\r\n  <!--        -->\r\n  <!--        -->\r\n  <!--      </div>-->\r\n  <!--    </mat-grid-tile>-->\r\n  <!--  </mat-grid-list>-->\r\n\r\n  <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"center stretch\" class=\"container\">\r\n    <!--<div *ngIf=\"forgotPasswordPressed === false\">\r\n\r\n    </div>-->\r\n\r\n    <!--<button *ngIf=\"forgotPasswordPressed === false\" [close]=\"closeTooltip\" [email]=\"mail\"\r\n            [password]=\"pwd\"\r\n            appVerifyTooltip=\"Your Account must be verified\"\r\n            (click)=\"login()\" color=\"primary\" class=\"shadow\"\r\n            mat-raised-button >Sign In\r\n    </button>-->\r\n\r\n    <ng-container *ngIf=\"forgotPasswordPressed === false\">\r\n      <button cdkOverlayOrigin\r\n              #trigger=\"cdkOverlayOrigin\"\r\n              (click)=\"login()\" color=\"primary\"\r\n              class=\"shadow\"\r\n              mat-raised-button>Sign In\r\n      </button>\r\n\r\n\r\n      <ng-template cdkConnectedOverlay\r\n                   [cdkConnectedOverlayOrigin]=\"trigger\"\r\n                   [cdkConnectedOverlayOpen]=\"(isOpen || ($requestStatusCode | async) === 423) && forgotPasswordPressed === false\">\r\n        <app-verify-tooltip (close)=\"closeToolTipFunc($event)\" [email]=\"mail\" [password]=\"pwd\"\r\n                            text=\"Verify your account!\"></app-verify-tooltip>\r\n      </ng-template>\r\n    </ng-container>\r\n\r\n\r\n    <button class=\"shadow\" *ngIf=\"forgotPasswordPressed === true\" (click)=\"forgotPassword()\"\r\n            mat-raised-button color=\"warn\">Reset Password\r\n    </button>\r\n\r\n    <button *ngIf=\"forgotPasswordPressed === true\"\r\n            (click)=\"forgotPasswordPressed = false;\" color=\"primary\" class=\"shadow\"\r\n            mat-raised-button>\r\n      <mat-icon>arrow_back</mat-icon>\r\n      Back to Sign In\r\n    </button>\r\n    <!--<button class=\"shadow\" (click)=\"close()\" mat-raised-button color=\"warn\">Close</button>-->\r\n\r\n    <button *ngIf=\"forgotPasswordPressed === false\" (click)=\"googleLogin()\" mat-icon-button>\r\n      <img style=\"margin-top: 15px\" src=\"../../../assets/btn_google_signin_dark_normal_web.png\" alt=\"FOO\">\r\n    </button>\r\n    <!--<button fxLayoutAlign=\"start\" (click)=\"openRenewDialog()\" style=\"background-color: white\" mat-raised-button\r\n            *ngIf=\"($requestStatusCode | async) === 423 && pressedLogin === true && forgotPasswordPressed === false\">\r\n      <img src=\"assets/padlock-5-64.png\" width=\"40px\" height=\"40px\" alt=\"\">\r\n      Your account needs to be verified\r\n    </button>-->\r\n\r\n    <!--<mat-dialog-actions>\r\n      <div>\r\n\r\n        &lt;!&ndash;<div class=\"btn-grp1\" fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n\r\n        </div>&ndash;&gt;\r\n        &lt;!&ndash;<div style=\"margin-top: 10px\" class=\"btn2\" fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n          <button fxLayoutAlign=\"start\" (click)=\"openRenewDialog()\" style=\"background-color: white\" mat-raised-button\r\n                  *ngIf=\"($requestStatusCode | async) === 423 && pressedLogin === true && forgotPasswordPressed === false\">\r\n            <img src=\"assets/padlock-5-64.png\" width=\"40px\" height=\"40px\" alt=\"\">\r\n            Your account needs to be verified\r\n          </button>\r\n        </div>\r\n        <button *ngIf=\"forgotPasswordPressed == false\" mat-icon-button (click)=\"forgotPasswordPressed = true\">\r\n          <mat-icon> vpn_key</mat-icon>\r\n          Forgot password?\r\n        </button>&ndash;&gt;\r\n      </div>\r\n    </mat-dialog-actions>-->\r\n    <mat-error *ngIf=\"($requestStatusCode | async) === 401 \">\r\n      <strong>Wrong credentials provided</strong>\r\n    </mat-error>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"footer\" style=\"margin-top: 30px\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n  <div class=\"forogt-box\" fxFlex=\"80\">\r\n    <button *ngIf=\"forgotPasswordPressed == false\" mat-icon-button (click)=\"forgotPasswordPressed = true;\">\r\n      Forgot password?\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"font-family: 'agave Nerd Font', sans-serif; color: white\">\r\n      <span><strong>SpecShots</strong></span>\r\n    <span class=\"small-txt\"> &#169;2020</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {TagModel} from \"../domain/tagModel/tag-model\";\nimport {distinctUntilChanged, switchMap, tap, throttleTime} from \"rxjs/operators\";\nimport { Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\nimport {GetZipCodesAndCitiesByRegion} from \"../app-state/actions/address-validation-action\";\nimport {SearchRequestService} from \"../../serviceV2/search.request.service\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressValidationService {\n  private readonly SEARCH_URL: string = environment.apiUrl + \"addresses/validate/\";\n  private readonly COUNTRIES: string = environment.apiUrl + \"addresses/get/all/countries\";\n  private readonly REGIONS: string = environment.apiUrl + \"addresses/regions/\";\n  private readonly ZIPCODES: string =  environment.apiUrl + \"query/searchByZipAndRegion/\";\n  constructor(private  http: HttpClient,\n              private searchReqService: SearchRequestService<ZipCodeAndCity>) { }\n\n  public getCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(this.COUNTRIES);\n  }\n\n  public getRegionsByCountry(countryName: string): Observable<Region[]> {\n    return this.http.get<Region[]>(this.REGIONS + countryName);\n  }\n\n  public getZipCodesAndCitiesByRegion(region: string): Observable<ZipCodeAndCity[]> {\n    return this.http.get<ZipCodeAndCity[]>(this.ZIPCODES + region);\n  }\n\n  public getZipCodesAndCitiesByRegion2(zipcode: Observable<string>, region: string): Observable<ZipCodeAndCity[]> {\n    return this.searchReqService.search(zipcode, this.ZIPCODES + region + \", \");\n  }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {BaseUserDetails, UserRegistrationModel} from \"../domain/userModel/user-details.model\";\r\nimport {UserAuthenticationService} from \"../../serviceV2/user-authentication.service\";\r\nimport {debounceTime, switchMap} from \"rxjs/operators\";\r\nimport {LoggedInUserModel, UserLoginModel} from \"../domain/userModel/UserLoginModel\";\r\nimport {Select, Store} from \"@ngxs/store\";\r\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\r\nimport LoginAction = AuthenticationActions.LoginAction;\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {\r\n  GetZipCodesAndCitiesByRegion,\r\n  GetCountriesAction,\r\n  GetRegionsAction\r\n} from \"../app-state/actions/address-validation-action\";\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {AddressValidationState} from \"../app-state/states/address.validation.state\";\r\nimport {QueryTagAction} from \"../app-state/actions/query-tag-action\";\r\nimport {AddressValidationService} from \"../service/address-validation.service\";\r\nimport {Country, Region, ZipCodeAndCity} from \"../domain/address-model/addres.view.model\";\r\nimport {MatSelectChange} from \"@angular/material/select\";\r\nimport {ImagesByTagState} from \"../app-state/states/images-by-tag-state\";\r\nimport {ImageModel} from \"../domain/imageModel/image.model\";\r\nimport {SignupState} from \"../app-state/states/signup.state\";\r\nimport {RequestStatusState} from \"../app-state/states/request-status.state\";\r\nimport {RequestMessageAction} from \"../app-state/actions/request-message.action\";\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  public disabled: boolean = true;\r\n  public invalid: boolean = true;\r\n  public formGroup;\r\n  countries$ = new Subject<Country[]>();\r\n  regions$ = new Subject<Region[]>();\r\n  currentCounty;\r\n  color = new FormControl(\"Warn\")\r\n  zipCodeAndCities$ = new Subject<ZipCodeAndCity[]>();\r\n  zipAndCities: ZipCodeAndCity[];\r\n  errorMsg: string = \"Password required\";\r\n\r\n\r\n  @Select(AddressValidationState.countries)\r\n  fetchedCountries$: Observable<Country[]>;\r\n\r\n  @Select(AddressValidationState.regions)\r\n  fetchedRegions$: Observable<Region[]>;\r\n\r\n  @Select(AddressValidationState.zipCodesAndCities)\r\n  fetchedZipcodesAndCities$: Observable<ZipCodeAndCity[]>;\r\n\r\n  @Select(SignupState.registrationModel)\r\n  registrationModel$: Observable<BaseUserDetails>;\r\n\r\n\r\n  @Select(RequestStatusState.getStatus) $requestStatus;\r\n\r\n\r\n  // form fields\r\n  public countryFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public lastNameFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public firstNameFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public cityFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public emailFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public passwordFormField =\r\n    new FormControl('', [Validators.required]);\r\n  public confirmPwdFormField =\r\n    new FormControl('', [Validators.required]);\r\n\r\n  public streetFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public regionFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n  public zipCodeFormField =\r\n    new FormControl({value: '', disabled: true},\r\n      [Validators.required]);\r\n\r\n  searchTerm$ = new Subject<string>();\r\n\r\n  constructor(private authService: UserAuthenticationService,\r\n              private store: Store,\r\n              private formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<SignupComponent>,\r\n              private addressService: AddressValidationService) {\r\n    this.formGroup = this.formBuilder.group({\r\n      firstName: this.firstNameFormField,\r\n      lastName: this.lastNameFormField,\r\n      /*street: this.streetFormField,\r\n      city: this.cityFormField,\r\n      country: this.countryFormField,\r\n      region: this.regionFormField,\r\n      zipcode: this.zipCodeFormField,*/\r\n      email: this.emailFormField,\r\n      password: this.passwordFormField,\r\n      confirmPassword: this.confirmPwdFormField\r\n    })\r\n\r\n    /*this.formGroup.get('zipcode').disable();*/\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n\r\n    this.registrationModel$.subscribe(\r\n      value => {\r\n        if (value.email.length > 1) {\r\n          this.store.dispatch(new AuthenticationActions.LoginAction(\r\n            new UserLoginModel(value.email, value.password)\r\n          )).pipe(switchMap(resp =>\r\n            this.store.dispatch(\r\n              new AuthenticationActions.LoggedUserDetails(\r\n                resp.Authentication.user.userId))\r\n          )).subscribe(value1 => value1)\r\n        }\r\n      }\r\n    )\r\n    /*this.validateCityAndZipFormFields();*/\r\n    this.store.dispatch(new GetCountriesAction())\r\n    /*this.fetchedZipcodesAndCities$\r\n      .subscribe(value => this.zipAndCities = value)*/\r\n  }\r\n\r\n  /*private validateCityAndZipFormFields() {\r\n    this.validateZipCodeFormField();\r\n    this.validateStreetFormField();\r\n  }\r\n\r\n  private validateZipCodeFormField() {\r\n    this.formGroup\r\n      .controls['zipcode']\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (this.formGroup.controls['city'].disabled)\r\n          this.invalid = true;\r\n      })\r\n  }\r\n\r\n  private validateStreetFormField() {\r\n    this.formGroup\r\n      .controls['street']\r\n      .valueChanges\r\n      .subscribe(val => {\r\n        if (this.formGroup.controls['street'].value.length > 0)\r\n          this.invalid = false;\r\n        else this.invalid = true;\r\n      })\r\n  }*/\r\n\r\n\r\n  closeDialog(): void {\r\n    // this.dialogRef.close(this.formGroup.value);\r\n    this.store.dispatch(new RequestMessageAction(null))\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectPostalAndSetCity(value: string) {\r\n    this.zipAndCities\r\n      .filter(value1 => value1.zipCode === value)\r\n      .forEach(value1 => this.cityFormField.setValue(value1.city))\r\n    this.streetFormField.enable();\r\n  }\r\n\r\n  register() {\r\n\r\n    const registrationModel = new UserRegistrationModel(\r\n      this.formGroup.controls['firstName'].value,\r\n      this.formGroup.controls['lastName'].value,\r\n      this.formGroup.controls['email'].value,\r\n      this.formGroup.controls['password'].value,\r\n      null, null, null, null\r\n    );\r\n\r\n\r\n\r\n    /*const registrationModel = new UserRegistrationModel(\r\n      this.formGroup.controls['firstName'].value,\r\n      this.formGroup.controls['lastName'].value,\r\n      this.formGroup.controls['email'].value,\r\n      this.formGroup.controls['password'].value,\r\n      this.formGroup.controls['street'].value,\r\n      this.formGroup.controls['region'].value,\r\n      this.formGroup.controls['zipcode'].value,\r\n      this.formGroup.controls['country'].value\r\n    );*/\r\n    this.store\r\n      .dispatch(new AuthenticationActions.SignUpAction(registrationModel))\r\n      .subscribe(value => this.authService.isLoggedIn())\r\n\r\n    /*this.closeDialog();*/\r\n  }\r\n\r\n  /*selectedCountry($event: MatSelectChange) {\r\n    console.log(this.disabled);\r\n    this.disabled = false;\r\n    console.log(this.disabled);\r\n    this.store.dispatch(new GetRegionsAction($event.value))\r\n      .subscribe(value => this.regionFormField.enable());\r\n  }*/\r\n\r\n  selectedRegion($event: MatSelectChange) {\r\n    this.formGroup.get('zipcode').enable();\r\n    this.searchTerm$\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        this.store\r\n          .dispatch(\r\n            new GetZipCodesAndCitiesByRegion(\r\n              new BehaviorSubject(value),\r\n              $event.value\r\n            )\r\n          )\r\n      });\r\n  }\r\n\r\n  changeZipCode($event: MatSelectChange) {\r\n  }\r\n\r\n  hasError = (controlName: string, errorName: string) => {\r\n    return this.formGroup.controls['firstName'].hasError(errorName)\r\n  }\r\n\r\n  checkPasswords() {\r\n    const length = this.formGroup.get('password').value.length > 0;\r\n    const confirmPwd = this.formGroup.controls['confirmPassword'].value;\r\n    const pwd = this.formGroup.get('password').value;\r\n\r\n    if (confirmPwd !== pwd && confirmPwd.length > 0 && length)\r\n      this.formGroup.controls['password']\r\n        .setErrors({'incorrect': true});\r\n\r\n    else if (length && confirmPwd.length > 0 && confirmPwd === pwd) {\r\n      this.formGroup.controls['password']\r\n        .setErrors(null);\r\n      this.invalid = false;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <span class=\"white-color\" style=\"font-family: 'agave Nerd Font', sans-serif\">\n      <strong>Create a new Account</strong>\n    </span>\n\n  <button (click)=\"closeDialog()\" mat-icon-button color=\"warn\">\n    <mat-icon class=\"white-color\">close</mat-icon>\n  </button>\n</div>\n\n\n<div class=\"logo-container2 shadow\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <img class=\"logo-image\" width=\"40px\" height=\"40px\" style=\"margin-top: 0px\" src=\"assets/Specshots-Logo.png\">\n</div>\n<div style=\"margin-top: 10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <span fxLayout=\"column\" class=\"logo-name\" fxLayoutAlign=\"center center\">\n    <span style=\"font-size: 18px;\">Register to </span>\n    <span><strong>SpecShots</strong></span>\n  </span>\n</div>\n\n<div fxLayoutGap=\"10px\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\"\n                    class=\"registration profile-icon\"\n                    [formGroup]=\"formGroup\">\n  <div fxLayoutGap=\"10px\" class=\"registration-container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Firstname</mat-label>\n      <input [formControl]=\"firstNameFormField\" [style.fontSize.px]=\"15\"\n             matInput>\n      <mat-error>Firstname is required</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Lastname</mat-label>\n      <input [style.fontSize.px]=\"15\"\n             matInput [formControl]=\"formGroup.get('lastName')\">\n      <mat-error>Lastname is required</mat-error>\n    </mat-form-field>\n  </div>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input name=\"email\" type=\"email\" ngModel [email]=\"true\"\n             [style.fontSize.px]=\"15\"\n             matInput [formControl]=\"emailFormField\"\n             pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n      <mat-error>Invalid email</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input (ngModelChange)=\"checkPasswords()\"\n             [style.fontSize.px]=\"15\" type=\"password\"\n             matInput [formControl]=\"passwordFormField\">\n      <mat-error>Invalid password</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Confirm password</mat-label>\n      <input (ngModelChange)=\"checkPasswords()\"\n             [style.fontSize.px]=\"15\" type=\"password\"\n             matInput [formControl]=\"confirmPwdFormField\">\n      <mat-error>Invalid password</mat-error>\n    </mat-form-field>\n\n    <button [disabled]=\"!formGroup.valid || invalid\" (click)=\"register()\" mat-raised-button color=\"primary\">Register</button>\n\n    <br>\n    <mat-error style=\"margin-top: 10px\" *ngIf=\"$requestStatus | async as status\">\n      {{status.message}}\n    </mat-error>\n\n\n\n\n  <!--  <div class=\"icon\" >-->\n  <!--    <mat-icon style=\"font-size: 60px\">account_box</mat-icon>-->\n  <!--    -->\n  <!--  </div>-->\n  <!--<mat-grid-list gutterSize=\"10px\" cols=\"2\" rowHeight=\"290px\">\n    <mat-grid-tile>\n      <div  class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Firstname</mat-label>\n          <input [formControl]=\"firstNameFormField\" [style.fontSize.px]=\"15\"\n                 matInput>\n          <mat-error>Firstname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Lastname</mat-label>\n          <input [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"formGroup.get('lastName')\">\n          <mat-error>Lastname is required</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Email</mat-label>\n          <input name=\"email\" type=\"email\" ngModel [email]=\"true\"\n                 [style.fontSize.px]=\"15\"\n                 matInput [formControl]=\"emailFormField\"\n                 pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n          <mat-error>Invalid email</mat-error>\n        </mat-form-field>\n        <mat-dialog-actions>\n          <button [disabled]=\"!formGroup.valid || invalid\" (click)=\"register()\" mat-raised-button color=\"primary\">Register</button>\n          <button (click)=\"closeDialog()\" mat-raised-button color=\"warn\">Close</button>\n          <br>\n          <mat-error style=\"margin-top: 10px\" *ngIf=\"$requestStatus | async as status\">\n            {{status.message}}\n          </mat-error>\n        </mat-dialog-actions>\n\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"container2\">\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"passwordFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <mat-form-field [style.width.px]=300>\n          <mat-label>Confirm password</mat-label>\n          <input (ngModelChange)=\"checkPasswords()\"\n                 [style.fontSize.px]=\"15\" type=\"password\"\n                 matInput [formControl]=\"confirmPwdFormField\">\n          <mat-error>Invalid password</mat-error>\n        </mat-form-field>\n        <div class=\"container\">\n\n        </div>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>-->\n</div>\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <span style=\"color: white\">Powered by SpecShots</span>\n    <span fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"white-color\" style=\"font-family: 'agave Nerd Font', sans-serif\">\n      &#169;2020\n    </span>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {ImagesByUserIdState} from \"../app-state/states/images-by-user-id.state\";\nimport {ImagesByUserIDAction} from \"../app-state/actions/image.action\";\nimport {UserDetailsActions} from \"../app-state/actions/user-details.action\";\nimport {UserDetailsState} from \"../app-state/states/User-details.state\";\nimport {AuthenticationActions} from \"../app-state/actions/authentication-action\";\nimport {LoginStateModel} from \"../app-state/states/login.state.model\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {LoggedUserDetailsState} from \"../app-state/states/logged-user-details.state\";\nimport {LoggedInUserModel} from \"../domain/userModel/UserLoginModel\";\nimport {BaseUserDetails} from \"../domain/userModel/user-details.model\";\n\n@Component({\n  selector: 'app-user-gallery',\n  templateUrl: './user-gallery.component.html',\n  styleUrls: ['./user-gallery.component.scss']\n})\nexport class UserGalleryComponent implements OnInit {\n  @Select(ImagesByUserIdState.getData) $byUserIdData;\n  @Select(UserDetailsState.firstLastName) $name;\n  @Select(UserDetailsState.profileImgPath) $profileImg;\n  @Select(UserDetailsState.getState) $state;\n  @Select(LoginStateModel.loggedInUser) $loggedUser;\n  downloadLink: any;\n  $isOwner = new BehaviorSubject<boolean>(false);\n\n  constructor(private route: ActivatedRoute,\n              private store: Store) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(param => {\n        const userId = param.get('userId');\n        this.store.dispatch(\n          [\n            new UserDetailsActions.GetUserDetails(userId),\n            new ImagesByUserIDAction(userId)\n          ]\n        )\n        this.$loggedUser.subscribe(user => {\n          if (user !== undefined && user !== null)\n            if (user.userId === userId) {\n              this.$isOwner.next(true);\n            }\n        })\n      })\n\n    // this.$state.subscribe(state => {\n    //   if (userId === state.userId) {\n    //     console.log(\"Super!!!!!!!!!\")\n    //   }\n    // })\n    // this.store.dispatch(new AuthenticationActions.IsLoggedIn())\n    //   .subscribe(value => {})\n    //\n    // this.$loggedUser.subscribe(user => {\n    //   if (user !== undefined && user !== null)\n    //     if (user.userId === userId) {\n    //       this.$isOwner.next(true);\n    //     }\n    //\n    //\n    // })\n\n  }\n\n  download(name: any, userId: any) {\n\n  }\n}\n","<app-search-toolbar></app-search-toolbar>\n<div class=\"container\">\n  <div class=\"filler_left\"></div>\n  <div class=\"left\">\n    <div class=\"profile_icon\">\n      <button *ngIf=\"!($profileImg | async)\" disabled mat-icon-button\n              aria-label=\"Example icon button with a home icon\">\n        <mat-icon style=\"font-size: 195px\">account_circle</mat-icon>\n      </button>\n      <img class=\"profile-img\" [src]=\"$profileImg | async\" alt=\"\">\n    </div>\n  </div>\n  <div class=\"right\">\n    <div class=\"title\">\n      <div class=\"user-name\">\n        <span *ngIf=\"$name | async\" style=\"font-size: 40px; margin-top: 2%; margin-bottom: 6px\">\n        <strong>\n          {{$name | async}}\n        </strong>\n      </span>\n      </div>\n      <br>\n      <div class=\"user-name\">\n        <!--        <p style=\"font-size: 17px\">-->\n        <!--          -->\n        <!--        </p>-->\n        <p style=\"font-size: 17px; line-height: 28px\">\n          Download free, beautiful high-quality photos curated by {{ $name | async }}.\n        </p>\n      </div>\n      <button *ngIf=\"$isOwner | async\" style=\"\" mat-icon-button>\n        <mat-icon>edit</mat-icon>\n        Edit profile\n      </button>\n    </div>\n  </div>\n</div>\n\n<mat-tab-group mat-stretch-tabs class=\"mat-tab-group\">\n  <mat-tab class=\"tab\" label=\"Gallery\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">photo_library</mat-icon>\n      Images\n    </ng-template>\n    <app-image-content [isProfile]=\"true\" [data]=\"$byUserIdData | async\"></app-image-content>\n<!--    <div class=\"container-2\">-->\n<!--      <div *ngFor=\"let item of $byUserIdData | async; index as i;\" class=\"tile\">-->\n<!--        <div class=\"tile-container\">-->\n<!--          <div class=\"img-tile\">-->\n<!--            <img class=\"img\" width=\"500px\" height=\"520px\" [src]=\"item.link\">-->\n<!--          </div>-->\n<!--          <div class=\"details\">-->\n<!--            <div class=\"content\">-->\n<!--              <button class=\"btn\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 70px\">account_circle</mat-icon>-->\n<!--              </button>-->\n<!--              <a mat-button href=\"#\">-->\n<!--                <h1>{{ 'User : @' + item.email.substr(0, item.email.indexOf('@')) }}</h1>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--            <div class=\"content-btn\">-->\n<!--              <a target=\"_self\" [href]=\"downloadLink\" (click)=\"download(item.name, item.userId)\" mat-icon-button>-->\n<!--                <mat-icon style=\"font-size: 60px\">save_alt</mat-icon>-->\n<!--              </a>-->\n<!--            </div>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n  </mat-tab>\n  <mat-tab label=\"Likes\">\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Likes\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"Third\"> Content 3</mat-tab>\n</mat-tab-group>\n\n","export class Base64ToBlobConverter {\r\n  public static dataURItoBlob(dataURI): Blob {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/png' });\r\n    return blob;\r\n  }\r\n}\r\n","import {MatDialog} from \"@angular/material/dialog\";\r\nimport {VerificationDialogComponent} from \"../../public/verification-dialog/verification-dialog.component\";\r\n\r\nexport class ShowEmailWasSentDialog {\r\n  constructor(private dialog: MatDialog, private value: any) {\r\n    console.log(value);\r\n    if (value.status === 200 || value.status === true) {\r\n      this.dialog.open(VerificationDialogComponent, {\r\n        data: {text: 'Email was sent successfully!'}\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Store} from \"@ngxs/store\";\r\nimport {CropAndDownload} from \"../app-state/actions/image.action\";\r\nimport {\r\n  CropAndDownloadStateModel,\r\n  GetBase64ForDownloadCropperState\r\n} from \"../app-state/states/get-base64-for-downloadCropper.state\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport {GetImageByIdState} from \"../app-state/states/get-image-by-id.state\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlobToBase64Pipe {\r\n  constructor(private store: Store) { }\r\n  public getBase64(source: Observable<ArrayBuffer>): Observable<string> {\r\n    return source.pipe(map(byteArray => {\r\n      let blob = new Blob([byteArray], {type: 'image/jpg'});\r\n      saveAs(blob, this.store.selectSnapshot(GetImageByIdState.getImageDetail).name);\r\n      return this.store.selectSnapshot(GetBase64ForDownloadCropperState.getModel).base64;\r\n    }));\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {UserAuthenticationService} from \"./serviceV2/user-authentication.service\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {RenewExpiredAccountTokenComponent} from \"./public/renew-expired-account-token/renew-expired-account-token.component\";\r\nimport {VerificationDialogComponent} from \"./public/verification-dialog/verification-dialog.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VerifyGuardGuard implements CanActivate {\r\n\r\n  constructor(private authService: UserAuthenticationService,\r\n              private router: Router,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const tokenId = next.params.id;\r\n    if (tokenId !== undefined && tokenId.length > 0) {\r\n      console.log(\"HALLLOO???\");\r\n      return this.authService\r\n        .validateRequestTokenUrl({tokenId: tokenId})\r\n        .pipe(map(value => {\r\n          console.log(\"Ich wars\");\r\n          console.log(value);\r\n          console.log(value.status);\r\n          this.router.navigate(['/welcome']);\r\n          if (value.status === true && value.alreadyProcessed) {\r\n            this.dialog.open(VerificationDialogComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data: {text: 'Account has been verified!'}\r\n            })\r\n          } else {\r\n            console.log(\"FOOOOOOOOOOOOOO\");\r\n            this.dialog.open(RenewExpiredAccountTokenComponent, {\r\n              width: '450px',\r\n              maxWidth: '450px',\r\n              minWidth: '280px',\r\n              height: '300px',\r\n              minHeight: '300px',\r\n              maxHeight: '300px',\r\n              data : {tokenError: true}, hasBackdrop: true\r\n            })\r\n          }\r\n          /*this.router.navigate(['/welcome']);*/\r\n          return false;\r\n        }));\r\n    }\r\n    /*this.router.navigate(['/welcome']);*/\r\n    return false;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8880/image-app/',\r\n  google_id: '200318745451-u9viua8onpt25sdmknka7i89uhdrknsd.apps.googleusercontent.com',\r\n  galleryAspectRatio: 1.0869, downloadAspectRatio: 1.7910,\r\n  desktopGalleryWidth: 500, desktopGalleryHeight: 460,\r\n  tabletGalleryWidth: 300, tabletGalleryHeight: 300 / 1.0869,\r\n  mobileGalleryWidth: 135, mobileGalleryHeight: 135 / 1.0869,\r\n  desktopDownloadWidth: 1200, desktopDownloadHeight: 670,\r\n  tabletDownloadWidth: 450, tabletDownloadHeight: 450 / 1.0869,\r\n  mobileDownloadWidth: 250, mobileDownloadHeight: 250 / 1.0869\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}